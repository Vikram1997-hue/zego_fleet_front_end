{"version":3,"sources":["webpack:///src/app/main/ruleEngine/rule-engine-settings/add-rule-engine/add-rule-engine.component.ts","webpack:///src/app/main/ruleEngine/rule-engine-settings/add-rule-engine/add-rule-engine.component.html","webpack:///src/app/main/ruleEngine/rule-engine-settings/rule-engine-settings-routing.module.ts","webpack:///src/app/main/ruleEngine/rule-engine-settings/rule-engine-settings.module.ts","webpack:///src/app/main/ruleEngine/rule-engine-settings/edit-rule-engine/edit-rule-engine.component.ts","webpack:///src/app/main/ruleEngine/rule-engine-settings/edit-rule-engine/edit-rule-engine.component.html","webpack:///src/app/main/ruleEngine/rule-engine-settings/rule-engine-dashboard/rule-engine-dashboard.component.ts","webpack:///src/app/main/ruleEngine/rule-engine-settings/rule-engine-dashboard/rule-engine-dashboard.component.html"],"names":["AddRuleEngineComponent","fb","service","localService","router","_snackBar","horizontalPosition","verticalPosition","orgName","isloading","disable_status","rangeValue","currentValue","minDate","dateLimit","selected","startDate","subtract","startOf","set","endDate","endOf","selectedShow","ranges","momentRange","alwaysShowCalendars","showRangeLabelOnInput","keepCalendarOpeningWithRange","showRange","exception","name","id","createaddRuleForm","getAllOrganization","vechileCategory","organization","JSON","parse","getItem","selectedOrgID","watchOrgData","subscribe","resp","orgId","isEqual","length","every","val","includes","url","window","location","hash","openSnackBar","filter","data","addRuleForm","patchValue","org_id","group","required","percentage_of_violation","duration_of_violation","score","road_type","road_factor","vehicle_category_id","weather","exception_type","day_night_driving","day_night_score","created_on","format","effective_from","get","pipe","res","vechilecategory","err","controls","history","back","value","valid","percentage_of_violation_min","percentage_of_violation_max","road_type_min","road_type_max","Number","gforce_limit","post","navigate","ruleengine","openSnackBarmodal","message","panelClass","openFromComponent","image","duration","goToLastPage","updatetype","submit","selector","templateUrl","styleUrls","routes","path","component","pathMatch","editruleengine","addruleengine","RuleEngineSettingsRoutingModule","forChild","imports","exports","RuleEngineSettingsModule","forRoot","extend","declarations","EditRuleEngineComponent","route","invalidDates","isInvalidDate","m","some","d","isSame","queryParams","params","details","obj","is_active","stringify","createdAt","checkValue","put","RuleEngineDashboardComponent","main","activeRoute","page","limit","active","pageSizeOptions","isTripHistoryLoading","displayedColumns","getRuleengineList","event","pageSize","queryParamsHandling","pageIndex","setItem","type","num","dataSource","rows","totalCount","count","setPage","ele","status","sort","slice","direction","a","b","isAsc","compare","vehicle_category","index","paginator","exceptionType","pageChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQQ;;AAA4D;;;;AAA8B;;;;AAA9B;;AAAA;;;;;;AAC5D;;AAA6D;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAQjD;;AAA8D;;AAAc;;;;;;AAAhE;;AAAkD;;AAAA;;;;;;;;AA0BtE;;AACI;;AAAW;;;;AAA6B;;AAAyC;;AACjF;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAK;;AAC3B;;AAAsB;;AAAK;;AAC3B;;AAAsB;;AAAM;;AAC5B;;AAAsB;;AAAI;;AAC9B;;AACJ;;;;;;AARe;;AAAA;;AAAmC;;AAAA;;AACuB;;AAAA;;;;;;AAQzE;;AACI;;AAAW;;AAAM;;AAAyC;;AAC1D;;AAQJ;;;;;;AAT2B;;AAAA;;;;;;AAiCnB;;AAAoE;;AAAc;;;;;;AAAtE;;AAAwD;;AAAA;;;;;;AA2BhF;;AACI;;AACJ;;;;AADyC;;AAAA;;;;UD/FpCA,sB;AA0CX;AACA;AACA,wCACUC,EADV,EAEUC,OAFV,EAGUC,YAHV,EAIUC,MAJV,EAKUC,SALV,EAKgC;AAAA;;AAJtB,eAAAJ,EAAA,GAAAA,EAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAhDV,eAAAC,kBAAA,GAAoD,QAApD;AACA,eAAAC,gBAAA,GAAgD,QAAhD;AAEA,eAAAC,OAAA,GAAkB,EAAlB;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,OAAA,GAAU,mCAAM,EAAhB;AACA,eAAAC,SAAA,GAAY,GAAZ;AACA,eAAAC,QAAA,GAAgB;AACdC,qBAAS,EAAE,mCAAM,GACdC,QADQ,CACC,CADD,EACI,OADJ,EAERC,OAFQ,CAEA,OAFA,EAGRC,GAHQ,CAGJ,OAHI,EAGK,CAHL,EAIRA,GAJQ,CAIJ,SAJI,EAIO,CAJP,CADG;AAMdC,mBAAO,EAAE,mCAAM,GACZH,QADM,CACG,CADH,EACM,OADN,EAENI,KAFM,CAEA,OAFA,EAGNF,GAHM,CAGF,OAHE,EAGO,EAHP,EAINA,GAJM,CAIF,SAJE,EAIS,EAJT;AANK,WAAhB;AAYA,eAAAG,YAAA,GAAoB;AAClBN,qBAAS,EAAE,mCAAM,GACdC,QADQ,CACC,CADD,EACI,OADJ,EAERC,OAFQ,CAEA,OAFA,EAGRC,GAHQ,CAGJ,OAHI,EAGK,CAHL,EAIRA,GAJQ,CAIJ,SAJI,EAIO,CAJP,CADO;AAMlBC,mBAAO,EAAE,mCAAM,GACZH,QADM,CACG,CADH,EACM,OADN,EAENI,KAFM,CAEA,OAFA,EAGNF,GAHM,CAGF,OAHE,EAGO,EAHP,EAINA,GAJM,CAIF,SAJE,EAIS,EAJT;AANS,WAApB;AAaA,eAAAI,MAAA,GAAc,oEAAUC,WAAxB;AACA,eAAAC,mBAAA,GAA+B,IAA/B;AACA,eAAAC,qBAAA,GAAiC,IAAjC;AACA,eAAAC,4BAAA,GAAwC,IAAxC;AACA,eAAAC,SAAA,GAAY,KAAZ;AAiFA,eAAAC,SAAA,GAAiB,CACf;AACEC,gBAAI,EAAE,UADR;AAEEC,cAAE,EAAE;AAFN,WADe,EAKf;AACED,gBAAI,EAAE,UADR;AAEEC,cAAE,EAAE;AAFN,WALe,EASf;AACED,gBAAI,EAAE,WADR;AAEEC,cAAE,EAAE;AAFN,WATe,EAaf;AACED,gBAAI,EAAE,cADR;AAEEC,cAAE,EAAE;AAFN,WAbe,EAiBf;AACED,gBAAI,EAAE,QADR;AAEEC,cAAE,EAAE;AAFN,WAjBe,CAAjB;AAxEI;;;;iBAEJ,oBAAQ;AAAA;;AACN,iBAAKC,iBAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKC,eAAL;AACA,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAW,KAAKlC,YAAL,CAAkBmC,OAAlB,CAA0B,SAA1B,CAAX,CAApB;AAEA,iBAAKC,aAAL,GAAqB,KAAKpC,YAAL,CAAkBmC,OAAlB,CAA0B,cAA1B,CAArB;;AACA,gBAAI,KAAKC,aAAT,EAAwB;AACtB,mBAAKA,aAAL,GAAqBH,IAAI,CAACC,KAAL,CAAW,KAAKE,aAAhB,CAArB;AACD;;AACD,iBAAKpC,YAAL,CAAkBqC,YAAlB,GAAiCC,SAAjC,CAA2C,UAACC,IAAD,EAAU;AACnD,kBAAIA,IAAJ,EAAU;AACR,oBAAIC,KAAK,GAAQ,KAAI,CAACxC,YAAL,CAAkBmC,OAAlB,CAA0B,cAA1B,CAAjB;;AACA,oBAAIK,KAAJ,EAAW;AACTA,uBAAK,GAAGP,IAAI,CAACC,KAAL,CAAWM,KAAX,CAAR;AACD;;AACD,oBAAIC,OAAO,GAAG,IAAd;;AACA,oBACE,KAAI,CAACL,aAAL,IACA,KAAI,CAACA,aAAL,CAAmBM,MADnB,IAEAF,KAFA,IAGAA,KAAK,CAACE,MAJR,EAKE;AACAD,yBAAO,GACLD,KAAK,CAACE,MAAN,KAAiB,KAAI,CAACN,aAAL,CAAmBM,MAApC,IACAF,KAAK,CAACG,KAAN,CAAY,UAACC,GAAD;AAAA,2BAAS,KAAI,CAACR,aAAL,CAAmBS,QAAnB,CAA4BD,GAA5B,CAAT;AAAA,mBAAZ,CAFF;AAGD,iBATD,MASO;AACLH,yBAAO,GAAG,KAAV;AACD;;AACD,oBAAI,CAACA,OAAL,EAAc;AACZ,uBAAI,CAACL,aAAL,sBAAyBI,KAAzB;AACD;AACF;;AACD,kBAAMM,GAAG,GAAGC,MAAM,CAACC,QAAnB;;AACA,kBACE,KAAI,CAACZ,aAAL,CAAmBM,MAAnB,GAA4B,CAA5B,IACAI,GAAG,CAACG,IAAJ,IAAY,iCAFd,EAGE;AACA,qBAAI,CAACC,YAAL;AACD,eALD,MAKO,IAAI,KAAI,CAACd,aAAL,CAAmBM,MAAnB,IAA6B,CAAjC,EAAoC;AACzC,qBAAI,CAACV,YAAL,CAAkBmB,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACjC,sBAAIA,IAAI,CAACxB,EAAL,IAAW,KAAI,CAACQ,aAAL,CAAmB,CAAnB,CAAf,EAAsC;AACpC,yBAAI,CAAC/B,OAAL,GAAe+C,IAAI,CAACzB,IAApB;AACD;AACF,iBAJD;;AAKA,qBAAI,CAAC0B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BC,wBAAM,EAAE,KAAI,CAACnB,aAAL,CAAmB,CAAnB;AADkB,iBAA5B;AAGD;AACF,aAvCD;;AAwCA,gBAAI,KAAKA,aAAL,CAAmBM,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,mBAAKQ,YAAL;AACD;;AACD,gBAAI,KAAKd,aAAL,CAAmBM,MAAnB,IAA6B,CAAjC,EAAoC;AAClC,mBAAKV,YAAL,CAAkBmB,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACjC,oBAAIA,IAAI,CAACxB,EAAL,IAAW,KAAI,CAACQ,aAAL,CAAmB,CAAnB,CAAf,EAAsC;AACpC,uBAAI,CAAC/B,OAAL,GAAe+C,IAAI,CAACzB,IAApB;AACD;AACF,eAJD;AAKA,mBAAK0B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BC,sBAAM,EAAE,KAAKnB,aAAL,CAAmB,CAAnB;AADkB,eAA5B;AAGD;;AACD,iBAAKJ,YAAL,CAAkBmB,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACjC,kBAAIA,IAAI,CAACxB,EAAL,IAAW,KAAI,CAACQ,aAAL,CAAmB,CAAnB,CAAf,EAAsC;AACpC,qBAAI,CAAC/B,OAAL,GAAe+C,IAAI,CAACzB,IAApB;AACD;AACF,aAJD;AAKD;;;iBA0BD,6BAAoB;AAClB,iBAAK0B,WAAL,GAAmB,KAAKvD,EAAL,CAAQ0D,KAAR,CAAc;AAC/BD,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWE,QAAhB,CADuB;AAE/BC,qCAAuB,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFM;AAG/BE,mCAAqB,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHQ;AAI/BG,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAJwB;AAK/BI,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CALoB;AAM/BK,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CANkB;AAO/BM,iCAAmB,EAAE,CAAC,EAAD,EAAK,0DAAWN,QAAhB,CAPU;AAQ/BO,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CARsB;AAS/BQ,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CATe;AAU/BS,+BAAiB,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB,CAVY;AAW/BU,6BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWV,QAAhB,CAXc;AAY/BW,wBAAU,EAAE,CAAC,mCAAM,GAAGC,MAAT,CAAgB,YAAhB,CAAD,CAZmB;AAa/BC,4BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWb,QAAhB;AAbe,aAAd,CAAnB;AAeD;;;iBAED,8BAAqB,CACnB;AACD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAK1D,OAAL,CACGwE,GADH,CACO,gEADP,EAEGC,IAFH,GAGGlC,SAHH,CAGa,UAACmC,GAAD,EAAS;AAClB,oBAAI,CAACC,eAAL,GAAuBD,GAAG,CAACrB,IAA3B;AACD,aALH,GAME,UAACuB,GAAD,EAAS,CAAE,CANb;AAOD;;;eACD,eAAQ;AACN,mBAAO,KAAKtB,WAAL,CAAiBuB,QAAxB;AACD;;;iBAED,wBAAe;AACb7B,kBAAM,CAAC8B,OAAP,CAAeC,IAAf;AACD;;;iBACD,sBAAa;AACX,gBAAI,KAAKzB,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,OAA7C,EAAsD;AACpD,mBAAKxC,SAAL,GAAe,KAAf;AACA,mBAAKhB,YAAL,GAAoB,sBAApB;AACD,aAHD,MAGO,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,UAA7C,EAAyD;AAC9D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,WAA7C,EAA0D;AAC/D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,cAA7C,EAA6D;AAClE,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,QAA7C,EAAuD;AAC5D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,EAApB;AACD;AACF;;;iBACD,kBAAS;AACP,gBAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,OAA7C,EAAsD,CACrD;;AACD,gBACE,KAAKZ,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAApC,IACA,KAAKR,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAFtC,EAGE;AACA,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAE;AADa,eAA5B;AAGD;;AACD,gBACE,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAApC,IACA,KAAKR,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAFtC,EAGE;AACA,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAE;AADa,eAA5B;AAGD,aAPD,MAOO,IAAI,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAAxC,EAA2C;AAChD,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAE;AADa,eAA5B;AAGD;AACF;;;iBAED,kBAAS;AAAA;;AACP;AAEA;AACA,gBAAG,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAwC,OAA3C,EAAmD;AACjD,mBAAKZ,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAC;AADc,eAA5B;AAGD;;AACD,gBAAI,KAAK1B,aAAL,CAAmBM,MAAnB,IAA6B,CAAjC,EAAoC;AAClC,kBAAI,KAAKW,WAAL,CAAiB2B,KAArB,EAA4B;AAC1B,qBAAK1E,SAAL,GAAiB,IAAjB;AACA,oBAAI2E,2BAA2B,GAAG,CAAlC;AACA,oBAAIC,2BAA2B,GAAG,CAAlC;AACA,oBAAIC,aAAa,GAAG,CAApB;AACA,oBAAIC,aAAa,GAAG,EAApB;;AAEA,oBAAI,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBrB,uBAAvB,IAAkD,CAAtD,EAAyD;AACvDuB,6CAA2B,GAAG,CAA9B;AACAC,6CAA2B,GAAG,EAA9B;AACD,iBAHD,MAGO,IAAI,KAAK7B,WAAL,CAAiB0B,KAAjB,CAAuBrB,uBAAvB,IAAkD,CAAtD,EAAyD;AAC9DuB,6CAA2B,GAAG,EAA9B;AACAC,6CAA2B,GAAG,GAA9B;AACD;;AACD,oBAAI,KAAK7B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAAxC,EAA2C;AACzCsB,+BAAa,GAAG,EAAhB;AACAC,+BAAa,GAAG,EAAhB;AACD,iBAHD,MAGO,IAAI,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAAxC,EAA2C;AAChDsB,+BAAa,GAAG,EAAhB;AACAC,+BAAa,GAAG,EAAhB;AACD,iBAHM,MAGA,IAAI,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAAxC,EAA2C;AAChDsB,+BAAa,GAAG,EAAhB;AACAC,+BAAa,GAAG,GAAhB;AACD,iBAHM,MAGA,IAAI,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAoC,CAAxC,EAA2C;AAChDsB,+BAAa,GAAG,GAAhB;AACAC,+BAAa,GAAG,IAAhB;AACD;;AACD,oBAAIhC,IAAI,GAAO;AACbG,wBAAM,EAAE,KAAKF,WAAL,CAAiB0B,KAAjB,CAAuBxB,MADlB;AAEb0B,6CAA2B,EAAEA,2BAFhB;AAGbC,6CAA2B,EAAEA,2BAHhB;AAIbvB,uCAAqB,EAAE0B,MAAM,CAC3B,KAAKhC,WAAL,CAAiB0B,KAAjB,CAAuBpB,qBADI,CAJhB;AAObC,uBAAK,EAAEyB,MAAM,CAAC,KAAKhC,WAAL,CAAiB0B,KAAjB,CAAuBnB,KAAxB,CAPA;AAQbuB,+BAAa,EAAEA,aARF;AASbC,+BAAa,EAAEA,aATF;AAUbtB,6BAAW,EAAE,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBjB,WAVvB;AAWbC,qCAAmB,EAAE,KAAKV,WAAL,CAAiB0B,KAAjB,CAAuBhB,mBAX/B;AAYbC,yBAAO,EAAE,KAAKX,WAAL,CAAiB0B,KAAjB,CAAuBf,OAZnB;AAabC,gCAAc,EAAE,KAAKZ,WAAL,CAAiB0B,KAAjB,CAAuBd,cAb1B;AAcbC,mCAAiB,EAAE,KAAKb,WAAL,CAAiB0B,KAAjB,CAAuBb,iBAd7B;AAebC,iCAAe,EAAEkB,MAAM,CAAC,KAAKhC,WAAL,CAAiB0B,KAAjB,CAAuBZ,eAAxB,CAfV;AAgBbG,gCAAc,EAAE,mCAAM,CACpB,KAAKjB,WAAL,CAAiB0B,KAAjB,CAAuBT,cAAvB,CAAsCzD,SADlB,CAAN,CAEdwD,MAFc,CAEP,YAFO;AAhBH,iBAAf;;AAuBA,oBAAGjB,IAAI,CAACa,cAAL,IAAqB,OAAxB,EAAgC;AAChCb,sBAAI,CAACU,WAAL,GAAiB,SAAjB;AACAV,sBAAI,CAAC+B,aAAL,GAAmB,GAAnB;AACA/B,sBAAI,CAACgC,aAAL,GAAmB,IAAnB;AACEhC,sBAAI,CAACkC,YAAL,GAAkB,KAAKjC,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAzC;AACD,iBAvDyB,CA0D1B;;;AACA,qBAAK9D,OAAL,CACGwF,IADH,CACQ,oBADR,EAC8BnC,IAD9B,EAEGoB,IAFH,GAGGlC,SAHH,CAGa,UAACmC,GAAD,EAAS;AAClB,wBAAI,CAACxE,MAAL,CAAYuF,QAAZ,CAAqB,CAAC,wEAAYC,UAAZ,CAAuB3C,GAAxB,CAArB;AACD,iBALH,GAME,UAAC6B,GAAD,EAAS;AACP,wBAAI,CAACrE,SAAL,GAAe,KAAf;AACD,iBARH;AASD;AACF,aAtED,MAsEO;AACL,mBAAK4C,YAAL;AACD;AACF;;;iBAED,wBAAe;AACb,iBAAKwC,iBAAL,CACE,qCADF,EAEE,aAFF;AAID;;;iBACD,2BAAkBC,OAAlB,EAA2BC,UAA3B,EAA+C;AAC7C,iBAAK1F,SAAL,CAAe2F,iBAAf,CAAiC,uGAAjC,EAAoD;AAClDzC,kBAAI,EAAE;AAAE0C,qBAAK,EAAE,IAAT;AAAeH,uBAAO,EAAEA;AAAxB,eAD4C;AAElDC,wBAAU,EAAEA,UAFsC;AAGlDG,sBAAQ,EAAE,IAHwC;AAIlD5F,gCAAkB,EAAE,KAAKA,kBAJyB;AAKlDC,8BAAgB,EAAE,KAAKA;AAL2B,aAApD;AAOD;;;iBACD,uBAAcwB,EAAd,EAAkB;AAAA;;AAChB,iBAAKI,YAAL,CAAkBmB,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACjC,kBAAIA,IAAI,CAACxB,EAAL,IAAWA,EAAf,EAAmB;AACjB,sBAAI,CAACvB,OAAL,GAAe+C,IAAI,CAACzB,IAApB;AACD;AACF,aAJD;AAKD;;;;;;;yBA3UU9B,sB,EAAsB,2H,EAAA,0I,EAAA,4I,EAAA,uH,EAAA,wI;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,iB;AAAA,gB;AAAA,4wD;AAAA;AAAA;ACpBnC;;AACI;;AAAgC;AAAA,qBAAS,IAAAmG,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAwC;;AACjG;;AAAuB;;;;AAA2C;;AACtE;;AACA;;AACI;;AAAsB;;AAA4B;;AAClD;;AACI;;AAAyB;;;;AAA6B;;AACtD;;AACA;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AAA6C;AAAA,qBAAmB,IAAAC,UAAA,EAAnB;AAA+B,aAA/B;;AACzC;;AAEJ;;AAEJ;;AACA;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AACI;;AAAyC;;AACrC;;AACI;;AAAyC;;AACrC;;AAAuB;;AAAqC;;AAChF;;AACJ;;AAEA;;AACI;;AAAW;;;;AAA+B;;AAC1C;;AACJ;;AAEA;;AACI;;AAAW;;;;AAA4B;;AACvC;;AACJ;;AAEA;;AAUA;;AAYA;;AACI;;AAAW;;;;AAA8B;;AACzC;;AACI;;AAAyB;;AAAI;;AAC7B;;AAAyB;;AAAI;;AAEjC;;AACJ;;AAEA;;AACI;;AAAW;;;;AAAiC;;AAC5C;;AACI;;AAAyB;;AAAI;;AAC7B;;AAAiC;;AAAiB;;AAClD;;AAA4B;;AAAO;;AAGvC;;AACJ;;AACA;;AACI;;AAAW;;;;AAAkC;;AAC7C;;AACI;;AAEJ;;AACJ;;AAEA;;AACI;;AAAW;;;;AAAuC;;AAClD;;AACI;;AAAwB;;AAAG;;AAC3B;;AAA0B;;AAAK;;AACnC;;AACJ;;AACA;;AACI;;AAAW;;;;AAAyC;;AACpD;;AACJ;;AACA;;AACI;;AAAW;;AAAU;;AACrB;;AACJ;;AACA;;AACI;;AAAW;;AAAc;;AACzB;;AACJ;;AAGJ;;AACA;;AAGA;;AACI;;AAA4B;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;;;AAA0B;;AAC7E;;AACJ;;AACJ;;;;AAvH2B;;AAAA;;AAKM;;AAAA;;AACK;;AAAA;;AACA;;AAAA;;AAE5B;;AAAA;;AAM0D;;AAAA;;AAiBzC;;AAAA;;AAKA;;AAAA;;AAI+C;;AAAA;;AAUC;;AAAA;;AAahD;;AAAA;;AASA;;AAAA;;AAC+B;;AAAA;;AAS/B;;AAAA;;AAEyC;;AAAA;;AAMzC;;AAAA;;AAOA;;AAAA;;AASiB;;AAAA,+FAAyB,WAAzB,EAAyB,IAAzB;;AAKR;;AAAA;;AAIuB;;AAAA;;;;;;;;;;wEDlG9CrG,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTsG,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,mHAFb;AAGEC,iBAAS,EAAE;AAHb,OADqB,EAMrB;AACEF,YAAI,EAAE,wEAAYG,cAAZ,CAA2BH,IADnC;AAEEC,iBAAS,EAAE,oGAFb;AAGEC,iBAAS,EAAE;AAHb,OANqB,EAWrB;AACEF,YAAI,EAAE,wEAAYI,aAAZ,CAA0BJ,IADlC;AAEEC,iBAAS,EAAE,iGAFb;AAGEC,iBAAS,EAAE;AAHb,OAXqB,CAAvB;;UAsBaG,+B;;;;;cAAAA;;;;2BAAAA,+B;AAA+B,S;AAAA,kBAHjC,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGiC,EAFhC,4DAEgC;;;;4HAA/BM,+B,EAA+B;AAAA;AAAA,oBAFhC,4DAEgC;AAAA,S;AAFpB,O;;;;;wEAEXA,+B,EAA+B;gBAJ3C,sDAI2C;iBAJlC;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERS,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIkC,U;;;;;;;;;;;;;;;;;;AC7B5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA0BaC,wB;;;;;cAAAA;;;;2BAAAA,wB;AAAwB,S;AAAA,kBAZ1B,CACP,4DADO,EAEP,oGAFO,EAGP,uEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,kFAAqBC,OAArB,EANO,EAOP,oEAAgBJ,QAAhB,CAAyB;AACvBK,gBAAM,EAAE;AADe,SAAzB,CAPO,CAY0B;;;;4HAAxBF,wB,EAAwB;AAAA,yBAbpB,mHAaoB,EAbU,oGAaV,EAbmC,iGAanC;AAbyD,oBAE1F,4DAF0F,EAG1F,oGAH0F,EAI1F,uEAJ0F,EAK1F,0DAL0F,EAM1F,kEAN0F,EAMvE,iFANuE,EAMvE,mEANuE;AAazD,S;AAPd,O;;;;;wEAOVA,wB,EAAwB;gBAdpC,sDAcoC;iBAd3B;AACRG,wBAAY,EAAE,CAAC,mHAAD,EAA+B,oGAA/B,EAAwD,iGAAxD,CADN;AAERL,mBAAO,EAAE,CACP,4DADO,EAEP,oGAFO,EAGP,uEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,kFAAqBG,OAArB,EANO,EAOP,oEAAgBJ,QAAhB,CAAyB;AACvBK,oBAAM,EAAE;AADe,aAAzB,CAPO;AAFD,W;AAc2B,U;;;;;;;;;;;;;;;;;;AC1BrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBoB;;AAA8D;;AAAc;;;;;;AAAhE;;AAAkD;;AAAA;;;;;;;;AAwBtE;;AACI;;AAAW;;;;AAA6B;;AAAwC;;AAChF;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAK;;AAC3B;;AAAsB;;AAAK;;AAC3B;;AAAsB;;AAAM;;AAC5B;;AAAsB;;AAAI;;AAC5B;;AACN;;;;;;AARe;;AAAA;;AAAmC;;AAAA;;AACuB;;AAAA;;;;;;AAQzE;;AACI;;AAAW;;AAAK;;AAAyC;;AACzD;;AAQJ;;;;;;AAT0B;;AAAA;;;;;;AAgClB;;AAAoE;;AAAc;;;;;;AAAtE;;AAAwD;;AAAA;;;;;;AAoDhF;;AACI;;AACJ;;;;AADyC;;AAAA;;;;UD3HpCE,uB;AAMX,yCACUtH,EADV,EAEUC,OAFV,EAGUC,YAHV,EAISqH,KAJT,EAKUpH,MALV,EAKwB;AAAA;;AAAA;;AAJd,eAAAH,EAAA,GAAAA,EAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACD,eAAAqH,KAAA,GAAAA,KAAA;AACC,eAAApH,MAAA,GAAAA,MAAA;AARV,eAAAK,SAAA,GAAU,KAAV;AACA,eAAAG,YAAA,GAAa,EAAb;AACA,eAAAgB,SAAA,GAAY,KAAZ;AAqBA,eAAAC,SAAA,GAAc,CACZ;AACEC,gBAAI,EAAC,UADP;AAEEC,cAAE,EAAC;AAFL,WADY,EAKZ;AACED,gBAAI,EAAC,UADP;AAEEC,cAAE,EAAC;AAFL,WALY,EASZ;AACED,gBAAI,EAAC,WADP;AAEEC,cAAE,EAAC;AAFL,WATY,EAaZ;AACED,gBAAI,EAAC,cADP;AAEEC,cAAE,EAAC;AAFL,WAbY,EAiBZ;AACED,gBAAI,EAAC,QADP;AAEEC,cAAE,EAAC;AAFL,WAjBY,CAAd;AA8DA,eAAA0F,YAAA,GAAe,EAAf;;AACA,eAAAC,aAAA,GAAgB,UAACC,CAAD,EAAO;AACrB,mBAAO,MAAI,CAACF,YAAL,CAAkBG,IAAlB,CAAuB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,MAAF,CAASH,CAAT,EAAY,KAAZ,CAAJ;AAAA,aAAxB,CAAP;AACD,WAFD;AA7EK;;;;iBAEL,oBAAQ;AAAA;;AACN,iBAAKH,KAAL,CAAWO,WAAX,CACCtF,SADD,CACW,UAAAuF,MAAM,EAAI;AACnB,kBAAMC,OAAO,GAAOD,MAAM,CAACC,OAA3B;AACA,oBAAI,CAACA,OAAL,GAAe7F,IAAI,CAACC,KAAL,CAAW4F,OAAX,CAAf;AACD,aAJD;AAMA,iBAAKjG,iBAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKC,eAAL;AACD;;;iBA0BD,6BAAiB;AACf,gBAAIgG,GAAG,GAAM;AACXlH,uBAAS,EAAC,EADC;AAEXI,qBAAO,EAAC;AAFG,aAAb,CADe,CAKf;;AACA,gBAAG,KAAK6G,OAAL,CAAaxD,cAAb,IAA6B,IAAhC,EAAqC;AACnCyD,iBAAG,GAAE;AACHlH,yBAAS,EAAC,mCAAM,CAAC,KAAKiH,OAAL,CAAaxD,cAAd,CADb;AAEHrD,uBAAO,EAAC,mCAAM,CAAC,KAAK6G,OAAL,CAAaxD,cAAd;AAFX,eAAL;AAID,aALD,MAMI;AACFyD,iBAAG,GAAE,EAAL;AACD;;AAGD,iBAAK1E,WAAL,GAAmB,KAAKvD,EAAL,CAAQ0D,KAAR,CAAc;AAC/BD,oBAAM,EAAE,CAAC,KAAKuE,OAAL,CAAavE,MAAd,EAAqB,0DAAWE,QAAhC,CADuB;AAE/BC,qCAAuB,EAAE,CAAC,EAAD,EAAI,0DAAWD,QAAf,CAFM;AAG/BE,mCAAqB,EAAE,CAAC,KAAKmE,OAAL,CAAanE,qBAAd,EAAoC,0DAAWF,QAA/C,CAHQ;AAI/BG,mBAAK,EAAE,CAAC,KAAKkE,OAAL,CAAalE,KAAd,EAAoB,0DAAWH,QAA/B,CAJwB;AAK/BI,uBAAS,EAAE,CAAC,EAAD,EAAI,0DAAWJ,QAAf,CALoB;AAM/BK,yBAAW,EAAE,CAAC,KAAKgE,OAAL,CAAahE,WAAd,EAA0B,0DAAWL,QAArC,CANkB;AAO/BM,iCAAmB,EAAE,CAAC,KAAK+D,OAAL,CAAa/D,mBAAd,EAAkC,0DAAWN,QAA7C,CAPU;AAQ/BO,qBAAO,EAAE,CAAC,KAAK8D,OAAL,CAAa9D,OAAd,EAAsB,0DAAWP,QAAjC,CARsB;AAS/BQ,4BAAc,EAAE,CAAC,KAAK6D,OAAL,CAAa7D,cAAd,EAA6B,0DAAWR,QAAxC,CATe;AAU/BS,+BAAiB,EAAE,CAAC,KAAK4D,OAAL,CAAa5D,iBAAd,EAAgC,0DAAWT,QAA3C,CAVY;AAW/BU,6BAAe,EAAE,CAAC,KAAK2D,OAAL,CAAa3D,eAAd,EAA8B,0DAAWV,QAAzC,CAXc;AAY/BuE,uBAAS,EAAC,CAAC/F,IAAI,CAACgG,SAAL,CAAe,KAAKH,OAAL,CAAaE,SAA5B,CAAD,CAZqB;AAa/B5D,wBAAU,EAAC,CAAE,mCAAM,CAAC,KAAK0D,OAAL,CAAaI,SAAd,CAAN,CAA+B7D,MAA/B,CAAsC,YAAtC,CAAF,CAboB;AAc/BC,4BAAc,EAAC,CAACyD,GAAD,EAAK,0DAAWtE,QAAhB;AAdgB,aAAd,CAAnB,CAjBe,CAiCjB;;AAEE,iBAAK0E,UAAL;AACA,iBAAKlC,UAAL;AACD;;;iBAKD,sBAAa;AACX,gBAAI,KAAK5C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,OAA7C,EAAsD;AACpD,mBAAKxC,SAAL,GAAe,KAAf;AACA,mBAAKhB,YAAL,GAAoB,sBAApB;AACD,aAHD,MAGO,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,UAA7C,EAAyD;AAC9D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,WAA7C,EAA0D;AAC/D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,cAA7C,EAA6D;AAClE,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,gCAApB;AACD,aAHM,MAGA,IAAI,KAAK4C,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAyC,QAA7C,EAAuD;AAC5D,mBAAKxC,SAAL,GAAe,IAAf;AACA,mBAAKhB,YAAL,GAAoB,EAApB;AACD;;AACD,iBAAK0H,UAAL;AACD;;;iBACD,sBAAU;AACR,gBAAG,KAAKL,OAAL,CAAa7C,2BAAb,IAA0C,CAA1C,IAA+C,KAAK6C,OAAL,CAAa5C,2BAAb,IAA0C,CAA5F,EAA8F;AAC5F,mBAAK7B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BI,uCAAuB,EAAC;AADE,eAA5B;AAGD,aAJD,MAKK,IAAG,KAAKoE,OAAL,CAAa7C,2BAAb,IAA0C,CAA1C,IAA+C,KAAK6C,OAAL,CAAa5C,2BAAb,IAA0C,EAA5F,EAA+F;AAClG,mBAAK7B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BI,uCAAuB,EAAC;AADE,eAA5B;AAGD,aAJI,MAKA,IAAG,KAAKoE,OAAL,CAAa7C,2BAAb,IAA0C,EAA7C,EAAgD;AACnD,mBAAK5B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BI,uCAAuB,EAAC;AADE,eAA5B;AAGD;;AAEF,gBAAG,KAAKL,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAuC,OAA1C,EAAkD;AACjD,kBAAG,KAAK6D,OAAL,CAAa3C,aAAb,IAA4B,CAA5B,IAAiC,KAAK2C,OAAL,CAAa3C,aAAb,IAA4B,EAAhE,EAAmE;AACjE,qBAAK9B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,2BAAS,EAAE;AADe,iBAA5B;AAGD,eAJD,MAKK,IAAG,KAAKiE,OAAL,CAAa3C,aAAb,IAA4B,EAA5B,IAAkC,KAAK2C,OAAL,CAAa3C,aAAb,GAA2B,EAAhE,EAAmE;AACtE,qBAAK9B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,2BAAS,EAAE;AADe,iBAA5B;AAGD,eAJI,MAKA,IAAG,KAAKiE,OAAL,CAAa3C,aAAb,IAA4B,EAA5B,IAAkC,KAAK2C,OAAL,CAAa3C,aAAb,GAA2B,EAAhE,EAAmE;AACtE,qBAAK9B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,2BAAS,EAAE;AADe,iBAA5B;AAGD,eAJI,MAKA,IAAG,KAAKiE,OAAL,CAAa3C,aAAb,IAA4B,EAA5B,IAAkC,KAAK2C,OAAL,CAAa3C,aAAb,GAA2B,GAAhE,EAAoE;AACvE,qBAAK9B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,2BAAS,EAAE;AADe,iBAA5B;AAGD,eAJI,MAKA,IAAG,KAAKiE,OAAL,CAAa3C,aAAb,IAA4B,GAA5B,IAAmC,KAAK2C,OAAL,CAAa1C,aAAb,GAA2B,IAAjE,EAAsE;AACzE,qBAAK/B,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,2BAAS,EAAE;AADe,iBAA5B;AAGD;AACD,aA1BD,MA2BI;AACF,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BO,yBAAS,EAAC,KAAKiE,OAAL,CAAaxC;AADG,eAA5B;AAGD,aAhDQ,CAiDR;;AACD;;;iBACD,kBAAM;AACJ;AACA,gBAAG,KAAKjC,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAAlC,IAAuC,KAAKR,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAA5E,EAA8E;AAC5E,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAC;AADc,eAA5B;AAGD;;AACD,gBAAG,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAAlC,IAAuC,KAAKR,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAA5E,EAA8E;AAC5E,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAC;AADc,eAA5B;AAGD,aAJD,MAKK,IAAG,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAArC,EAAuC;AAC1C,mBAAKR,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAC;AADc,eAA5B;AAGD,aAhBG,CAiBJ;;AACD;;;iBAED,8BAAkB;AAChB,iBAAK9B,YAAL,GAAkBC,IAAI,CAACC,KAAL,CAAW,KAAKlC,YAAL,CAAkBmC,OAAlB,CAA0B,SAA1B,CAAX,CAAlB,CADgB,CAEhB;AACD;;;iBACD,2BAAe;AAAA;;AACb,iBAAKpC,OAAL,CAAawE,GAAb,CAAiB,gEAAjB,EAAmFC,IAAnF,GAA0FlC,SAA1F,CAAoG,UAAAmC,GAAG,EAAE;AACvG,oBAAI,CAACC,eAAL,GAAqBD,GAAG,CAACrB,IAAzB;AACD,aAFD,GAEG,UAAAuB,GAAG,EAAE,CAEP,CAJD;AAKD;;;eACD,eAAQ;AACN,mBAAO,KAAKtB,WAAL,CAAiBuB,QAAxB;AACD;;;iBAED,wBAAe;AACb7B,kBAAM,CAAC8B,OAAP,CAAeC,IAAf;AACD;;;iBAED,kBAAM;AAAA;;AACJ,gBAAG,KAAKzB,WAAL,CAAiB0B,KAAjB,CAAuBd,cAAvB,IAAwC,OAA3C,EAAmD;AACjD,mBAAKZ,WAAL,CAAiBC,UAAjB,CAA4B;AAC1BQ,2BAAW,EAAC;AADc,eAA5B;AAGD,aALG,CAMJ;;;AACA,gBAAG,KAAKT,WAAL,CAAiB2B,KAApB,EAA0B;AACxB,mBAAK1E,SAAL,GAAe,IAAf;AACA,kBAAI2E,2BAA2B,GAAC,CAAhC;AACA,kBAAIC,2BAA2B,GAAC,CAAhC;AACA,kBAAIC,aAAa,GAAC,CAAlB;AACA,kBAAIC,aAAa,GAAC,EAAlB,CALwB,CAMxB;;AACA,kBAAG,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBrB,uBAAvB,IAAgD,CAAnD,EAAqD;AACnDuB,2CAA2B,GAAC,CAA5B;AACAC,2CAA2B,GAAC,EAA5B;AACD,eAHD,MAIK,IAAG,KAAK7B,WAAL,CAAiB0B,KAAjB,CAAuBrB,uBAAvB,IAAgD,CAAnD,EAAqD;AACxDuB,2CAA2B,GAAC,EAA5B;AACAC,2CAA2B,GAAC,GAA5B;AACD;;AACD,kBAAG,KAAK7B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAArC,EAAuC;AACrCsB,6BAAa,GAAC,EAAd;AACAC,6BAAa,GAAC,EAAd;AACD,eAHD,MAIK,IAAG,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAArC,EAAuC;AAC1CsB,6BAAa,GAAC,EAAd;AACAC,6BAAa,GAAC,EAAd;AACD,eAHI,MAIA,IAAG,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAArC,EAAuC;AAC1CsB,6BAAa,GAAC,EAAd;AACAC,6BAAa,GAAC,GAAd;AACD,eAHI,MAIA,IAAG,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAvB,IAAkC,CAArC,EAAuC;AAC1CsB,6BAAa,GAAC,GAAd;AACAC,6BAAa,GAAC,IAAd;AACD;;AACD,kBAAG,KAAK/B,WAAL,CAAiB0B,KAAjB,CAAuBd,cAA1B,EAAyC,CAExC;;AACD,kBAAIb,IAAI,GAAK;AACXxB,kBAAE,EAAC,KAAKkG,OAAL,CAAalG,EADL;AAEX2B,sBAAM,EAAE,KAAKF,WAAL,CAAiB0B,KAAjB,CAAuBxB,MAFpB;AAGb0B,2CAA2B,EAAEA,2BAHhB;AAIbC,2CAA2B,EAAEA,2BAJhB;AAKbvB,qCAAqB,EAAC,KAAKN,WAAL,CAAiB0B,KAAjB,CAAuBpB,qBALhC;AAMbC,qBAAK,EAAE,KAAKP,WAAL,CAAiB0B,KAAjB,CAAuBnB,KANjB;AAObuB,6BAAa,EAAEA,aAPF;AAQbC,6BAAa,EAAEA,aARF;AASbtB,2BAAW,EAAE,KAAKT,WAAL,CAAiB0B,KAAjB,CAAuBjB,WATvB;AAUbC,mCAAmB,EAAC,KAAKV,WAAL,CAAiB0B,KAAjB,CAAuBhB,mBAV9B;AAWbC,uBAAO,EAAE,KAAKX,WAAL,CAAiB0B,KAAjB,CAAuBf,OAXnB;AAYbC,8BAAc,EAAC,KAAKZ,WAAL,CAAiB0B,KAAjB,CAAuBd,cAZzB;AAabC,iCAAiB,EAAE,KAAKb,WAAL,CAAiB0B,KAAjB,CAAuBb,iBAb7B;AAcbC,+BAAe,EAAC,KAAKd,WAAL,CAAiB0B,KAAjB,CAAuBZ,eAd1B;AAebG,8BAAc,EAAE,mCAAM,CAAC,KAAKjB,WAAL,CAAiB0B,KAAjB,CAAuBT,cAAvB,CAAsCzD,SAAvC,CAAN,CAAwDwD,MAAxD,CAA+D,YAA/D,CAfH;AAgBXD,0BAAU,EAAC,KAAKf,WAAL,CAAiB0B,KAAjB,CAAuBX,UAhBvB;AAiBX4D,yBAAS,EAAC/F,IAAI,CAACC,KAAL,CAAW,KAAKmB,WAAL,CAAiB0B,KAAjB,CAAuBiD,SAAlC;AAjBC,eAAb;;AAmBA,kBAAG5E,IAAI,CAACa,cAAL,IAAqB,OAAxB,EAAgC;AAC9Bb,oBAAI,CAACU,WAAL,GAAiB,SAAjB;AACAV,oBAAI,CAAC+B,aAAL,GAAmB,GAAnB;AACA/B,oBAAI,CAACgC,aAAL,GAAmB,IAAnB;AACEhC,oBAAI,CAACkC,YAAL,GAAkB,KAAKjC,WAAL,CAAiB0B,KAAjB,CAAuBlB,SAAzC;AACD,eA1DqB,CA2DxB;;;AACA,mBAAK9D,OAAL,CAAaqI,GAAb,CAAiB,kBAAjB,EAAoChF,IAApC,EAA0CoB,IAA1C,GAAiDlC,SAAjD,CAA2D,UAAAmC,GAAG,EAAE;AAC9D,sBAAI,CAACxE,MAAL,CAAYuF,QAAZ,CAAqB,CAAC,wEAAYC,UAAZ,CAAuB3C,GAAxB,CAArB;AACD,eAFD,GAEG,UAAA6B,GAAG,EAAE;AACN,sBAAI,CAACrE,SAAL,GAAe,KAAf;AACD,eAJD;AAKD;AACF;;;;;;;yBAlRU8G,uB,EAAuB,2H,EAAA,0I,EAAA,4I,EAAA,+H,EAAA,uH;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA,kB;AAAA,gB;AAAA,w3D;AAAA;AAAA;ACbpC;;AACI;;AAAgC;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAwC;;AACjG;;AAAuB;;;;AAA2C;;AACtE;;AACA;;AACI;;AAAsB;;AAAyB;;AAC/C;;AACI;;AAAyB;;;;AAAiC;;AAC1D;;AAA6B;;AAA+B;;AAChE;;AACI;;AACA;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AAA6C;AAAA,qBAAmB,IAAAC,UAAA,EAAnB;AAA+B,aAA/B;;AACzC;;AAEF;;AAEN;;AACA;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AAAuB;;AAAyC;;AAChE;;AAAuB;;AAAyC;;AAChE;;AAAuB;;AAAqC;;AAC9D;;AACN;;AAEA;;AACI;;AAAW;;;;AAA+B;;AAC1C;;AACJ;;AAEA;;AACI;;AAAW;;;;AAA4B;;AACvC;;AACJ;;AAEA;;AAUA;;AAYA;;AACI;;AAAW;;;;AAA8B;;AACzC;;AACI;;AAAyB;;AAAI;;AAC7B;;AAAyB;;AAAI;;AAE/B;;AACN;;AAEA;;AACI;;AAAW;;;;AAAiC;;AAC5C;;AACI;;AAAyB;;AAAI;;AAC7B;;AAAiC;;AAAiB;;AAClD;;AAA4B;;AAAO;;AAErC;;AACN;;AACA;;AACI;;AAAW;;;;AAAkC;;AAC7C;;AACI;;AAEF;;AACN;;AAEA;;AACI;;AAAW;;;;AAAuC;;AAClD;;AACI;;AAAwB;;AAAG;;AAC3B;;AAA0B;;AAAK;;AACjC;;AACN;;AACA;;AACI;;AAAW;;;;AAAyC;;AACpD;;AACJ;;AAkBA;;AACI;;AAAW;;AAAU;;AACrB;;AACJ;;AAEA;;AACI;;AAAW;;AAAM;;AACjB;;AACI;;AAAyB;;AAAM;;AAC/B;;AAA0B;;AAAQ;;AAEpC;;AACN;;AAEA;;AACI;;AAAW;;AAAc;;AACzB;;AACJ;;AACJ;;AACA;;AAGJ;;AACI;;AAA4B;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;;;AAA2B;;AAC9E;;AACA;;AACJ;;;;AA5I2B;;AAAA;;AAKM;;AAAA;;AACI;;AAAA;;AAEvB;;AAAA;;AAMsD;;AAAA;;AAezC;;AAAA;;AAKA;;AAAA;;AAI+C;;AAAA;;AAUC;;AAAA;;AAahD;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAEyC;;AAAA;;AAMzC;;AAAA;;AAOA;;AAAA;;AAoCiB;;AAAA,+FAAyB,eAAzB,EAAyB,iBAAzB,EAAyB,WAAzB,EAAyB,IAAzB;;AAGR;;AAAA;;AAImB;;AAAA;;;;;;;;;;wED9H1CkB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTjB,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BQ;;AAAuD;;;;AAA4B;;;;AAA5B;;AAAA;;;;;;AACvD;;AAAwC;;AAAmD;;;;;;AAAnD;;AAAA;;;;;;AAIxC;;AAAuD;;;;AAAoC;;;;AAApC;;AAAA;;;;;;AACvD;;AACE;;AAAmG;;;;;;AAAnG;;AAAA;;;;;;AAKF;;AAAuD;;;;AAA4B;;;;AAA5B;;AAAA;;;;;;AACvD;;AAAwC;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AAKxC;;AAAuD;;;;AAA6B;;;;AAA7B;;AAAA;;;;;;AACvD;;AAAwC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAKxC;;AAAsC;;;;AAA6B;;;;AAA7B;;AAAA;;;;;;AACE;;AAA+C;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAAiC;;AAA+C;;AAAkL;;;;;;AAAlL;;AAAA;;;;;;AAAmP;;AAAoF;;AAAK;;AAAC;;AAAM;;;;;;AAA1f;;AAAwC;;AAAgF;;AAAwO;;AAAM;;AAAM;;AAAsC;;AAAQ;;AAAyG;;;;;;;;AAApd;;AAAA;;AAAgF;;AAAA;;AAA6O;;AAAA;;AAAqD;;AAAA;;;;;;AAKja;;AAAuD;;;;AAAiC;;;;AAAjC;;AAAA;;;;;;AACvD;;AAAuC;;AAAiC;;;;;;AAAjC;;AAAA;;;;;;AAKvC;;AAAsD;;;;AAAkC;;;;AAAlC;;AAAA;;;;;;AACtD;;AAAwC;;AAA4C;;;;;;AAA5C;;AAAA;;;;;;AAKxC;;AAAuD;;;;AAA+B;;;;AAA/B;;AAAA;;;;;;AACvD;;AAAwC;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAKxC;;AAAuD;;;;AAA8B;;;;AAA9B;;AAAA;;;;;;AACvD;;AAAwC;;AAA6B;;;;;;AAA7B;;AAAA;;;;;;AAIxC;;AACE;;AACF;;;;;;AACA;;AAA+D;;AAA6B;;;;;;AAA7B;;AAAA;;;;;;AAK/D;;AAAuC;;;;AAA+B;;;;AAA/B;;AAAA;;;;;;;;AACvC;;AAIE;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAAA;;AACE;;AACA;;AACA;;AACA;;AAEJ;;AAEF;;;;;;AAGF;;;;;;AACA;;;;;;;;AAnFF;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAGvB;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AAGA;;AACE;;AACA;;AAcF;;AAEA;;AACA;;AACF;;;;;;AApFiF;;AAkF3D;;AAAA;;AACa;;AAAA;;;;;;AAEnC;;AACE;;AACF;;;;AADuC;;AAAA;;;;;;AAEvC;;AACE;;AACE;;AAAI;;AAAa;;AACnB;;AACF;;;;;;;;;;;;;;UDzFSgC,4B;AAaX,8CAAoBnI,SAApB,EAAoDoI,IAApD,EAA+EjB,KAA/E,EAAqGrH,YAArG,EAAwIuI,WAAxI,EAAqK;AAAA;;AAAjJ,eAAArI,SAAA,GAAAA,SAAA;AAAgC,eAAAoI,IAAA,GAAAA,IAAA;AAA2B,eAAAjB,KAAA,GAAAA,KAAA;AAAsB,eAAArH,YAAA,GAAAA,YAAA;AAAmC,eAAAuI,WAAA,GAAAA,WAAA;AAXxI,eAAApI,kBAAA,GAAoD,OAApD;AACA,eAAAC,gBAAA,GAAgD,KAAhD;AAGA,eAAAoI,IAAA,GAAe,CAAf;AACA,eAAAC,KAAA,GAAgB,IAAhB;AACA,eAAAC,MAAA,GAAS,CAAT;AACA,eAAAC,eAAA,GAA4B,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,IAAb,CAA5B;AACA,eAAAC,oBAAA,GAAuB,KAAvB;AACA,eAAAC,gBAAA,GAA6B,CAAC,mBAAD,EAAsB,6BAAtB,EAAqD,uBAArD,EAA8E,OAA9E,EAAuF,OAAvF,EAAgG,aAAhG,EAA+G,uBAA/G,EAAwI,mBAAxI,EAA6J,SAA7J,EAAwK,gBAAxK,EAA0L,QAA1L,CAA7B;AACA,eAAA5E,cAAA,GAAiB,EAAjB;AACwK;;;;iBAExK,oBAAQ;AACN,iBAAKwE,KAAL,GAAapD,MAAM,CAAC,KAAKrF,YAAL,CAAkBmC,OAAlB,CAA0B,WAA1B,CAAD,CAAN,IAAkD,IAA/D;AACA,iBAAK2G,iBAAL;AACD;;;iBAED,oBAAWC,KAAX,EAAkB;AAChB,gBAAG,KAAKN,KAAL,KAAeM,KAAK,CAACC,QAAxB,EAAiC;AAC/B,kBAAMpB,WAAW,GAAW;AAAEY,oBAAI,EAAE;AAAR,eAA5B;AACA,mBAAKnB,KAAL,CAAW7B,QAAX,CACE,EADF,EAEE;AAEEoC,2BAAW,EAAEA,WAFf;AAGEqB,mCAAmB,EAAE;AAHvB,eAFF;AAOA,mBAAKT,IAAL,GAAY,CAAZ;AACD,aAVD,MAWI;AACF,kBAAMZ,YAAW,GAAW;AAAEY,oBAAI,EAAEO,KAAK,CAACG,SAAN,GAAkB;AAA1B,eAA5B;AACA,mBAAK7B,KAAL,CAAW7B,QAAX,CACE,EADF,EAEE;AAEEoC,2BAAW,EAAEA,YAFf;AAGEqB,mCAAmB,EAAE;AAHvB,eAFF;AAOA,mBAAKT,IAAL,GAAYO,KAAK,CAACG,SAAN,GAAkB,CAA9B;AACD;;AACD,iBAAKT,KAAL,GAAaM,KAAK,CAACC,QAAnB;AACA,iBAAKhJ,YAAL,CAAkBmJ,OAAlB,CAA0B,WAA1B,EAAuC,KAAKV,KAA5C;AACA,iBAAKK,iBAAL;AACD;;;iBACD,uBAAcM,IAAd,EAA4BC,GAA5B,EAAiC;AAC/B,iBAAKpF,cAAL,GAAsBmF,IAAtB;AACA,iBAAKV,MAAL,GAAcW,GAAd;AACA,iBAAKP,iBAAL;AACD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKP,WAAL,CAAiBX,WAAjB,CACCtF,SADD,CACW,UAAAuF,MAAM,EAAI;AACnB;AACA,oBAAI,CAACW,IAAL,GAAU,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEW,IAAR,KAAgB,CAA1B;AACD,aAJD;AAMA,iBAAKI,oBAAL,GAA4B,IAA5B;AACA,iBAAKU,UAAL,GAAkB,EAAlB;AACA,iBAAKhB,IAAL,CAAU/D,GAAV,iCAAuC,KAAKiE,IAA5C,oBAA0D,KAAKC,KAA/D,6BAAuF,KAAKxE,cAA5F,GAA8GO,IAA9G,GAAqHlC,SAArH,CAA+H,UAAAmC,GAAG,EAAI;AACpI,kBAAIA,GAAG,CAACrB,IAAJ,CAASmG,IAAb,EAAmB;AACjB,sBAAI,CAACX,oBAAL,GAA4B,KAA5B;AACA,sBAAI,CAACY,UAAL,GAAkB/E,GAAG,CAACrB,IAAJ,CAASqG,KAA3B;AACA,sBAAI,CAACH,UAAL,GAAkB7E,GAAG,CAACrB,IAAJ,CAASmG,IAA3B;;AACA,sBAAI,CAACG,OAAL,CAAa,MAAI,CAAClB,IAAL,GAAU,CAAvB;AACD;AACF,aAPD,GAOI,UAAA7D,GAAG,EAAI;AACT,oBAAI,CAACiE,oBAAL,GAA4B,KAA5B;AACD,aATD;AAUD;;;iBACD,kBAASxF,IAAT,EAAe;AACb,iBAAKiE,KAAL,CAAW7B,QAAX,CAAoB,CAAC,wEAAYkB,cAAZ,CAA2B5D,GAA5B,CAApB,EAAsD;AAAE8E,yBAAW,EAAE;AAAEE,uBAAO,EAAE7F,IAAI,CAACgG,SAAL,CAAe7E,IAAf;AAAX;AAAf,aAAtD;AACD;;;iBACD,qBAAYuG,GAAZ,EAAiBC,MAAjB,EAAyB;AAAA;;AACvB;AACA,gBAAIxG,IAAI,GAAG;AACTxB,gBAAE,EAAE+H,GAAG,CAAC/H,EADC;AAEToG,uBAAS,EAAE4B,MAFF;AAGTzE,2BAAa,EAAEwE,GAAG,CAACxE,aAHV;AAITC,2BAAa,EAAEuE,GAAG,CAACvE,aAJV;AAKTtB,yBAAW,EAAE6F,GAAG,CAAC7F,WALR;AAMTG,4BAAc,EAAE0F,GAAG,CAAC1F;AANX,aAAX;AAQA,iBAAKqE,IAAL,CAAUF,GAAV,8BAA2ChF,IAA3C,EAAiDoB,IAAjD,GAAwDlC,SAAxD,CAAkE,UAAAmC,GAAG,EAAI;AACvE,qBAAI,CAACqE,iBAAL;;AACA,qBAAI,CAACpD,iBAAL,CAAuBjB,GAAG,CAACkB,OAA3B,EAAoC,aAApC;AAED,aAJD,GAII,UAAAhB,GAAG,EAAI,CAEV,CAND;AAOD;;;iBAED,2BAAkBgB,OAAlB,EAA2BC,UAA3B,EAA+C;AAC7C,iBAAK1F,SAAL,CAAe2F,iBAAf,CAAiC,uGAAjC,EAAoD;AAClDzC,kBAAI,EAAE;AAAE0C,qBAAK,EAAE,KAAT;AAAgBH,uBAAO,EAAEA;AAAzB,eAD4C;AAElDC,wBAAU,EAAEA,UAFsC;AAGlDG,sBAAQ,EAAE,IAHwC;AAIlD5F,gCAAkB,EAAE,KAAKA,kBAJyB;AAKlDC,8BAAgB,EAAE,KAAKA;AAL2B,aAApD;AAQD;;;iBAED,mBAAUgD,IAAV,EAAgB;AACd,gBAAIA,IAAI,IAAI,OAAZ,EAAqB;AACnB,qBAAO,OAAP;AACD,aAFD,MAGK,IAAIA,IAAI,IAAI,UAAZ,EAAwB;AAC3B,qBAAO,KAAP;AACD,aAFI,MAGA,IAAIA,IAAI,IAAI,WAAZ,EAAyB;AAC5B,qBAAO,KAAP;AACD,aAFI,MAGA,IAAIA,IAAI,IAAI,cAAZ,EAA4B;AAC/B,qBAAO,KAAP;AACD,aAFI,MAGA,IAAIA,IAAI,IAAI,QAAZ,EAAsB;AACzB,qBAAO,GAAP;AACD;AACF;;;iBAED,kBAASyG,IAAT,EAAqB;AAAA;;AACnB,gBAAMzG,IAAI,GAAG,KAAKkG,UAAL,CAAgBQ,KAAhB,EAAb;;AACA,gBAAI,CAACD,IAAI,CAACnB,MAAN,IAAgBmB,IAAI,CAACE,SAAL,KAAmB,EAAvC,EAA2C;AACzC,mBAAKT,UAAL,GAAkBlG,IAAlB;AACA;AACD;;AAED,iBAAKkG,UAAL,GAAkBlG,IAAI,CAACyG,IAAL,CAAU,UAACG,CAAD,EAAIC,CAAJ,EAAU;AACpC,kBAAMC,KAAK,GAAGL,IAAI,CAACE,SAAL,KAAmB,KAAjC;;AACA,sBAAQF,IAAI,CAACnB,MAAb;AACE,qBAAK,mBAAL;AACE,yBAAO,OAAI,CAACyB,OAAL,CAAaH,CAAC,CAAChI,YAAF,CAAeL,IAA5B,EAAkCsI,CAAC,CAACjI,YAAF,CAAeL,IAAjD,EAAuDuI,KAAvD,CAAP;;AACF,qBAAK,6BAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAC9E,2BAAf,EAA4C+E,CAAC,CAAC/E,2BAA9C,EAA2EgF,KAA3E,CAAP;;AACF,qBAAK,uBAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAACrG,qBAAf,EAAsCsG,CAAC,CAACtG,qBAAxC,EAA+DuG,KAA/D,CAAP;;AACF,qBAAK,OAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAACpG,KAAf,EAAsBqG,CAAC,CAACrG,KAAxB,EAA+BsG,KAA/B,CAAP;;AACF,qBAAK,aAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAClG,WAAf,EAA4BmG,CAAC,CAACnG,WAA9B,EAA2CoG,KAA3C,CAAP;;AACF,qBAAK,uBAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAACI,gBAAF,CAAmBzI,IAAhC,EAAsCsI,CAAC,CAACG,gBAAF,CAAmBzI,IAAzD,EAA+DuI,KAA/D,CAAP;;AACF,qBAAK,mBAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAC9F,iBAAf,EAAkC+F,CAAC,CAAC/F,iBAApC,EAAuDgG,KAAvD,CAAP;;AACF,qBAAK,gBAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAC/F,cAAf,EAA+BgG,CAAC,CAAChG,cAAjC,EAAiDiG,KAAjD,CAAP;;AACF,qBAAK,SAAL;AACE,yBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAChG,OAAf,EAAwBiG,CAAC,CAACjG,OAA1B,EAAmCkG,KAAnC,CAAP;;AACF;AACE,yBAAO,CAAP;AApBJ;AAsBD,aAxBiB,CAAlB;AAyBD;;;iBAGD,iBAAQF,CAAR,EAA4BC,CAA5B,EAAgDC,KAAhD,EAAgE;AAC9D,mBAAO,CAACF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,KAAoBC,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjC,CAAP;AACD;;;iBACD,iBAAQG,KAAR,EAAuB;AACrB,gBAAG,KAAKC,SAAR,EACA,KAAKA,SAAL,CAAepB,SAAf,GAA2BmB,KAA3B;AACD;;;;;;;yBArKUhC,4B,EAA4B,wI,EAAA,0I,EAAA,uH,EAAA,4I,EAAA,+H;AAAA,O;;;cAA5BA,4B;AAA4B,kD;AAAA;AAAA;sEAC5B,wE,EAAY,I;;;;;;;;;;;;;;AC1BzB;;AACE;;AACE;;;;AACA;;AACE;;AAAuD;;AAAoC;;AAC7F;;AACF;;AACF;;AAEA;;AACE;;AAAqB;;;;AAA2C;;AAChE;;AACE;;AAAsD;AAAA,qBAAS,IAAAkC,aAAA,CAAc,EAAd,EAAiB,CAAjB,CAAT;AAA4B,aAA5B;;AAA8B;;;;AAAqB;;AACzG;;AAAsD;AAAA,qBAAS,IAAAA,aAAA,CAAc,OAAd,EAAsB,CAAtB,CAAT;AAAiC,aAAjC;;AAAmC;;;;AAA+B;;AACxH;;AAAsD;AAAA,qBAAS,IAAAA,aAAA,CAAc,QAAd,EAAuB,CAAvB,CAAT;AAAkC,aAAlC;;AAAoC;;;;AAA6B;;AACvH;;AAAsD;AAAA,qBAAS,IAAAA,aAAA,CAAc,cAAd,EAA6B,CAA7B,CAAT;AAAwC,aAAxC;;AAA0C;;;;AAA+B;;AAC/H;;AAAsD;AAAA,qBAAS,IAAAA,aAAA,CAAc,UAAd,EAAyB,CAAzB,CAAT;AAAoC,aAApC;;AAAsC;;;;AAAoC;;AAChI;;AAAsD;AAAA,qBAAS,IAAAA,aAAA,CAAc,WAAd,EAA0B,CAA1B,CAAT;AAAqC,aAArC;;AAAuC;;;;AAAiC;;AAChI;;AAGA;;AACE;;AAqFA;;AAGA;;AAKA;;AACE;AAAA,qBAAQ,IAAAC,UAAA,QAAR;AAA0B,aAA1B;;AACF;;AAEF;;AACA;;AACE;;AACE;;AAAA;;AACE;;AACA;;AACA;;AAGJ;;AAEF;;AACF;;;;AAjII;;AAAA;;AAQmB;;AAAA;;AAED;;AAAA;;AAAkE;;AAAA;;AAClE;;AAAA;;AAAuE;;AAAA;;AACvE;;AAAA;;AAAwE;;AAAA;;AACxE;;AAAA;;AAA8E;;AAAA;;AAC9E;;AAAA;;AAA0E;;AAAA;;AAC1E;;AAAA;;AAA2E;;AAAA;;AAM1F;;AAAA;;AAoFyB;;AAAA;;AAGb;;AAAA;;AAKC;;AAAA,+FAAqB,UAArB,EAAqB,SAArB,EAAqB,sBAArB,EAAqB,IAArB,EAAqB,iBAArB,EAAqB,mBAArB;;AAMQ;;AAAA;;;;;;;;;;wEDhGfnC,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTlC,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,wCAAD;AAHF,W;AAK8B,U;;;;;;;;;;;;;AACdiE,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE","file":"ruleEngine-rule-engine-settings-rule-engine-settings-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { AppConfig } from \"src/app/config/app-config\";\nimport { RouteConfig } from \"src/app/config/route-config\";\nimport { LocalService } from \"src/app/services/local.service\";\nimport { MainService } from \"src/app/services/main.service\";\nimport { SnackbarComponent } from \"src/app/shared/components/snackbar/snackbar.component\";\nimport * as moment from \"moment\";\n\n@Component({\n  selector: \"app-add-rule-engine\",\n  templateUrl: \"./add-rule-engine.component.html\",\n  styleUrls: [\"./add-rule-engine.component.scss\"],\n})\nexport class AddRuleEngineComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = \"center\";\n  verticalPosition: MatSnackBarVerticalPosition = \"bottom\";\n  addRuleForm: FormGroup;\n  orgName: string = \"\";\n  isloading = false;\n  selectedOrgID: any;\n  disable_status = true;\n  rangeValue = \"\";\n  currentValue = \"\";\n  minDate = moment();\n  dateLimit = \"5\";\n  selected: any = {\n    startDate: moment()\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .set(\"hours\", 0)\n      .set(\"minutes\", 0),\n    endDate: moment()\n      .subtract(1, \"month\")\n      .endOf(\"month\")\n      .set(\"hours\", 23)\n      .set(\"minutes\", 59),\n  };\n  selectedShow: any = {\n    startDate: moment()\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .set(\"hours\", 0)\n      .set(\"minutes\", 0),\n    endDate: moment()\n      .subtract(1, \"month\")\n      .endOf(\"month\")\n      .set(\"hours\", 23)\n      .set(\"minutes\", 59),\n  };\n\n  ranges: any = AppConfig.momentRange;\n  alwaysShowCalendars: boolean = true;\n  showRangeLabelOnInput: boolean = true;\n  keepCalendarOpeningWithRange: boolean = true;\n  showRange = false;\n  // selected: any;\n  // selectedAgain: any;\n  constructor(\n    private fb: FormBuilder,\n    private service: MainService,\n    private localService: LocalService,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.createaddRuleForm();\n    this.getAllOrganization();\n    this.vechileCategory();\n    this.organization = JSON.parse(this.localService.getItem(\"orgname\"));\n\n    this.selectedOrgID = this.localService.getItem(\"selectedOrgs\");\n    if (this.selectedOrgID) {\n      this.selectedOrgID = JSON.parse(this.selectedOrgID);\n    }\n    this.localService.watchOrgData().subscribe((resp) => {\n      if (resp) {\n        let orgId: any = this.localService.getItem(\"selectedOrgs\");\n        if (orgId) {\n          orgId = JSON.parse(orgId);\n        }\n        let isEqual = true;\n        if (\n          this.selectedOrgID &&\n          this.selectedOrgID.length &&\n          orgId &&\n          orgId.length\n        ) {\n          isEqual =\n            orgId.length === this.selectedOrgID.length &&\n            orgId.every((val) => this.selectedOrgID.includes(val));\n        } else {\n          isEqual = false;\n        }\n        if (!isEqual) {\n          this.selectedOrgID = [...orgId];\n        }\n      }\n      const url = window.location;\n      if (\n        this.selectedOrgID.length > 1 &&\n        url.hash == \"#/main/ruleengine/addruleengine\"\n      ) {\n        this.openSnackBar();\n      } else if (this.selectedOrgID.length == 1) {\n        this.organization.filter((data) => {\n          if (data.id == this.selectedOrgID[0]) {\n            this.orgName = data.name;\n          }\n        });\n        this.addRuleForm.patchValue({\n          org_id: this.selectedOrgID[0],\n        });\n      }\n    });\n    if (this.selectedOrgID.length > 1) {\n      this.openSnackBar();\n    }\n    if (this.selectedOrgID.length == 1) {\n      this.organization.filter((data) => {\n        if (data.id == this.selectedOrgID[0]) {\n          this.orgName = data.name;\n        }\n      });\n      this.addRuleForm.patchValue({\n        org_id: this.selectedOrgID[0],\n      });\n    }\n    this.organization.filter((data) => {\n      if (data.id == this.selectedOrgID[0]) {\n        this.orgName = data.name;\n      }\n    });\n  }\n  organization: any;\n  exception: any = [\n    {\n      name: \"Speeding\",\n      id: \"speed\",\n    },\n    {\n      name: \"Breaking\",\n      id: \"breaking\",\n    },\n    {\n      name: \"Cornering\",\n      id: \"cornering\",\n    },\n    {\n      name: \"Acceleration\",\n      id: \"acceleration\",\n    },\n    {\n      name: \"Idling\",\n      id: \"idling\",\n    },\n  ];\n  vechilecategory: any;\n\n  createaddRuleForm() {\n    this.addRuleForm = this.fb.group({\n      org_id: [\"\", Validators.required],\n      percentage_of_violation: [\"\", Validators.required],\n      duration_of_violation: [\"\", Validators.required],\n      score: [\"\", Validators.required],\n      road_type: [\"\", Validators.required],\n      road_factor: [\"\", Validators.required],\n      vehicle_category_id: [\"\", Validators.required],\n      weather: [\"\", Validators.required],\n      exception_type: [\"\", Validators.required],\n      day_night_driving: [\"\", Validators.required],\n      day_night_score: [\"\", Validators.required],\n      created_on: [moment().format(\"MM/DD/YYYY\")],\n      effective_from: [\"\", Validators.required],\n    });\n  }\n\n  getAllOrganization() {\n    // console.log(this.organization)\n  }\n  vechileCategory() {\n    this.service\n      .get(\"vehicles/category-by-organisation?organisation=[1,2,3,4,5,6,7]\")\n      .pipe()\n      .subscribe((res) => {\n        this.vechilecategory = res.data;\n      }),\n      (err) => {};\n  }\n  get f() {\n    return this.addRuleForm.controls;\n  }\n\n  goToLastPage() {\n    window.history.back();\n  }\n  updatetype() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n      this.showRange=false;\n      this.currentValue = \"<span>(km/hr)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"breaking\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"cornering\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"acceleration\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"idling\") {\n      this.showRange=true;\n      this.currentValue = \"\";\n    }\n  }\n  update() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n    }\n    if (\n      this.addRuleForm.value.road_type == 1 ||\n      this.addRuleForm.value.road_type == 2\n    ) {\n      this.addRuleForm.patchValue({\n        road_factor: \"City\",\n      });\n    }\n    if (\n      this.addRuleForm.value.road_type == 3 ||\n      this.addRuleForm.value.road_type == 4\n    ) {\n      this.addRuleForm.patchValue({\n        road_factor: \"Outside City\",\n      });\n    } else if (this.addRuleForm.value.road_type == 5) {\n      this.addRuleForm.patchValue({\n        road_factor: \"Highway\",\n      });\n    }\n  }\n\n  submit() {\n    // console.log(this.addRuleForm.value.effective_from);\n\n    // console.log(moment(this.addRuleForm.value.effective_from.startDate).format('YYYY-MM-DD'))\n    if(this.addRuleForm.value.exception_type!= 'speed'){\n      this.addRuleForm.patchValue({\n        road_factor:'null'\n      })\n    }\n    if (this.selectedOrgID.length == 1) {\n      if (this.addRuleForm.valid) {\n        this.isloading = true;\n        let percentage_of_violation_min = 0;\n        let percentage_of_violation_max = 5;\n        let road_type_min = 0;\n        let road_type_max = 30;\n\n        if (this.addRuleForm.value.percentage_of_violation == 2) {\n          percentage_of_violation_min = 5;\n          percentage_of_violation_max = 10;\n        } else if (this.addRuleForm.value.percentage_of_violation == 3) {\n          percentage_of_violation_min = 10;\n          percentage_of_violation_max = 100;\n        }\n        if (this.addRuleForm.value.road_type == 2) {\n          road_type_min = 30;\n          road_type_max = 50;\n        } else if (this.addRuleForm.value.road_type == 3) {\n          road_type_min = 50;\n          road_type_max = 80;\n        } else if (this.addRuleForm.value.road_type == 4) {\n          road_type_min = 80;\n          road_type_max = 100;\n        } else if (this.addRuleForm.value.road_type == 5) {\n          road_type_min = 100;\n          road_type_max = 1000;\n        }\n        let data:any = {\n          org_id: this.addRuleForm.value.org_id,\n          percentage_of_violation_min: percentage_of_violation_min,\n          percentage_of_violation_max: percentage_of_violation_max,\n          duration_of_violation: Number(\n            this.addRuleForm.value.duration_of_violation\n          ),\n          score: Number(this.addRuleForm.value.score),\n          road_type_min: road_type_min,\n          road_type_max: road_type_max,\n          road_factor: this.addRuleForm.value.road_factor,\n          vehicle_category_id: this.addRuleForm.value.vehicle_category_id,\n          weather: this.addRuleForm.value.weather,\n          exception_type: this.addRuleForm.value.exception_type,\n          day_night_driving: this.addRuleForm.value.day_night_driving,\n          day_night_score: Number(this.addRuleForm.value.day_night_score),\n          effective_from: moment(\n            this.addRuleForm.value.effective_from.startDate\n          ).format(\"YYYY-MM-DD\"),\n          // created_on: moment(this.addRuleForm.value.created_on).format(\n          //   \"YYYY-MM-DD\"\n          // ),\n        };\n        if(data.exception_type!='speed'){\n        data.road_factor=\"Highway\";\n        data.road_type_min=100;\n        data.road_type_max=1000;\n          data.gforce_limit=this.addRuleForm.value.road_type;\n        }\n        \n\n        // console.log(data)\n        this.service\n          .post(\"rule-engine/create\", data)\n          .pipe()\n          .subscribe((res) => {\n            this.router.navigate([RouteConfig.ruleengine.url]);\n          }),\n          (err) => {\n            this.isloading=false;\n          };\n      }\n    } else {\n      this.openSnackBar();\n    }\n  }\n\n  openSnackBar() {\n    this.openSnackBarmodal(\n      \"Please select only one organisation\",\n      \"rule_engine\"\n    );\n  }\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: true, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n  fitlerorgname(id) {\n    this.organization.filter((data) => {\n      if (data.id == id) {\n        this.orgName = data.name;\n      }\n    });\n  }\n}\n","<div class=\"titleWithBack \">\n    <span class=\"backBtnImg cursor\" (click)=\"goToLastPage()\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\"> {{\"sidebar.ruleEngineSetting\" | translate}}</h4>\n</div>\n<div class=\"filterBody\">\n    <h5 class=\"editTitle\">Add new rule engine setting </h5>\n    <div class=\"editRule\">\n        <p class=\"editRuleTitle\">{{\"rule.addFor\" | translate}}</p>\n        <p class=\"editRuleTitleBack\" *ngIf=\"selectedOrgID.length>1\">{{\"rule.orgName\" | translate}}</p>\n        <p class=\"editRuleTitleBack\" *ngIf=\"selectedOrgID.length==1\">{{orgName}}</p>\n    </div>\n    <form [formGroup]='addRuleForm'>\n        <div class=\"profileBox\">\n\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Exception type</mat-label>\n                <mat-select formControlName=\"exception_type\" (selectionChange)=\"updatetype()\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of exception\">{{item?.name}}</mat-option>\n\n                </mat-select>\n\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Percentage of Violation</mat-label>\n                <mat-select formControlName=\"percentage_of_violation\">\n                    <mat-option value=\"1\">\n                        <0 - 05% exeeding limit longer than time </mat-option>\n                            <mat-option value=\"2\">\n                                <05 - 10% exeeding limit longer than time</mat-option>\n                                    <mat-option value=\"3\"> >10% exeeding limit longer than time </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.time\" | translate}} (s)</mat-label>\n                <input matInput value=\"9\" formControlName=\"duration_of_violation\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.point\" | translate}}</mat-label>\n                <input matInput value=\"9\" formControlName=\"score\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\" *ngIf=\"showRange==false\">\n                <mat-label>{{\"rule.range\" | translate}} <span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <mat-select formControlName=\"road_type\" (selectionChange)=\"update()\" [disabled]=\"showRange\">\n                    <mat-option value=\"1\">0-30</mat-option>\n                    <mat-option value=\"2\">31-50</mat-option>\n                    <mat-option value=\"3\">51-80</mat-option>\n                    <mat-option value=\"4\">81-100</mat-option>\n                    <mat-option value=\"5\">>100</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\"  *ngIf=\"showRange==true\">\n                <mat-label>Range <span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <input matInput value=\"0\" formControlName=\"road_type\">\n                <!-- <mat-select formControlName=\"road_type\" >\n                    <mat-option value=\"1\">1</mat-option>\n                    <mat-option value=\"2\">2</mat-option>\n                    <mat-option value=\"3\">3</mat-option>\n                    <mat-option value=\"4\">4</mat-option>\n                    <mat-option value=\"5\">>5</mat-option>\n                </mat-select> -->\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.weather\" | translate}}</mat-label>\n                <mat-select formControlName=\"weather\">\n                    <mat-option value=\"Snow\">Snow</mat-option>\n                    <mat-option value=\"Cold\">Cold</mat-option>\n\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.roadFactor\" | translate}}</mat-label>\n                <mat-select formControlName=\"road_factor\" [disabled]=\"disable_status\">\n                    <mat-option value=\"City\">City</mat-option>\n                    <mat-option value=\"Outside City\">Outside City Road</mat-option>\n                    <mat-option value=\"Highway\">Highway</mat-option>\n                    <!-- <mat-option value=\"option1\">Highway</mat-option> -->\n\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.vehCategory\" | translate}}</mat-label>\n                <mat-select formControlName=\"vehicle_category_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of vechilecategory\">{{item?.name}}</mat-option>\n\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} driving</mat-label>\n                <mat-select formControlName=\"day_night_driving\">\n                    <mat-option value=\"Day\">Day</mat-option>\n                    <mat-option value=\"Night\">Night</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} weightage</mat-label>\n                <input matInput value=\"9\" formControlName=\"day_night_score\">\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\" disabled>\n                <mat-label>Created on</mat-label>\n                <input  matInput formControlName=\"created_on\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\" [autoApply]=\"true\"    matInput  formControlName=\"effective_from\" readonly>\n            </mat-form-field>\n          \n\n        </div>\n        <ng-container class=\"py-3\" *ngIf=\"isloading\">\n            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n        </ng-container>\n        <div class=\"BtnBlock\">\n            <button class=\"btn btnSave\" (click)=\"submit()\">{{\"rule.add\" | translate}}</button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { AddRuleEngineComponent } from './add-rule-engine/add-rule-engine.component';\nimport { EditRuleEngineComponent } from './edit-rule-engine/edit-rule-engine.component';\nimport { RuleEngineDashboardComponent } from './rule-engine-dashboard/rule-engine-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RuleEngineDashboardComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: RouteConfig.editruleengine.path,\n    component: EditRuleEngineComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: RouteConfig.addruleengine.path,\n    component: AddRuleEngineComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RuleEngineSettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RuleEngineSettingsRoutingModule } from './rule-engine-settings-routing.module';\nimport { RuleEngineDashboardComponent } from './rule-engine-dashboard/rule-engine-dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModules } from 'src/app/config/material';\nimport { EditRuleEngineComponent } from './edit-rule-engine/edit-rule-engine.component';\nimport { AddRuleEngineComponent } from './add-rule-engine/add-rule-engine.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\n\n@NgModule({\n  declarations: [RuleEngineDashboardComponent, EditRuleEngineComponent, AddRuleEngineComponent],\n  imports: [\n    CommonModule,\n    RuleEngineSettingsRoutingModule,\n    MaterialModules,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDaterangepickerMd.forRoot(),\n    TranslateModule.forChild({\n      extend: true\n    })\n  ]\n})\nexport class RuleEngineSettingsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-edit-rule-engine',\n  templateUrl: './edit-rule-engine.component.html',\n  styleUrls: ['./edit-rule-engine.component.scss']\n})\nexport class EditRuleEngineComponent implements OnInit {\n  addRuleForm: FormGroup;\n  details:any;\n  isloading=false;\n  currentValue=\"\";\n  showRange = false;\n  constructor(\n    private fb: FormBuilder,\n    private service: MainService,\n    private localService: LocalService,\n    public route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams\n    .subscribe(params => {\n      const details:any = params.details;\n      this.details = JSON.parse(details);\n    }\n  );\n    this.createaddRuleForm();\n    this.getAllOrganization();\n    this.vechileCategory();\n  }\n  organization:any;\n  exception:any=[\n    {\n      name:'Speeding',\n      id:'speed'\n    },\n    {\n      name:'Breaking',\n      id:'breaking'\n    },\n    {\n      name:'Cornering',\n      id:'cornering'\n    },\n    {\n      name:'Acceleration',\n      id:'acceleration'\n    },\n    {\n      name:'Idling',\n      id:'idling'\n    },\n\n  ]\n  vechilecategory:any;\n  createaddRuleForm(){\n    let obj:any= {\n      startDate:'',\n      endDate:''\n    }\n    // console.log(this.details)\n    if(this.details.effective_from!=null){\n      obj= {\n        startDate:moment(this.details.effective_from),\n        endDate:moment(this.details.effective_from)\n      }\n    }\n    else{\n      obj= ''\n    }\n   \n    \n    this.addRuleForm = this.fb.group({\n      org_id: [this.details.org_id,Validators.required],\n      percentage_of_violation: ['',Validators.required],\n      duration_of_violation: [this.details.duration_of_violation,Validators.required],\n      score: [this.details.score,Validators.required],\n      road_type: ['',Validators.required],\n      road_factor: [this.details.road_factor,Validators.required],\n      vehicle_category_id: [this.details.vehicle_category_id,Validators.required],\n      weather: [this.details.weather,Validators.required],\n      exception_type: [this.details.exception_type,Validators.required],\n      day_night_driving: [this.details.day_night_driving,Validators.required],\n      day_night_score: [this.details.day_night_score,Validators.required],\n      is_active:[JSON.stringify(this.details.is_active)],\n      created_on:[ moment(this.details.createdAt).format('MM/DD/YYYY')],\n      effective_from:[obj,Validators.required]\n    })\n  // console.log(this.addRuleForm.value);\n  \n    this.checkValue();\n    this.updatetype();\n  }\n  invalidDates = [];\n  isInvalidDate = (m) => {\n    return this.invalidDates.some(d => d.isSame(m, 'day'));\n  }\n  updatetype() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n      this.showRange=false;\n      this.currentValue = \"<span>(km/hr)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"breaking\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"cornering\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"acceleration\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"idling\") {\n      this.showRange=true;\n      this.currentValue = \"\";\n    }\n    this.checkValue();\n  }\n  checkValue(){\n    if(this.details.percentage_of_violation_min>=0 && this.details.percentage_of_violation_max<=5){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'1'\n      })\n    }\n    else if(this.details.percentage_of_violation_min>=5 && this.details.percentage_of_violation_max<=10){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'2'\n      })\n    }\n    else if(this.details.percentage_of_violation_min>=10){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'3'\n      })\n    }\n    \n   if(this.addRuleForm.value.exception_type=='speed'){\n    if(this.details.road_type_min>=0 && this.details.road_type_min<=30){\n      this.addRuleForm.patchValue({\n        road_type: '1'\n      })\n    }\n    else if(this.details.road_type_min>=30 && this.details.road_type_min<50){\n      this.addRuleForm.patchValue({\n        road_type: '2'\n      })\n    }\n    else if(this.details.road_type_min>=50 && this.details.road_type_min<80){\n      this.addRuleForm.patchValue({\n        road_type: '3'\n      })\n    }\n    else if(this.details.road_type_min>=80 && this.details.road_type_min<100){\n      this.addRuleForm.patchValue({\n        road_type: '4'\n      })\n    }\n    else if(this.details.road_type_min>=100 && this.details.road_type_max<1000){\n      this.addRuleForm.patchValue({\n        road_type: '5'\n      })\n    }\n   }\n   else{\n     this.addRuleForm.patchValue({\n       road_type:this.details.gforce_limit\n     })\n   }\n    // console.log(this.addRuleForm.value)\n  }\n  update(){\n    // console.log(\"aaaaaa\");\n    if(this.addRuleForm.value.road_type==1 || this.addRuleForm.value.road_type==2){\n      this.addRuleForm.patchValue({\n        road_factor:'City'\n      })\n    }\n    if(this.addRuleForm.value.road_type==3 || this.addRuleForm.value.road_type==4){\n      this.addRuleForm.patchValue({\n        road_factor:'Outside City'\n      })\n    }\n    else if(this.addRuleForm.value.road_type==5){\n      this.addRuleForm.patchValue({\n        road_factor:'Highway'\n      })\n    }\n    // console.log(this.addRuleForm.value)\n  }\n\n  getAllOrganization(){\n    this.organization=JSON.parse(this.localService.getItem('orgname'))\n    // console.log(this.organization)\n  }\n  vechileCategory(){\n    this.service.get('vehicles/category-by-organisation?organisation=[1,2,3,4,5,6,7]').pipe().subscribe(res=>{\n      this.vechilecategory=res.data\n    }),err=>{\n\n    }\n  }\n  get f() {\n    return this.addRuleForm.controls;\n  }\n\n  goToLastPage() {\n    window.history.back();\n  }\n\n  submit(){\n    if(this.addRuleForm.value.exception_type!= 'speed'){\n      this.addRuleForm.patchValue({\n        road_factor:'null'\n      })\n    }\n    // console.log(this.addRuleForm.value)\n    if(this.addRuleForm.valid){\n      this.isloading=true;\n      let percentage_of_violation_min=0;\n      let percentage_of_violation_max=5;\n      let road_type_min=0;\n      let road_type_max=30;\n      // console.log(this.addRuleForm.value.percentage_of_violation)\n      if(this.addRuleForm.value.percentage_of_violation==2){\n        percentage_of_violation_min=5;\n        percentage_of_violation_max=10;\n      }\n      else if(this.addRuleForm.value.percentage_of_violation==3){\n        percentage_of_violation_min=10;\n        percentage_of_violation_max=100;\n      }\n      if(this.addRuleForm.value.road_type==2){\n        road_type_min=30;\n        road_type_max=50;\n      }\n      else if(this.addRuleForm.value.road_type==3){\n        road_type_min=50;\n        road_type_max=80;\n      }\n      else if(this.addRuleForm.value.road_type==4){\n        road_type_min=80;\n        road_type_max=100;\n      }\n      else if(this.addRuleForm.value.road_type==5){\n        road_type_min=100;\n        road_type_max=1000;\n      }\n      if(this.addRuleForm.value.exception_type){\n        \n      }\n      let data:any={\n        id:this.details.id,\n        org_id: this.addRuleForm.value.org_id,\n      percentage_of_violation_min: percentage_of_violation_min,\n      percentage_of_violation_max: percentage_of_violation_max,\n      duration_of_violation:this.addRuleForm.value.duration_of_violation,\n      score: this.addRuleForm.value.score,\n      road_type_min: road_type_min,\n      road_type_max: road_type_max,\n      road_factor: this.addRuleForm.value.road_factor,\n      vehicle_category_id:this.addRuleForm.value.vehicle_category_id ,\n      weather: this.addRuleForm.value.weather,\n      exception_type:this.addRuleForm.value.exception_type ,\n      day_night_driving: this.addRuleForm.value.day_night_driving,\n      day_night_score:this.addRuleForm.value.day_night_score ,\n      effective_from:(moment(this.addRuleForm.value.effective_from.startDate).format('YYYY-MM-DD')),\n        created_on:this.addRuleForm.value.created_on,\n        is_active:JSON.parse(this.addRuleForm.value.is_active)\n      }\n      if(data.exception_type!='speed'){\n        data.road_factor=\"Highway\";\n        data.road_type_min=100;\n        data.road_type_max=1000;\n          data.gforce_limit=this.addRuleForm.value.road_type;\n        }\n      // console.log(data)\n      this.service.put('rule-engine/edit',data).pipe().subscribe(res=>{\n        this.router.navigate([RouteConfig.ruleengine.url])\n      }),err=>{\n        this.isloading=false;\n      }\n    }\n  }\n}\n","<div class=\"titleWithBack \">\n    <span class=\"backBtnImg cursor\" (click)=\"goToLastPage()\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\"> {{\"sidebar.ruleEngineSetting\" | translate}}</h4>\n</div>\n<div class=\"filterBody\">\n    <h5 class=\"editTitle\">Edit rule engine setting </h5>\n    <div class=\"editRule\">\n        <p class=\"editRuleTitle\">{{\"rule.editingFor\" | translate}}</p>\n        <p class=\"editRuleTitleBack\">{{details?.organization?.name}}</p>\n    </div>\n        <form [formGroup]='addRuleForm'>\n        <div class=\"profileBox\">\n            \n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Exception type</mat-label>\n                <mat-select formControlName=\"exception_type\" (selectionChange)=\"updatetype()\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of exception\">{{item?.name}}</mat-option>\n                    \n                  </mat-select>\n                  \n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Percentage of Violation</mat-label>\n                <mat-select formControlName=\"percentage_of_violation\">\n                    <mat-option value=\"1\"> <0 - 05% exeeding limit longer than time </mat-option>\n                    <mat-option value=\"2\"> <05 - 10% exeeding limit longer than time</mat-option>\n                    <mat-option value=\"3\"> >10% exeeding limit longer than time </mat-option>\n                  </mat-select>\n            </mat-form-field>\n     \n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.time\" | translate}} (s)</mat-label>\n                <input matInput value=\"9\" formControlName=\"duration_of_violation\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.point\" | translate}}</mat-label>\n                <input matInput value=\"9\" formControlName=\"score\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\" *ngIf=\"showRange==false\">\n                <mat-label>{{\"rule.range\" | translate}} <span [innerHTML]=\"currentValue\"></span></mat-label>\n                <mat-select formControlName=\"road_type\" (selectionChange)=\"update()\" [disabled]=\"showRange\">\n                    <mat-option value=\"1\">0-30</mat-option> \n                    <mat-option value=\"2\">31-50</mat-option> \n                    <mat-option value=\"3\">51-80</mat-option> \n                    <mat-option value=\"4\">81-100</mat-option> \n                    <mat-option value=\"5\">>100</mat-option> \n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\"  *ngIf=\"showRange==true\">\n                <mat-label>Range<span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <input matInput value=\"1\" formControlName=\"road_type\">\n                <!-- <mat-select formControlName=\"road_type\" >\n                    <mat-option value=\"1\">1</mat-option>\n                    <mat-option value=\"2\">2</mat-option>\n                    <mat-option value=\"3\">3</mat-option>\n                    <mat-option value=\"4\">4</mat-option>\n                    <mat-option value=\"5\">>5</mat-option>\n                </mat-select> -->\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.weather\" | translate}}</mat-label>\n                <mat-select formControlName=\"weather\">\n                    <mat-option value=\"Snow\">Snow</mat-option>\n                    <mat-option value=\"Cold\">Cold</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.roadFactor\" | translate}}</mat-label>\n                <mat-select formControlName=\"road_factor\" disabled>\n                    <mat-option value=\"City\">City</mat-option>\n                    <mat-option value=\"Outside City\">Outside City Road</mat-option>\n                    <mat-option value=\"Highway\">Highway</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.vehCategory\" | translate}}</mat-label>\n                <mat-select formControlName=\"vehicle_category_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of vechilecategory\">{{item?.name}}</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n     \n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} driving</mat-label>\n                <mat-select formControlName=\"day_night_driving\">\n                    <mat-option value=\"Day\">Day</mat-option>\n                    <mat-option value=\"Night\">Night</mat-option>\n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} weightage</mat-label>\n                <input matInput value=\"9\" formControlName=\"day_night_score\">\n            </mat-form-field>\n            <!-- <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Organaisation</mat-label>\n                <mat-select formControlName=\"org_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of organization\"> {{item?.name}} </mat-option>\n                    \n                </mat-select>\n               \n            </mat-form-field> -->\n            <!-- <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Created on</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\"  matInput >\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\"  matInput >\n            </mat-form-field> -->\n\n            <mat-form-field class=\"fields fileld33 margin-right\" appearance=\"outline\">\n                <mat-label>Created on</mat-label>\n                <input   matInput formControlName=\"created_on\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33 \" appearance=\"outline\">\n                <mat-label>Status</mat-label>\n                <mat-select formControlName=\"is_active\">\n                    <mat-option value=\"true\">Active</mat-option>\n                    <mat-option value=\"false\">Inactive</mat-option>\n                    \n                  </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33 mr-0\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\" [isInvalidDate]=\"isInvalidDate\" [autoApply]=\"true\" matInput formControlName=\"effective_from\" readonly>\n            </mat-form-field>\n        </div>\n        <ng-container class=\"py-3\" *ngIf=\"isloading\">\n            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n        </ng-container>\n    <div class=\"BtnBlock\">\n        <button class=\"btn btnSave\" (click)=\"submit()\">{{\"rule.save\" | translate}}</button>\n    </div>\n    </form>\n</div> ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\nimport { Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\n\n// table\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n@Component({\n  selector: 'app-rule-engine-dashboard',\n  templateUrl: './rule-engine-dashboard.component.html',\n  styleUrls: ['./rule-engine-dashboard.component.scss']\n})\nexport class RuleEngineDashboardComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  dataSource: any;\n  totalCount: number;\n  page: number = 1;\n  limit: number = 1000;\n  active = 1;\n  pageSizeOptions: number[] = [5, 10, 100, 1000];\n  isTripHistoryLoading = false;\n  displayedColumns: string[] = ['organization.name', 'percentage_of_violation_max', 'duration_of_violation', 'score', 'speed', 'road_factor', 'vehicle_category.name', 'day_night_driving', 'weather', 'exception_type', 'symbol'];\n  exception_type = \"\"\n  constructor(private _snackBar: MatSnackBar, private main: MainService, private route: Router, public localService: LocalService,private activeRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.limit = Number(this.localService.getItem(\"rulelimit\")) || 1000;\n    this.getRuleengineList()\n  }\n\n  pageChange(event) {\n    if(this.limit !== event.pageSize){\n      const queryParams: Params = { page: 1 };\n      this.route.navigate(\n        [], \n        {\n          \n          queryParams: queryParams, \n          queryParamsHandling: 'merge', // remove to replace all query params by provided\n        });\n      this.page = 1;\n    }\n    else{\n      const queryParams: Params = { page: event.pageIndex + 1 };\n      this.route.navigate(\n        [], \n        {\n          \n          queryParams: queryParams, \n          queryParamsHandling: 'merge', // remove to replace all query params by provided\n        });\n      this.page = event.pageIndex + 1;\n    }\n    this.limit = event.pageSize;\n    this.localService.setItem(\"rulelimit\", this.limit);\n    this.getRuleengineList();\n  }\n  exceptionType(type: string, num) {\n    this.exception_type = type;\n    this.active = num;\n    this.getRuleengineList();\n  }\n\n  getRuleengineList() {\n    this.activeRoute.queryParams\n    .subscribe(params => {\n      // const details:any = params.page;\n      this.page=params?.page || 1;\n    }\n  );\n    this.isTripHistoryLoading = true;\n    this.dataSource = [];\n    this.main.get(`rule-engine/list?page=${this.page}&limit=${this.limit}&exception_type=${this.exception_type}`).pipe().subscribe(res => {\n      if (res.data.rows) {\n        this.isTripHistoryLoading = false;\n        this.totalCount = res.data.count;\n        this.dataSource = res.data.rows;\n        this.setPage(this.page-1);\n      }\n    }), err => {\n      this.isTripHistoryLoading = false;\n    }\n  }\n  editRule(data) {\n    this.route.navigate([RouteConfig.editruleengine.url], { queryParams: { details: JSON.stringify(data) } });\n  }\n  resetStatus(ele, status) {\n    // console.log(id)\n    let data = {\n      id: ele.id,\n      is_active: status,\n      road_type_min: ele.road_type_min,\n      road_type_max: ele.road_type_max,\n      road_factor: ele.road_factor,\n      exception_type: ele.exception_type\n    }\n    this.main.put(`rule-engine/change-status`, data).pipe().subscribe(res => {\n      this.getRuleengineList();\n      this.openSnackBarmodal(res.message, \"status-rule\")\n\n    }), err => {\n\n    }\n  }\n\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: false, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n\n    });\n  }\n\n  checkUnit(data) {\n    if (data == 'speed') {\n      return \"km/hr\"\n    }\n    else if (data == 'breaking') {\n      return \"m/s\"\n    }\n    else if (data == 'cornering') {\n      return \"m/s\"\n    }\n    else if (data == 'acceleration') {\n      return \"m/s\"\n    }\n    else if (data == 'idling') {\n      return \"s\"\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.dataSource.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource = data;\n      return;\n    }\n\n    this.dataSource = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'organization.name':\n          return this.compare(a.organization.name, b.organization.name, isAsc);\n        case 'percentage_of_violation_max':\n          return this.compare(a.percentage_of_violation_max, b.percentage_of_violation_max, isAsc);\n        case 'duration_of_violation':\n          return this.compare(a.duration_of_violation, b.duration_of_violation, isAsc);\n        case 'score':\n          return this.compare(a.score, b.score, isAsc);\n        case 'road_factor':\n          return this.compare(a.road_factor, b.road_factor, isAsc);\n        case 'vehicle_category.name':\n          return this.compare(a.vehicle_category.name, b.vehicle_category.name, isAsc);\n        case 'day_night_driving':\n          return this.compare(a.day_night_driving, b.day_night_driving, isAsc);\n        case 'exception_type':\n          return this.compare(a.exception_type, b.exception_type, isAsc);\n        case 'weather':\n          return this.compare(a.weather, b.weather, isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n\n\n  compare(a: number | string, b: number | string, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  setPage(index: number) {\n    if(this.paginator)\n    this.paginator.pageIndex = index;\n  }\n}\n","<div class=\"mainFilter\">\n  <div class=\"filterHeader\">\n    {{\"sidebar.ruleEngineSetting\" | translate}}\n    <div>\n      <button class=\"btn btnFilterExport enable-click-event\"><img src=\"assets/images/export.svg\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"vehicleInfo\">\n  <h3 class=\"vehTitle\">{{\"sidebar.ruleEngineSetting\" | translate}}</h3>\n  <div class=\"ruleTab\">\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 1}\" (click)=\"exceptionType('',1)\">{{\"all\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 2}\" (click)=\"exceptionType('speed',2)\">{{\"rule.speeding\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 3}\" (click)=\"exceptionType('idling',3)\">{{\"rule.idling\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 4}\" (click)=\"exceptionType('acceleration',4)\">{{\"rule.safeAcc\" | translate}} </p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 5}\" (click)=\"exceptionType('breaking',5)\">{{\"rule.harshBraking\" | translate}} </p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 6}\" (click)=\"exceptionType('cornering',6)\">{{\"rule.harshCorn\" | translate}} </p>\n  </div>\n\n\n  <div class=\"table-responsive\">\n    <table mat-table matSort (matSortChange)='sortData($event)'  matSortDisableClear [dataSource]=\"dataSource\" class=\"mat-elevation-z8 w-100 booking-table\"\n      *ngIf=\"!isTripHistoryLoading\">\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"organization.name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.group\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.organization?.name || element?.org_id}} </td>\n      </ng-container>\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"percentage_of_violation_max\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.triggerEvent\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.percentage_of_violation_min}}-{{element?.percentage_of_violation_max || 'NA'}}% exce... </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"duration_of_violation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.time\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.duration_of_violation || 'NA'}}s</td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.point\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.score || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Speed range  Column -->\n      <ng-container matColumnDef=\"speed\">\n        <th mat-header-cell *matHeaderCellDef>{{\"rule.range\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> <span *ngIf=\"element?.exception_type!='speed'\">{{element?.gforce_limit}}</span> <span *ngIf=\"element?.exception_type=='speed'\">{{element?.road_type_max ==1000 ? '>' : ''}}{{element?.road_type_min }}{{element?.road_type_max !=1000 ? '-': ''}}{{element?.road_type_max ==1000 ? '' : element?.road_type_max}} </span>&nbsp;<span>{{checkUnit(element?.exception_type)}}</span> <span *ngIf=\"element?.exception_type!='speed' && element?.exception_type!='idling'\"><sup>2</sup></span>  </td>\n      </ng-container>\n\n      <!-- Road factor Column -->\n      <ng-container matColumnDef=\"road_factor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.roadFactor\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\">{{element?.road_factor || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"vehicle_category.name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{\"rule.vehCategory\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.vehicle_category?.name || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"day_night_driving\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.dayNight\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.day_night_driving || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"weather\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.weather\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.weather || 'NA'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"exception_type\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          Exception Category\n        </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\">{{ element?.exception_type }}</td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"symbol\">\n        <th mat-header-cell *matHeaderCellDef> {{\"rule.actions\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <!-- <span *ngIf=\"element?.is_active== true\" \n          (click)=\"resetStatus(element,false)\" class=\"date success cursor\">{{\"rule.markInactive\" | translate}}</span>\n        <span class=\"date danger cursor\" *ngIf=\"element?.is_active== false\" [ngClass]=\"{'activeFalse': element?.is_active== false}\" (click)=\"resetStatus(element,true)\">{{\"rule.markActive\" | translate}}</span> -->\n          <span class=\"edit cursor\" (click)=\"editRule(element)\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M17.5 18.3333H2.5C2.15833 18.3333 1.875 18.0499 1.875 17.7083C1.875 17.3666 2.15833 17.0833 2.5 17.0833H17.5C17.8417 17.0833 18.125 17.3666 18.125 17.7083C18.125 18.0499 17.8417 18.3333 17.5 18.3333Z\" fill=\"#604EFF\"/>\n              <path d=\"M15.8505 2.90005C14.2338 1.28338 12.6505 1.24172 10.9921 2.90005L9.9838 3.90838C9.90047 3.99172 9.86714 4.12505 9.90047 4.24172C10.5338 6.45005 12.3005 8.21672 14.5088 8.85005C14.5421 8.85838 14.5755 8.86672 14.6088 8.86672C14.7005 8.86672 14.7838 8.83338 14.8505 8.76672L15.8505 7.75838C16.6755 6.94172 17.0755 6.15005 17.0755 5.35005C17.0838 4.52505 16.6838 3.72505 15.8505 2.90005Z\" fill=\"#604EFF\"/>\n              <path d=\"M13.0079 9.60841C12.7663 9.49175 12.5329 9.37508 12.3079 9.24175C12.1246 9.13342 11.9496 9.01675 11.7746 8.89175C11.6329 8.80008 11.4663 8.66675 11.3079 8.53341C11.2913 8.52508 11.2329 8.47508 11.1663 8.40842C10.8913 8.17508 10.5829 7.87508 10.3079 7.54175C10.2829 7.52508 10.2413 7.46675 10.1829 7.39175C10.0996 7.29175 9.95795 7.12508 9.83295 6.93341C9.73295 6.80841 9.61628 6.62508 9.50795 6.44175C9.37461 6.21675 9.25795 5.99175 9.14128 5.75841V5.75841C8.98832 5.43063 8.5581 5.33326 8.30233 5.58903L3.61628 10.2751C3.50795 10.3834 3.40795 10.5917 3.38295 10.7334L2.93295 13.9251C2.84961 14.4917 3.00795 15.0251 3.35795 15.3834C3.65795 15.6751 4.07461 15.8334 4.52461 15.8334C4.62461 15.8334 4.72461 15.8251 4.82461 15.8084L8.02461 15.3584C8.17461 15.3334 8.38295 15.2334 8.48295 15.1251L13.1767 10.4313C13.4274 10.1806 13.3332 9.74936 13.0079 9.60841V9.60841Z\" fill=\"#604EFF\"/>\n              </svg>\n              \n          </span>\n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <ng-container class=\"py-3\" *ngIf=\"isTripHistoryLoading\">\n      <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n    </ng-container>\n    <ng-container *ngIf=\"dataSource.length==0 && isTripHistoryLoading==false\">\n      <div class=\"d-flex justify-content-center no-data\">\n        <h2>No Data Found</h2>\n      </div>\n    </ng-container>\n    <mat-paginator  [length]=\"totalCount\" #paginator [pageSize]=\"limit\"\n      (page)='pageChange($event)' [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"pageSizeOptions\">\n    </mat-paginator>\n    \n  </div>\n  <div class=\"cursor d-flex justify-content-end\">\n    <div class=\"circlePlus\" [routerLink]=\"[ 'addruleengine' ]\">\n      <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2 13H24\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M13 24V2\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        \n      <!-- <img src=\"/assets/images/add-circle.png\" alt=\"\" > -->\n    </div>\n    \n  </div>\n</div>"]}