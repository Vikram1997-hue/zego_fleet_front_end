(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["fleetOverview-mapview-mapview-module"],{

/***/ "+SWF":
/*!**********************************************************************!*\
  !*** ./src/app/main/fleetOverview/mapview/mapview-routing.module.ts ***!
  \**********************************************************************/
/*! exports provided: MapviewRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapviewRoutingModule", function() { return MapviewRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _mapview_dashboard_mapview_dashboard_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapview-dashboard/mapview-dashboard.component */ "xWwU");





const routes = [
    {
        path: "",
        component: _mapview_dashboard_mapview_dashboard_component__WEBPACK_IMPORTED_MODULE_2__["MapviewDashboardComponent"],
        pathMatch: 'full'
    }
];
class MapviewRoutingModule {
}
MapviewRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: MapviewRoutingModule });
MapviewRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function MapviewRoutingModule_Factory(t) { return new (t || MapviewRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](MapviewRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MapviewRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
                exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "ZyhS":
/*!**************************************************************!*\
  !*** ./src/app/main/fleetOverview/mapview/mapview.module.ts ***!
  \**************************************************************/
/*! exports provided: MapviewModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapviewModule", function() { return MapviewModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _mapview_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapview-routing.module */ "+SWF");
/* harmony import */ var _mapview_dashboard_mapview_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapview-dashboard/mapview-dashboard.component */ "xWwU");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "1kSV");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");
/* harmony import */ var ngx_daterangepicker_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-daterangepicker-material */ "YhS8");
/* harmony import */ var src_app_config_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/config/material */ "Uo7g");
/* harmony import */ var src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/shared/shared.module */ "PCNd");
/* harmony import */ var ngx_shimmer_loading__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-shimmer-loading */ "+HUQ");














class MapviewModule {
}
MapviewModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: MapviewModule });
MapviewModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function MapviewModule_Factory(t) { return new (t || MapviewModule)(); }, imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _mapview_routing_module__WEBPACK_IMPORTED_MODULE_2__["MapviewRoutingModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
            src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"],
            ngx_daterangepicker_material__WEBPACK_IMPORTED_MODULE_7__["NgxDaterangepickerMd"].forRoot(),
            src_app_config_material__WEBPACK_IMPORTED_MODULE_8__["MaterialModules"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"].forChild({
                extend: true
            }),
            ngx_shimmer_loading__WEBPACK_IMPORTED_MODULE_10__["NgxShimmerLoadingModule"],
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](MapviewModule, { declarations: [_mapview_dashboard_mapview_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["MapviewDashboardComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
        _mapview_routing_module__WEBPACK_IMPORTED_MODULE_2__["MapviewRoutingModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
        src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"], ngx_daterangepicker_material__WEBPACK_IMPORTED_MODULE_7__["NgxDaterangepickerMd"], src_app_config_material__WEBPACK_IMPORTED_MODULE_8__["MaterialModules"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"], ngx_shimmer_loading__WEBPACK_IMPORTED_MODULE_10__["NgxShimmerLoadingModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MapviewModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [_mapview_dashboard_mapview_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["MapviewDashboardComponent"]],
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                    _mapview_routing_module__WEBPACK_IMPORTED_MODULE_2__["MapviewRoutingModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                    src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"],
                    ngx_daterangepicker_material__WEBPACK_IMPORTED_MODULE_7__["NgxDaterangepickerMd"].forRoot(),
                    src_app_config_material__WEBPACK_IMPORTED_MODULE_8__["MaterialModules"],
                    _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModule"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"].forChild({
                        extend: true
                    }),
                    ngx_shimmer_loading__WEBPACK_IMPORTED_MODULE_10__["NgxShimmerLoadingModule"],
                ]
            }]
    }], null, null); })();


/***/ }),

/***/ "xWwU":
/*!*********************************************************************************************!*\
  !*** ./src/app/main/fleetOverview/mapview/mapview-dashboard/mapview-dashboard.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: MapviewDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapviewDashboardComponent", function() { return MapviewDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/config/app-config */ "Tr6M");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../environments/environment */ "AytR");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "wd/R");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_app_config_route_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/config/route-config */ "1r8O");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var src_app_services_main_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/main.service */ "c/rV");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var src_app_services_local_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/local.service */ "s3jE");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");












class MapviewDashboardComponent {
    constructor(cd, service, router, localService) {
        this.cd = cd;
        this.service = service;
        this.router = router;
        this.localService = localService;
        this.isCollapsed = true;
        this.vehicleCategoryData = [];
        this.vehicleList = [];
        this.selectedVehicleCategory = 'all';
        this.selectedVehicle = 'all';
        this.bounds = new google.maps.LatLngBounds();
        this.vehicleMarkerList = {};
        this.customeRange = 'Custom';
        this.setDate = 'Set Date';
        this.cancelDate = 'Cancel';
        this.filterCalledMap = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.listernerArray = {};
    }
    ngOnInit() {
        this.filterCalledMap = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        setTimeout(() => {
            this.initMap();
        }, 20);
        this.filterCalledMap.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["debounceTime"])(500)).subscribe(value => {
            if (value) {
                this.selectedOrgID = this.localService.getItem("selectedOrgs");
                if (this.selectedOrgID) {
                    this.selectedOrgID = JSON.parse(this.selectedOrgID);
                }
                this.resetToLastState();
                this.filterApply();
            }
        });
        this.getSocketToken();
        this.localService.getFilter().subscribe((val) => {
            if (val && this.router.url.split('?')[0] == src_app_config_route_config__WEBPACK_IMPORTED_MODULE_4__["RouteConfig"].mapview.url) {
                this.filterCalledMap.next(true);
            }
        });
        this.selectedOrgID = this.localService.getItem("selectedOrgs");
        if (this.selectedOrgID) {
            this.selectedOrgID = JSON.parse(this.selectedOrgID);
        }
        if (this.selectedOrgID) {
            this.resetToLastState();
            this.updatePageData();
        }
    }
    getSocketToken() {
        this.service.get(`validateSocket`).pipe().subscribe(response => {
            if (response.access_token) {
                let url = _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].socketUrl + '?token=' + response.access_token;
                this.socket = new WebSocket(url);
                let _this = this;
                this.socket.addEventListener('message', function (event) {
                    _this.dataParse(event.data);
                });
                this.socket.addEventListener('close', function (event) {
                    // console.log('The connection has been closed');
                });
            }
        }, (error) => {
        });
    }
    getVehicleCategory() {
        this.searchCategory = '';
        this.service.get(`vehicles/category-by-organisation?organisation=${JSON.stringify(this.selectedOrgID)}`).pipe().subscribe(response => {
            if (response.data && response.data.length) {
                this.vehicleCategoryData = response.data;
                this.selectedVehicleCategory = 'all';
            }
        }, (error) => {
        });
    }
    getVehicles(categoryId) {
        if ((categoryId && categoryId == 'all') || categoryId == undefined) {
            categoryId = '';
        }
        this.searchVehicle = '';
        this.service.get(`vehicles/by-organisation?organisation=${JSON.stringify(this.selectedOrgID)}`).pipe().subscribe(response => {
            if (response.data && response.data.length) {
                this.vehicleList = response.data;
                this.selectedVehicle = 'all';
            }
        }, (error) => {
        });
    }
    initMap() {
        var neitherLandCordi = new google.maps.LatLng(src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__["AppConfig"].netherlandLat, src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__["AppConfig"].netherlandLong);
        this.map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: neitherLandCordi,
            disableDefaultUI: true,
            draggable: true,
            scaleControl: true,
            zoomControl: true,
            zoomControlOptions: {
                style: google.maps.ZoomControlStyle.SMALL,
                position: google.maps.ControlPosition.TOP_RIGHT
            },
            fullscreenControl: true,
            fullscreenControlOptions: {
                style: google.maps.ZoomControlStyle.SMALL,
                position: google.maps.ControlPosition.BOTTOM_RIGHT
            },
        });
        this.map.setOptions({ styles: src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__["AppConfig"].mapStyle });
    }
    createMarker(data) {
        var infowindow = new google.maps.InfoWindow({
            content: ''
        });
        let color = '#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');
        if (!data.license_plate || data.license_plate == 'null') {
            data.license_plate = 'NA';
        }
        data.driver_name = data.driver_name ? data.driver_name : "NA";
        data.road_type = data.road_type ? data.road_type : "NA";
        let html = `
    <div style="display:flex; flex-wrap:wrap; justify-content: space-between; align-items:center; padding:5px 0;">
    <div style="padding:10px; width:145px; text-align:center; background: rgba(71, 79, 90, 0.05);
    border-radius: 8px; font: 600 12px/18px ModernEra; color:#474F5A; margin-right:10px">
        License: <span style="color:#474F5A; font: 600 14px/18px ModernEra; margin-left:6px">${data.license_plate}</span>
    </div>
    `;
        let extendedHtml = `
    <div>
        <div style="padding:10px; width:185px; text-align:center; background: rgba(71, 79, 90, 0.05);
    border-radius: 8px; font: 600 12px/18px ModernEra; color:#474F5A">
        Speed: <span style="color:#474F5A; font: 600 14px/18px ModernEra; margin-left:6px">${this.service.convertToDutch(data.current_speed)} kmph</span>
    </div>
    </div>`;
        var latLng = new google.maps.LatLng(data.current_lat, data.current_long);
        if (data.pre_lat == data.current_lat && data.pre_long == data.current_long || data.idle_time > 120) {
            html = html + `</div>`;
            this.vehicleMarkerList[data.vehicle_id] = new google.maps.Marker({
                position: latLng,
                icon: {
                    path: google.maps.SymbolPath.CIRCLE,
                    fillColor: color,
                    fillOpacity: 1,
                    strokeColor: color,
                    scale: 6
                },
                map: this.map,
            });
        }
        else {
            html = html + extendedHtml + `</div>`;
            this.vehicleMarkerList[data.vehicle_id] = new google.maps.Marker({
                position: latLng,
                icon: {
                    path: 'M21.134 4.5C21.5189 3.83333 22.4811 3.83333 22.866 4.5L31.134 18.8205C31.5189 19.4872 31.0378 20.3205 30.268 20.3205H13.7321C12.9622 20.3205 12.4811 19.4872 12.866 18.8205L21.134 4.5Z',
                    fillColor: color,
                    fillOpacity: 1,
                    strokeColor: color,
                    scale: 1
                },
                map: this.map,
            });
        }
        this.bindInfoWindow(this.vehicleMarkerList[data.vehicle_id], this.map, infowindow, html, data.vehicle_id);
        this.bounds.extend(latLng);
        this.map.fitBounds(this.bounds);
    }
    updateMarker(data) {
        var latlng = new google.maps.LatLng(data.current_lat, data.current_long);
        let color = this.vehicleMarkerList[data.vehicle_id].icon.fillColor;
        var infowindow = new google.maps.InfoWindow({
            content: ''
        });
        if (!data.license_plate || data.license_plate == 'null') {
            data.license_plate = 'NA';
        }
        data.driver_name = data.driver_name ? data.driver_name : "NA";
        data.road_type = data.road_type ? data.road_type : "NA";
        let html = `
    <div style="display:flex; flex-wrap:wrap; justify-content: space-between; align-items:center; padding:5px 0;">
    <div style="padding:10px; width:145px; text-align:center; background: rgba(71, 79, 90, 0.05);
    border-radius: 8px; font: 600 12px/18px ModernEra; color:#474F5A; margin-right:10px">
        License: <span style="color:#474F5A; font: 600 14px/18px ModernEra; margin-left:6px">${data.license_plate}</span>
    </div>
    `;
        let extendedHtml = `
    <div>
        <div style="padding:10px; width:185px; text-align:center; background: rgba(71, 79, 90, 0.05);
    border-radius: 8px; font: 600 12px/18px ModernEra; color:#474F5A">
    Speed: <span style="color:#474F5A; font: 600 14px/18px ModernEra; margin-left:6px">${this.service.convertToDutch(data.current_speed)} kmph</span>
    </div>
    </div>`;
        if ((data.pre_lat == data.current_lat && data.pre_long == data.current_long || data.idle_time > 120)) {
            html = html + `</div>`;
            this.vehicleMarkerList[data.vehicle_id].setIcon({
                path: google.maps.SymbolPath.CIRCLE,
                fillColor: color,
                fillOpacity: 1,
                strokeColor: color,
                scale: 6
            });
            this.vehicleMarkerList[data.vehicle_id].setPosition(latlng);
        }
        else {
            html = html + extendedHtml + `</div>`;
            this.vehicleMarkerList[data.vehicle_id].setIcon({
                path: 'M21.134 4.5C21.5189 3.83333 22.4811 3.83333 22.866 4.5L31.134 18.8205C31.5189 19.4872 31.0378 20.3205 30.268 20.3205H13.7321C12.9622 20.3205 12.4811 19.4872 12.866 18.8205L21.134 4.5Z',
                fillColor: color,
                fillOpacity: 1,
                strokeColor: color,
                scale: 1
            });
            this.animatedMove(this.vehicleMarkerList[data.vehicle_id], .5, this.vehicleMarkerList[data.vehicle_id].position, latlng);
        }
        this.bindInfoWindow(this.vehicleMarkerList[data.vehicle_id], this.map, infowindow, html, data.vehicle_id);
        // this.bounds.extend(latlng);
        // this.map.fitBounds(this.bounds);
    }
    bindInfoWindow(marker, map, infowindow, html, vehicleId) {
        if (this.listernerArray[vehicleId]) {
            google.maps.event.removeListener(this.listernerArray[vehicleId]);
        }
        this.listernerArray[vehicleId] = google.maps.event.addListener(marker, 'mouseover', function () {
            infowindow.setContent(html);
            infowindow.open(map, marker);
        });
        google.maps.event.addListener(marker, 'mouseout', function () {
            infowindow.close();
        });
        google.maps.event.addListener(marker, 'dblclick', function () {
            map.setZoom(12);
            map.setCenter(marker.getPosition());
        });
    }
    resetToLastState() {
        let category = this.localService.getItem("category");
        let vehicle = this.localService.getItem("vehicle");
        category && category !== 'all' ? this.selectedVehicleCategory = JSON.parse(category) : this.selectedVehicleCategory = 'all';
        vehicle && vehicle !== 'all' ? this.selectedVehicle = vehicle : this.selectedVehicle = 'all';
    }
    filterApply() {
        this.localService.setItem("category", this.selectedVehicleCategory);
        this.localService.setItem("vehicle", this.selectedVehicle);
        this.clearOverlays();
        this.updatePageData();
    }
    clearOverlays() {
        let key = Object.keys(this.vehicleMarkerList);
        for (var i = 0; i < key.length; i++) {
            this.vehicleMarkerList[key[i]].setMap(null);
        }
        this.vehicleMarkerList = {};
    }
    waitForSocketConnection(socket, callback) {
        let _this = this;
        setTimeout(function () {
            if (socket && socket.readyState === 1) {
                // console.log("Connection is made")
                if (callback != null) {
                    callback();
                }
            }
            else {
                // console.log("wait for connection...")
                _this.waitForSocketConnection(socket, callback);
            }
        }, 5); // wait 5 milisecond for the connection...
    }
    updatePageData() {
        let _this = this;
        let category = [];
        let vehicle = [];
        if ((this.selectedVehicle && this.selectedVehicle !== 'all')) {
            vehicle = [this.selectedVehicle];
        }
        else {
            if ((this.selectedVehicleCategory && this.selectedVehicleCategory !== 'all')) {
                category = [this.selectedVehicleCategory];
            }
        }
        // this.getDashboardData();
        let timestamp = '';
        if (this.map) {
            this.map.setCenter(new google.maps.LatLng(src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__["AppConfig"].netherlandLat, src_app_config_app_config__WEBPACK_IMPORTED_MODULE_1__["AppConfig"].netherlandLong));
            this.map.setZoom(8);
        }
        clearInterval(this.interval);
        let val = 0;
        // this.listernerArray = {};
        if (this.selectedOrgID.length) {
            // Wait until the state of the socket is not ready and send the message when it is...
            this.interval = setInterval(() => {
                this.waitForSocketConnection(this.socket, function () {
                    let data = {
                        "action": "liveFeed",
                        "orgId": _this.selectedOrgID,
                        "vehicleCategory": category,
                        "licensePlate": vehicle,
                        "message": "testing",
                        "timestamp": timestamp
                    };
                    if (val == 0) {
                        _this.clearOverlays();
                    }
                    val = val + 1;
                    // console.log("message sent!!!", data);
                    timestamp = moment__WEBPACK_IMPORTED_MODULE_3__().utc().format("yyyy-M-D hh:mm:ss");
                    _this.socket.send(JSON.stringify(data));
                });
            }, 2000);
        }
    }
    // dashBoardData: any = {}
    // isLoadingshimmer = false;
    // getDashboardData() {
    //   this.isLoadingshimmer = true;
    //   let querryParams = this.createQuerryparams()
    //   this.service.get(`zego/dashboard/activity-count-v2?${querryParams}`).pipe().subscribe(response => {
    //     if (response.data) {
    //       this.dashBoardData = response.data;
    //       this.dashBoardData["safeScoreChange"] = parseFloat(
    //         this.dashBoardData.pre_safe_score
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_safe_score
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.safe_score
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.safe_score) -
    //           parseFloat(this.dashBoardData.pre_safe_score)) /
    //           parseFloat(this.dashBoardData.pre_safe_score)) *
    //         100
    //         : 0;
    //       this.dashBoardData["driverChange"] = parseFloat(
    //         this.dashBoardData.pre_total_drivers
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_total_drivers
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.total_drivers
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.total_drivers) -
    //           parseFloat(this.dashBoardData.pre_total_drivers)) /
    //           parseFloat(this.dashBoardData.pre_total_drivers)) *
    //         100
    //         : 0;
    //       this.dashBoardData["tripChange"] = parseFloat(
    //         this.dashBoardData.pre_total_trips
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_total_trips
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.total_trips
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.total_trips) -
    //           parseFloat(this.dashBoardData.pre_total_trips)) /
    //           parseFloat(this.dashBoardData.pre_total_trips)) *
    //         100
    //         : 0;
    //       this.dashBoardData["vehicleChange"] = parseFloat(
    //         this.dashBoardData.pre_total_drivers
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_total_drivers
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.total_vehicles
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.total_vehicles) -
    //           parseFloat(this.dashBoardData.pre_total_vehicles)) /
    //           parseFloat(this.dashBoardData.pre_total_vehicles)) *
    //         100
    //         : 0;
    //       this.dashBoardData["exceptionChange"] = parseFloat(
    //         this.dashBoardData.pre_exception
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_exception
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.exception
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.exception) -
    //           parseFloat(this.dashBoardData.pre_exception)) /
    //           parseFloat(this.dashBoardData.pre_exception)) *
    //         100
    //         : 0;
    //       this.dashBoardData["distanceChange"] = parseFloat(
    //         this.dashBoardData.pre_total_distance
    //       ) !== 1001 && parseFloat(
    //         this.dashBoardData.pre_total_distance
    //       ) !== 0 && parseFloat(
    //         this.dashBoardData.total_distance
    //       ) !== 1001
    //         ? ((parseFloat(this.dashBoardData.total_distance) -
    //           parseFloat(this.dashBoardData.pre_total_distance)) /
    //           parseFloat(this.dashBoardData.pre_total_distance)) *
    //         100
    //         : 0;
    //     }
    //     this.isLoadingshimmer = false;
    //     this.cd.detectChanges();
    //   }, (error) => {
    //     this.dashBoardData = {};
    //     this.isLoadingshimmer = false;
    //     this.cd.detectChanges();
    //   })
    // }
    // createQuerryparams() {
    //   let querryParams = `organisation=${JSON.stringify(this.selectedOrgID)}`;
    //   querryParams = querryParams + `&from_date=${moment().subtract(1, 'month').startOf('month').format('YYYY-MM-DD')}`
    //   querryParams = querryParams + `&to_date=${moment().subtract(1, 'month').endOf('month').format('YYYY-MM-DD')}`
    //   querryParams = querryParams + `&custom_filter=false&filter_value=4`
    //   return querryParams;
    // }
    dataParse(event) {
        event = JSON.parse(event);
        if (event.action && event.action == 'liveFeed' && event.data) {
            let data = event.data;
            for (let i = 0; i < data.length; i++) {
                if (this.interval) {
                    let key = Object.keys(this.vehicleMarkerList);
                    // if(data[i]['license_plate']=='VBB-92-F')
                    // console.log(data[i])
                    if (key.includes(String(data[i]['vehicle_id']))) {
                        this.updateMarker(data[i]);
                        // console.log(data[i]);
                    }
                    else {
                        this.createMarker(data[i]);
                        // console.log(data[i]);
                    }
                }
                else {
                    break;
                }
            }
        }
    }
    resetFilter() {
        this.selectedVehicleCategory = 'all';
        this.selectedVehicle = 'all';
        this.filterApply();
    }
    animatedMove(marker, t, current, moveto) {
        var deltalat = (moveto.lat() - current.lat()) / 100;
        var deltalng = (moveto.lng() - current.lng()) / 100;
        var delay = 10 * t;
        for (var i = 0; i < 100; i++) {
            (function (ind) {
                setTimeout(function () {
                    var lat = marker.position.lat();
                    var lng = marker.position.lng();
                    lat += deltalat;
                    lng += deltalng;
                    let latlng = new google.maps.LatLng(lat, lng);
                    marker.setPosition(latlng);
                }, delay * ind);
            })(i);
        }
    }
    ngOnDestroy() {
        //Called once, before the instance is destroyed.
        //Add 'implements OnDestroy' to the class.
        // this.webSocket.removeListener();
        clearInterval(this.interval);
        if (this.socket)
            this.socket.removeEventListener('message', function (event) {
                console.log('removed');
            });
    }
}
MapviewDashboardComponent.ɵfac = function MapviewDashboardComponent_Factory(t) { return new (t || MapviewDashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_main_service__WEBPACK_IMPORTED_MODULE_7__["MainService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_local_service__WEBPACK_IMPORTED_MODULE_9__["LocalService"])); };
MapviewDashboardComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: MapviewDashboardComponent, selectors: [["app-mapview-dashboard"]], decls: 13, vars: 3, consts: [[1, "mapSec"], [1, "mapTitle"], ["width", "20", "height", "20", "viewBox", "0 0 20 20", "fill", "none", "xmlns", "http://www.w3.org/2000/svg"], ["d", "M7.49984 18.3332H12.4998C16.6665 18.3332 18.3332 16.6665 18.3332 12.4998V7.49984C18.3332 3.33317 16.6665 1.6665 12.4998 1.6665H7.49984C3.33317 1.6665 1.6665 3.33317 1.6665 7.49984V12.4998C1.6665 16.6665 3.33317 18.3332 7.49984 18.3332Z", "stroke", "#667280", "stroke-width", "1.5", "stroke-linecap", "round", "stroke-linejoin", "round"], ["d", "M8.82471 6.3999H12.358V9.94157", "stroke", "#667280", "stroke-width", "1.5", "stroke-linecap", "round", "stroke-linejoin", "round"], ["d", "M12.3583 6.3999L7.6416 11.1166", "stroke", "#667280", "stroke-width", "1.5", "stroke-linecap", "round", "stroke-linejoin", "round"], ["d", "M5 13.7583C8.24167 14.8416 11.7583 14.8416 15 13.7583", "stroke", "#667280", "stroke-width", "1.5", "stroke-linecap", "round", "stroke-linejoin", "round"], [1, "mapBox"], ["id", "map"]], template: function MapviewDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "h4");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](4, "translate");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "svg", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "path", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "path", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "path", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "path", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceHTML"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](4, 1, "sidebar.mapView"));
    } }, pipes: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslatePipe"]], styles: ["#map[_ngcontent-%COMP%] {\n  width: 100%;\n  height: 650px;\n  margin: 0px;\n  padding: 0px;\n  border-radius: 12px;\n}\n\n.mapSec[_ngcontent-%COMP%] {\n  background: #ffffff;\n  border-radius: 9.60114px;\n  padding: 23px 20px;\n}\n\n.mapSec[_ngcontent-%COMP%]   .mapTitle[_ngcontent-%COMP%] {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: start;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.mapSec[_ngcontent-%COMP%]   .mapTitle[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\n  font: 700 16px/19px ModernEra_Bold;\n  margin-bottom: 0;\n  margin-right: 5px;\n  color: #001e50;\n}\n\n.mapSec[_ngcontent-%COMP%]   .mapBox[_ngcontent-%COMP%] {\n  width: 100%;\n  height: 700px;\n  background-color: #ffffff;\n}\n\n  .gm-fullscreen-control {\n  background: #0064ff !important;\n  background-image: url(\"/assets/images/fullscreen_map.svg\") !important;\n  background-repeat: no-repeat !important;\n  background-position: center !important;\n  height: 44px !important;\n  width: 44px !important;\n  border-radius: 50% !important;\n}\n\n  .gm-fullscreen-control img {\n  display: none !important;\n}\n/*# sourceMappingURL=data:application/json;base64, */"], changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MapviewDashboardComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-mapview-dashboard',
                templateUrl: './mapview-dashboard.component.html',
                styleUrls: ['./mapview-dashboard.component.scss'],
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"] }, { type: src_app_services_main_service__WEBPACK_IMPORTED_MODULE_7__["MainService"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }, { type: src_app_services_local_service__WEBPACK_IMPORTED_MODULE_9__["LocalService"] }]; }, null); })();


/***/ })

}]);
//# sourceMappingURL=fleetOverview-mapview-mapview-module-es2015.js.map