{"version":3,"sources":["./node_modules/ngx-gauge/__ivy_ngcc__/fesm2015/ngx-gauge.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyI;AAC1F;;AAEP;AACE;;AAE1C;AACA;AACA;AACA,kDAAkD;AAClD,IAAI,0DAAmB;AACvB,CAAC;AACD,oDAAoD;AACpD,IAAI,qEAA8B;AAClC,IAAI,oDAAa;AACjB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,kDAAkD;AAClD,IAAI,0DAAmB;AACvB,CAAC;AACD,oDAAoD;AACpD,IAAI,qEAA8B;AAClC,IAAI,oDAAa;AACjB,IAAI,oDAAa;AACjB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB,CAAC,yDAAkB;AAC/C,CAAC;AACD,kDAAkD;AAClD,IAAI,0DAAmB;AACvB,CAAC;AACD,qDAAqD;AACrD,IAAI,qEAA8B;AAClC,IAAI,oDAAa;AACjB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,mDAAmD;AACnD,IAAI,0DAAmB;AACvB,CAAC;AACD,qDAAqD;AACrD,IAAI,qEAA8B;AAClC,IAAI,oDAAa;AACjB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,wFAAwF;AACxI,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,+DAAwB,EAAE,2FAA2F;AAC5I,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,qFAAqF;AACpI,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,qFAAqF;AACpI,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,yCAAyC;AACzC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gDAAgD,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG;AACnK,gBAAgB,+DAAwB,EAAE,kHAAkH;AAC5J,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,+CAA+C;AACtD,QAAQ,+DAAwB;AAChC,QAAQ,+DAAwB;AAChC,QAAQ,+DAAwB;AAChC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,8HAA8H;AACrI,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,kYAAkY,aAAa,kEAA2B,iSAAiS;AAC7tB,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,qEAA8B;AACtC,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,mEAA4B;AACpC,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,wDAAe,EAAE,4DAAmB,WAAW,2DAAkB,8BAA8B,qBAAqB,kBAAkB,kBAAkB,8BAA8B,kBAAkB,WAAW,gBAAgB,mBAAmB,kBAAkB,gBAAgB,uBAAuB,eAAe,oBAAoB,qBAAqB,eAAe,qBAAqB,eAAe,WAAW,gBAAgB,gBAAgB,2BAA2B,eAAe,0BAA0B,gBAAgB,sBAAsB;AACrkB;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,eAAe,OAAO,uDAAS,oBAAoB,eAAe,IAAI;AACtE,cAAc,OAAO,uDAAS,oBAAoB,eAAe,IAAI;AACrE,gBAAgB,OAAO,uDAAS,qBAAqB,eAAe,IAAI;AACxE,mBAAmB,OAAO,0DAAY,0BAA0B;AAChE,qBAAqB,OAAO,0DAAY,4BAA4B;AACpE,oBAAoB,OAAO,0DAAY,2BAA2B;AAClE,0BAA0B,OAAO,0DAAY,0BAA0B;AACvE,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE,YAAY,OAAO,mDAAK,EAAE;AAC1B,WAAW,OAAO,mDAAK,EAAE;AACzB,eAAe,OAAO,mDAAK,EAAE;AAC7B,WAAW,OAAO,mDAAK,EAAE;AACzB,YAAY,OAAO,mDAAK,EAAE;AAC1B,WAAW,OAAO,mDAAK,EAAE;AACzB,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,mDAAK,EAAE;AAC5B,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,kcAAkc,SAAS,8LAA8L,gBAAgB,iNAAiN,QAAQ,8RAA8R,OAAO;AACvpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD,2CAA2C,qBAAqB,kBAAkB,kBAAkB,8BAA8B,kBAAkB,WAAW,gBAAgB,mBAAmB,kBAAkB,gBAAgB,uBAAuB,eAAe,oBAAoB,qBAAqB,eAAe,qBAAqB,eAAe,WAAW,gBAAgB,gBAAgB,2BAA2B,eAAe,0BAA0B,gBAAgB;AACre,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,uDAAgB,EAAE,EAAE,EAAE,GAAG;AAC5F,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,8BAA8B,eAAe;AAC7C,SAAS;AACT,kBAAkB,uDAAS;AAC3B,8BAA8B,eAAe;AAC7C,SAAS;AACT,kBAAkB,uDAAS;AAC3B,+BAA+B,eAAe;AAC9C,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE,aAAa,4DAAY,IAAI;AAChK,cAAc,oDAAoD,gEAAyB,kBAAkB,4BAA4B,kFAAkF,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,kFAAkF,EAAE,EAAE,EAAE,EAAE;AAChY,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEiI;;AAEjI,qC","file":"default~dashboard-dashboard-module~fleetOverview-trip-trip-module~fleetOverview-vehicle-vehicle-modu~fba2ee9c-es2015.js","sourcesContent":["import { Directive, Component, ViewEncapsulation, ElementRef, Renderer2, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"canvas\"];\nconst _c1 = [\"rLabel\"];\nconst _c2 = [\"reading\"];\nfunction NgxGauge_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction NgxGauge_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.prepend);\n} }\nfunction NgxGauge_ng_content_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 1, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction NgxGauge_ng_container_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"number\");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r4.value));\n} }\nfunction NgxGauge_ng_content_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 2, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction NgxGauge_ng_container_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.append);\n} }\nfunction NgxGauge_ng_content_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction NgxGauge_ng_container_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.label);\n} }\nconst _c3 = [[[\"ngx-gauge-prepend\"]], [[\"ngx-gauge-value\"]], [[\"ngx-gauge-append\"]], [[\"ngx-gauge-label\"]]];\nconst _c4 = [\"ngx-gauge-prepend\", \"ngx-gauge-value\", \"ngx-gauge-append\", \"ngx-gauge-label\"];\nfunction clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\r\n}\r\nfunction cssUnit(value) {\r\n    return `${value}px`;\r\n}\r\nfunction isNumber(value) {\r\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\n\nclass NgxGaugeAppend {\r\n}\nNgxGaugeAppend.ɵfac = function NgxGaugeAppend_Factory(t) { return new (t || NgxGaugeAppend)(); };\nNgxGaugeAppend.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxGaugeAppend, selectors: [[\"ngx-gauge-append\"]], exportAs: [\"ngxGaugeAppend\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGaugeAppend, [{\n        type: Directive,\n        args: [{\n                selector: \"ngx-gauge-append\",\n                exportAs: \"ngxGaugeAppend\"\n            }]\n    }], null, null); })();\r\nclass NgxGaugePrepend {\r\n}\nNgxGaugePrepend.ɵfac = function NgxGaugePrepend_Factory(t) { return new (t || NgxGaugePrepend)(); };\nNgxGaugePrepend.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxGaugePrepend, selectors: [[\"ngx-gauge-prepend\"]], exportAs: [\"ngxGaugePrepend\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGaugePrepend, [{\n        type: Directive,\n        args: [{\n                selector: \"ngx-gauge-prepend\",\n                exportAs: \"ngxGaugePrepend\"\n            }]\n    }], null, null); })();\r\nclass NgxGaugeValue {\r\n}\nNgxGaugeValue.ɵfac = function NgxGaugeValue_Factory(t) { return new (t || NgxGaugeValue)(); };\nNgxGaugeValue.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxGaugeValue, selectors: [[\"ngx-gauge-value\"]], exportAs: [\"ngxGaugeValue\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGaugeValue, [{\n        type: Directive,\n        args: [{\n                selector: \"ngx-gauge-value\",\n                exportAs: \"ngxGaugeValue\"\n            }]\n    }], null, null); })();\r\nclass NgxGaugeLabel {\r\n}\nNgxGaugeLabel.ɵfac = function NgxGaugeLabel_Factory(t) { return new (t || NgxGaugeLabel)(); };\nNgxGaugeLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxGaugeLabel, selectors: [[\"ngx-gauge-label\"]], exportAs: [\"ngxGaugeLabel\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGaugeLabel, [{\n        type: Directive,\n        args: [{\n                selector: \"ngx-gauge-label\",\n                exportAs: \"ngxGaugeLabel\"\n            }]\n    }], null, null); })();\n\nconst DEFAULTS = {\r\n    MIN: 0,\r\n    MAX: 100,\r\n    TYPE: 'arch',\r\n    THICK: 4,\r\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\r\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\r\n    CAP: 'butt',\r\n    SIZE: 200\r\n};\r\nclass NgxGauge {\r\n    constructor(_elementRef, _renderer) {\r\n        this._elementRef = _elementRef;\r\n        this._renderer = _renderer;\r\n        this._size = DEFAULTS.SIZE;\r\n        this._min = DEFAULTS.MIN;\r\n        this._max = DEFAULTS.MAX;\r\n        this._animate = true;\r\n        this._initialized = false;\r\n        this._animationRequestID = 0;\r\n        this.ariaLabel = '';\r\n        this.ariaLabelledby = null;\r\n        this.type = DEFAULTS.TYPE;\r\n        this.cap = DEFAULTS.CAP;\r\n        this.thick = DEFAULTS.THICK;\r\n        this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\r\n        this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\r\n        this.thresholds = Object.create(null);\r\n        this._value = 0;\r\n        this.duration = 1200;\r\n    }\r\n    get size() { return this._size; }\r\n    set size(value) {\r\n        this._size = coerceNumberProperty(value);\r\n    }\r\n    get min() { return this._min; }\r\n    set min(value) {\r\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\r\n    }\r\n    get animate() { return this._animate; }\r\n    set animate(value) {\r\n        this._animate = coerceBooleanProperty(value);\r\n    }\r\n    get max() { return this._max; }\r\n    set max(value) {\r\n        this._max = coerceNumberProperty(value, DEFAULTS.MAX);\r\n    }\r\n    get value() { return this._value; }\r\n    set value(val) {\r\n        this._value = coerceNumberProperty(val);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\r\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\r\n        if (this._initialized) {\r\n            if (isDataChanged) {\r\n                let nv, ov;\r\n                if (changes['value']) {\r\n                    nv = changes['value'].currentValue;\r\n                    ov = changes['value'].previousValue;\r\n                }\r\n                this._update(nv, ov);\r\n            }\r\n            if (isCanvasPropertyChanged) {\r\n                this._destroy();\r\n                this._init();\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\r\n        this._canvas.nativeElement.width = this._getWidth();\r\n        this._canvas.nativeElement.height = this._getCanvasHeight();\r\n        this._renderer.setStyle(this._label.nativeElement, 'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\r\n        this._renderer.setStyle(this._reading.nativeElement, 'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this._canvas) {\r\n            this._init();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroy();\r\n    }\r\n    _getBounds(type) {\r\n        let head, tail;\r\n        if (type == 'semi') {\r\n            head = Math.PI;\r\n            tail = 2 * Math.PI;\r\n        }\r\n        else if (type == 'full') {\r\n            head = 1.5 * Math.PI;\r\n            tail = 3.5 * Math.PI;\r\n        }\r\n        else if (type === 'arch') {\r\n            head = 0.8 * Math.PI;\r\n            tail = 2.2 * Math.PI;\r\n        }\r\n        return { head, tail };\r\n    }\r\n    _drawShell(start, middle, tail, color) {\r\n        let center = this._getCenter(), radius = this._getRadius();\r\n        middle = Math.max(middle, start); // never below 0%\r\n        middle = Math.min(middle, tail); // never exceed 100%\r\n        if (this._initialized) {\r\n            this._clear();\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = this.backgroundColor;\r\n            this._context.arc(center.x, center.y, radius, middle, tail, false);\r\n            this._context.stroke();\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = color;\r\n            this._context.arc(center.x, center.y, radius, start, middle, false);\r\n            this._context.stroke();\r\n        }\r\n    }\r\n    _clear() {\r\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\r\n    }\r\n    _getWidth() {\r\n        return this.size;\r\n    }\r\n    _getHeight() {\r\n        return this.size;\r\n    }\r\n    // canvas height will be shorter for type 'semi' and 'arch'\r\n    _getCanvasHeight() {\r\n        return (this.type == 'arch' || this.type == 'semi')\r\n            ? 0.85 * this._getHeight()\r\n            : this._getHeight();\r\n    }\r\n    _getRadius() {\r\n        var center = this._getCenter();\r\n        return center.x - this.thick;\r\n    }\r\n    _getCenter() {\r\n        var x = this._getWidth() / 2, y = this._getHeight() / 2;\r\n        return { x, y };\r\n    }\r\n    _init() {\r\n        this._context = this._canvas.nativeElement.getContext('2d');\r\n        this._initialized = true;\r\n        this._updateSize();\r\n        this._setupStyles();\r\n        this._create();\r\n    }\r\n    _destroy() {\r\n        if (this._animationRequestID) {\r\n            window.cancelAnimationFrame(this._animationRequestID);\r\n            this._animationRequestID = 0;\r\n        }\r\n        this._clear();\r\n        this._context = null;\r\n        this._initialized = false;\r\n    }\r\n    _setupStyles() {\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n    }\r\n    _getForegroundColorByRange(value) {\r\n        const match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) <= value; })\r\n            .sort((a, b) => Number(a) - Number(b))\r\n            .reverse()[0];\r\n        return match !== undefined\r\n            ? this.thresholds[match].color || this.foregroundColor\r\n            : this.foregroundColor;\r\n    }\r\n    _create(nv, ov) {\r\n        let self = this, type = this.type, bounds = this._getBounds(type), duration = this.duration, min = this.min, max = this.max, value = clamp(this.value, this.min, this.max), start = bounds.head, unit = (bounds.tail - bounds.head) / (max - min), displacement = unit * (value - min), tail = bounds.tail, color = this._getForegroundColorByRange(value), startTime;\r\n        if (self._animationRequestID) {\r\n            window.cancelAnimationFrame(self._animationRequestID);\r\n        }\r\n        function animate(timestamp) {\r\n            timestamp = timestamp || new Date().getTime();\r\n            let runtime = timestamp - startTime;\r\n            let progress = Math.min(runtime / duration, 1);\r\n            let previousProgress = ov ? (ov - min) * unit : 0;\r\n            let middle = start + previousProgress + displacement * progress;\r\n            self._drawShell(start, middle, tail, color);\r\n            if (self._animationRequestID && (runtime < duration)) {\r\n                self._animationRequestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\r\n            }\r\n            else {\r\n                window.cancelAnimationFrame(self._animationRequestID);\r\n            }\r\n        }\r\n        if (this._animate) {\r\n            if (nv != undefined && ov != undefined) {\r\n                displacement = unit * nv - unit * ov;\r\n            }\r\n            self._animationRequestID = window.requestAnimationFrame((timestamp) => {\r\n                startTime = timestamp || new Date().getTime();\r\n                animate(startTime);\r\n            });\r\n        }\r\n        else {\r\n            self._drawShell(start, start + displacement, tail, color);\r\n        }\r\n    }\r\n    _update(nv, ov) {\r\n        this._clear();\r\n        this._create(nv, ov);\r\n    }\r\n}\nNgxGauge.ɵfac = function NgxGauge_Factory(t) { return new (t || NgxGauge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgxGauge.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxGauge, selectors: [[\"ngx-gauge\"]], contentQueries: function NgxGauge_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxGaugeLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxGaugePrepend, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxGaugeAppend, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxGaugeValue, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prependChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._appendChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._valueDisplayChild = _t.first);\n    } }, viewQuery: function NgxGauge_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c2, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._canvas = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._reading = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", \"aria-readonly\", \"true\"], hostVars: 7, hostBindings: function NgxGauge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵclassProp(\"ngx-gauge-meter\", true);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], type: \"type\", cap: \"cap\", thick: \"thick\", foregroundColor: \"foregroundColor\", backgroundColor: \"backgroundColor\", thresholds: \"thresholds\", duration: \"duration\", size: \"size\", min: \"min\", animate: \"animate\", max: \"max\", value: \"value\", label: \"label\", append: \"append\", prepend: \"prepend\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 17, vars: 16, consts: [[1, \"reading-block\"], [\"reading\", \"\"], [1, \"reading-affix\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngSwitch\"], [1, \"reading-label\", 3, \"ngSwitch\"], [\"rLabel\", \"\"], [\"canvas\", \"\"]], template: function NgxGauge_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"u\", 2);\n        ɵngcc0.ɵɵtemplate(3, NgxGauge_ng_content_3_Template, 1, 0, \"ng-content\", 3);\n        ɵngcc0.ɵɵtemplate(4, NgxGauge_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerStart(5, 4);\n        ɵngcc0.ɵɵtemplate(6, NgxGauge_ng_content_6_Template, 1, 0, \"ng-content\", 3);\n        ɵngcc0.ɵɵtemplate(7, NgxGauge_ng_container_7_Template, 3, 3, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵelementStart(8, \"u\", 2);\n        ɵngcc0.ɵɵtemplate(9, NgxGauge_ng_content_9_Template, 1, 0, \"ng-content\", 3);\n        ɵngcc0.ɵɵtemplate(10, NgxGauge_ng_container_10_Template, 2, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 5, 6);\n        ɵngcc0.ɵɵtemplate(13, NgxGauge_ng_content_13_Template, 1, 0, \"ng-content\", 3);\n        ɵngcc0.ɵɵtemplate(14, NgxGauge_ng_container_14_Template, 2, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(15, \"canvas\", null, 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"font-size\", ctx.size * 0.22 + \"px\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._prependChild != null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._valueDisplayChild != null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._appendChild != null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"font-size\", ctx.size / 13 + \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._labelChild != null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase], pipes: [ɵngcc1.DecimalPipe], styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block,.reading-label{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;display:inline-block}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\"], encapsulation: 2 });\r\nNgxGauge.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNgxGauge.propDecorators = {\r\n    _canvas: [{ type: ViewChild, args: ['canvas', { static: true },] }],\r\n    _label: [{ type: ViewChild, args: ['rLabel', { static: true },] }],\r\n    _reading: [{ type: ViewChild, args: ['reading', { static: true },] }],\r\n    _labelChild: [{ type: ContentChild, args: [NgxGaugeLabel,] }],\r\n    _prependChild: [{ type: ContentChild, args: [NgxGaugePrepend,] }],\r\n    _appendChild: [{ type: ContentChild, args: [NgxGaugeAppend,] }],\r\n    _valueDisplayChild: [{ type: ContentChild, args: [NgxGaugeValue,] }],\r\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\r\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\r\n    size: [{ type: Input }],\r\n    min: [{ type: Input }],\r\n    animate: [{ type: Input }],\r\n    max: [{ type: Input }],\r\n    type: [{ type: Input }],\r\n    cap: [{ type: Input }],\r\n    thick: [{ type: Input }],\r\n    label: [{ type: Input }],\r\n    append: [{ type: Input }],\r\n    prepend: [{ type: Input }],\r\n    foregroundColor: [{ type: Input }],\r\n    backgroundColor: [{ type: Input }],\r\n    thresholds: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    duration: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGauge, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-gauge',\n                template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"size * 0.22 + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" #rLabel\\r\\n     [style.fontSize]=\\\"size / 13 + 'px'\\\"\\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas></canvas>\\r\\n\",\n                host: {\n                    'role': 'slider',\n                    'aria-readonly': 'true',\n                    '[class.ngx-gauge-meter]': 'true',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-label]': 'ariaLabel',\n                    '[attr.aria-labelledby]': 'ariaLabelledby'\n                },\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block,.reading-label{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;display:inline-block}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], type: [{\n            type: Input\n        }], cap: [{\n            type: Input\n        }], thick: [{\n            type: Input\n        }], foregroundColor: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], thresholds: [{\n            type: Input\n        }], duration: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], animate: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _canvas: [{\n            type: ViewChild,\n            args: ['canvas', { static: true }]\n        }], _label: [{\n            type: ViewChild,\n            args: ['rLabel', { static: true }]\n        }], _reading: [{\n            type: ViewChild,\n            args: ['reading', { static: true }]\n        }], _labelChild: [{\n            type: ContentChild,\n            args: [NgxGaugeLabel]\n        }], _prependChild: [{\n            type: ContentChild,\n            args: [NgxGaugePrepend]\n        }], _appendChild: [{\n            type: ContentChild,\n            args: [NgxGaugeAppend]\n        }], _valueDisplayChild: [{\n            type: ContentChild,\n            args: [NgxGaugeValue]\n        }], label: [{\n            type: Input\n        }], append: [{\n            type: Input\n        }], prepend: [{\n            type: Input\n        }] }); })();\n\nclass NgxGaugeModule {\r\n}\nNgxGaugeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxGaugeModule });\nNgxGaugeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxGaugeModule_Factory(t) { return new (t || NgxGaugeModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxGaugeModule, { declarations: function () { return [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxGaugeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n                exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public APIs of ngx-gauge\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxGaugeModule, NgxGauge as ɵa, NgxGaugeAppend as ɵb, NgxGaugePrepend as ɵc, NgxGaugeValue as ɵd, NgxGaugeLabel as ɵe };\n\n//# sourceMappingURL=ngx-gauge.js.map"],"sourceRoot":"webpack:///"}