{"version":3,"sources":["webpack:///src/app/main/behaviourScore/vechile-driving/vechile-driving-routing.module.ts","webpack:///src/app/main/behaviourScore/vechile-driving/vechiledrivingbehaviourscore/vechiledrivingbehaviourscore.component.ts","webpack:///src/app/main/behaviourScore/vechile-driving/vechiledrivingbehaviourscore/vechiledrivingbehaviourscore.component.html","webpack:///src/app/main/behaviourScore/vechile-driving/vechile-driving.module.ts"],"names":["routes","path","component","pathMatch","VechileDrivingRoutingModule","forChild","imports","exports","VechiledrivingbehaviourscoreComponent","router","service","localService","elementRef","locale","isCollapsed","active","displayedColumns","page","limit","count","isTripHistoryLoading","speedProfile","accProfile","ranges","momentRange","alwaysShowCalendars","showRangeLabelOnInput","keepCalendarOpeningWithRange","selectedDriver","searchDriver","driverList","invalidDates","graphname","tooltips","date","text","add","tableDataLoading","selectedShow","startDate","subtract","set","endDate","selectedShowCopy","isInvalidDate","m","some","d","isSame","isTooltipDate","tooltip","find","tt","register","selected","startOf","endOf","selectedAgain","selectedOrgID","getItem","JSON","parse","resetToLastState","updatePageData","getDrivers","watchOrgData","subscribe","resp","url","split","vechiledrivingBehaviour","orgId","isEqual","length","every","val","includes","get","stringify","pipe","response","data","error","side","driverId","search","querryParams","createQuerryparams","drivingBehaviourLeft","drivingBehaviourRight","drivingBehaviourLeftgraph","creategraphArray","drivingBehaviourRightgraph","myChartleft","destroy","forEach","element","weight","push","Number","toFixed","format","createleftChart","myChartright","createrightChart","getDrivingBehaviour","searchString","getDrivingBehaviourgraph","label","range","name","category","setItem","changeState","listing","checkCustomDate","undefined","id","navigate","vehicleDetail","precision","parseFloat","filterApply","labels","htmlRef","nativeElement","querySelector","gradient","getContext","createLinearGradient","addColorStop","type","datasets","_d","borderColor","cubicInterpolationMode","tension","fill","backgroundColor","options","responsive","maintainAspectRatio","aspectRatio","plugins","title","display","legend","align","usePointStyle","pointStyle","mode","axis","intersect","scales","y","position","stack","stackWeight","grid","color","ticks","x","resetFilter","rangeClicked","datesUpdated","selector","templateUrl","styleUrls","VechileDrivingModule","forRoot","extend","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,0IAFb;AAGEC,iBAAS,EAAE;AAHb,OADqB,CAAvB;;UAYaC,2B;;;;;cAAAA;;;;2BAAAA,2B;AAA2B,S;AAAA,kBAH7B,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAG6B,EAF5B,4DAE4B;;;;4HAA3BI,2B,EAA2B;AAAA;AAAA,oBAF5B,4DAE4B;AAAA,S;AAFhB,O;;;;;wEAEXA,2B,EAA2B;gBAJvC,sDAIuC;iBAJ9B;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERO,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAI8B,U;;;;;;;;;;;;;;;;;;AChBxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2C4B;;AACuE;;AAChD;;;;;;AAFX;;AAC2D;;AAAA;;;;;;;;;;;;;;AA0EnF;;AACI;;AAAsB;AAAA;;AAAA;;AAAA,4BAAgB,CAAhB;AAAmB,kBAAF,UAAE,GAAU,gBAAV;AAA0B,sCAAa,gBAAb;AAA6B,WAA1E;;AAClB;;AAAwB;;AAA2E;;AACnG;;AAAqB;;;;AAA4B;;AACrD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,iBAAX;AAA4B,uCAAa,iBAAb;AAA8B,WAA3E;;AAClB;;AAAwB;;AAA4E;;AACpG;;AAAqB;;;;AAA4B;;AACrD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,cAAX;AAAyB,uCAAa,cAAb;AAA2B,WAArE;;AAClB;;AAAwB;;AAAyE;;AACjG;;AAAqB;;;;AAAyB;;AAClD;;AACJ;;;;;;AAZuG;;AAAA;;AACvE;;AAAA;;AACH;;AAAA;;AAE2E;;AAAA;;AACxE;;AAAA;;AACH;;AAAA;;AAEqE;;AAAA;;AAClE;;AAAA;;AACH;;AAAA;;;;;;;;AAhCjC;;AACI;;AACI;;AAAuB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,YAAX;AAAuB,uCAAa,YAAb;AAAyB,WAAjE;;AACnB;;AAAwB;;AAA6E;;AACrG;;AAAqB;;;;AAA8B;;AACvD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAmB,mBAAF,UAAE,GAAU,aAAV;AAAuB,uCAAa,aAAb;AAA0B,WAApE;;AAClB;;AAAwB;;AAAwE;;AAChG;;AAAqB;;;;AAAuB;;AAChD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAa,oBAAb;AAAiC,uCAAa,oBAAb;AAAiC,WAAnF;;AAClB;;AAAwB;;AAA+E;;AACvG;;AAAqB;;;;AAA4B;;AACrD;;AAEJ;;AACA;;AACI;;AAGJ;;AACA;;AAcJ;;;;;;AAjCoG;;AAAA;;AAChE;;AAAA;;AACH;;AAAA;;AAEoE;;AAAA;;AACjE;;AAAA;;AACH;;AAAA;;AAEmF;;AAAA;;AAChF;;AAAA;;AACH;;AAAA;;AASJ;;AAAA;;;;;;;;;;;;;;AAkCzB;;AACI;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,YAAX;AAAuB,uCAAa,YAAb;AAAyB,WAAjE;;AAClB;;AAAwB;;AAA8E;;AACtG;;AAAqB;;;;AAA8B;;AACvD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,aAAX;AAAwB,uCAAa,aAAb;AAA0B,WAAnE;;AAClB;;AAAwB;;AAAyE;;AACjG;;AAAqB;;;;AAAuB;;AAChD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,oBAAX;AAA+B,uCAAa,oBAAb;AAAiC,WAAjF;;AAClB;;AAAwB;;AAAgF;;AACxG;;AAAqB;;;;AAA4B;;AACrD;;AAEJ;;;;;;AAb8F;;AAAA;;AAC9D;;AAAA;;AACH;;AAAA;;AAEmE;;AAAA;;AAChE;;AAAA;;AACH;;AAAA;;AAEiF;;AAAA;;AAC9E;;AAAA;;AACH;;AAAA;;;;;;;;AAS7B;;AACI;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,gBAAX;AAA2B,uCAAa,gBAAb;AAA6B,WAAzE;;AAClB;;AAAwB;;AAA4E;;AACpG;;AAAqB;;;;AAA4B;;AACrD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,iBAAX;AAA4B,uCAAa,iBAAb;AAA8B,WAA3E;;AAClB;;AAAwB;;AAA6E;;AACrG;;AAAqB;;;;AAA4B;;AACrD;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,6BAAgB,CAAhB;AAAiB,gCAAW,cAAX;AAAyB,uCAAa,cAAb;AAA2B,WAArE;;AAClB;;AAAwB;;AAA0E;;AAClG;;AAAqB;;;;AAAyB;;AAClD;;AACJ;;;;;;AAZsG;;AAAA;;AACtE;;AAAA;;AACH;;AAAA;;AAE2E;;AAAA;;AACxE;;AAAA;;AACH;;AAAA;;AAEqE;;AAAA;;AAClE;;AAAA;;AACH;;AAAA;;;;;;AAOrC;;AACI;;AACI;;AACJ;;AACJ;;;;AAF6C;;AAAA;;;;;;;;;;;;;;;;UD7KxCC,qC;AAsDX,uDACUC,MADV,EAESC,OAFT,EAGUC,YAHV,EAIUC,UAJV,EAK6BC,MAL7B,EAK2C;AAAA;AAAA;;AAAA;;AAJjC,eAAAJ,MAAA,GAAAA,MAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACC,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACmB,eAAAC,MAAA,GAAAA,MAAA;AAzDtB,eAAAC,WAAA,GAAc,IAAd;AACP,eAAAC,MAAA,GAAO,CAAP;AACA,eAAAC,gBAAA,GAA6B,CAAC,eAAD,EAAiB,KAAjB,EAAwB,uBAAxB,EAAiD,OAAjD,EAA0D,WAA1D,EAAuE,6CAAvE,EAAsH,SAAtH,EAAiI,0CAAjI,CAA7B;AAGA,eAAAC,IAAA,GAAe,CAAf;AACA,eAAAC,KAAA,GAAgB,CAAhB;AAEA,eAAAC,KAAA,GAAQ,CAAR;AAEA,eAAAC,oBAAA,GAAqB,KAArB;AAEA,eAAAC,YAAA,GAAoB;AAAE,sBAAU,EAAZ;AAAgB,oBAAQ;AAAxB,WAApB;AACA,eAAAC,UAAA,GAAkB;AAAE,sBAAU,EAAZ;AAAgB,oBAAQ;AAAxB,WAAlB,CA4C2C,CA3C3C;;AAEA,eAAAC,MAAA,GAAe,oEAAUC,WAAzB;AACA,eAAAC,mBAAA,GAA+B,IAA/B;AACA,eAAAC,qBAAA,GAAiC,IAAjC;AACA,eAAAC,4BAAA,GAAwC,IAAxC;AAIA,eAAAC,cAAA,GAAsB,KAAtB;AACA,eAAAC,YAAA,GAAuB,EAAvB;AACA,eAAAC,UAAA,GAAkB,EAAlB;AAEA,eAAAC,YAAA,GAAe,EAAf;AAEA,eAAAC,SAAA,GAAU,YAAV;AACA,eAAAC,QAAA,GAAW,CACT;AAAEC,gBAAI,EAAE,mCAAM,EAAd;AAAkBC,gBAAI,EAAE;AAAxB,WADS,EAET;AAAED,gBAAI,EAAE,mCAAM,GAAGE,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAAR;AAAiCD,gBAAI,EAAE;AAAvC,WAFS,CAAX;AAYA,eAAAE,gBAAA,GAA4B,IAA5B;AACA,eAAAC,YAAA,GAAoB;AAClBC,qBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADO;AAElBC,mBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFS,WAApB;AAIA,eAAAE,gBAAA,GAAwB;AACtBJ,qBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADW;AAEtBC,mBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFa,WAAxB;;AA4LA,eAAAG,aAAA,GAAgB,UAACC,CAAD,EAAO;AACrB,mBAAO,KAAI,CAACd,YAAL,CAAkBe,IAAlB,CAAuB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,MAAF,CAASH,CAAT,EAAY,KAAZ,CAAJ;AAAA,aAAxB,CAAP;AACD,WAFD;;AAIA,eAAAI,aAAA,GAAgB,UAACJ,CAAD,EAAO;AACrB,gBAAMK,OAAO,GAAG,KAAI,CAACjB,QAAL,CAAckB,IAAd,CAAmB,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAClB,IAAH,CAAQc,MAAR,CAAeH,CAAf,EAAkB,KAAlB,CAAJ;AAAA,aAArB,CAAhB;;AACA,gBAAIK,OAAJ,EAAa;AACX,qBAAOA,OAAO,CAACf,IAAf;AACD,aAFD,MAEO;AACL,qBAAO,KAAP;AACD;AACF,WAPD;;AApLE,mFAAMkB,QAAN,iDAAkB,sDAAlB;;AAEA,eAAKC,QAAL,GAAgB;AACdf,qBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,CAAlB,EAAqB,OAArB,EAA8Be,OAA9B,CAAsC,OAAtC,EAA+Cd,GAA/C,CAAmD,OAAnD,EAA4D,CAA5D,EAA+DA,GAA/D,CAAmE,SAAnE,EAA8E,CAA9E,CADG;AAEdC,mBAAO,EAAE,mCAAM,GAAGF,QAAT,CAAkB,CAAlB,EAAqB,OAArB,EAA8BgB,KAA9B,CAAoC,OAApC,EAA6Cf,GAA7C,CAAiD,OAAjD,EAA0D,EAA1D,EAA8DA,GAA9D,CAAkE,SAAlE,EAA6E,EAA7E;AAFK,WAAhB;AAIA,eAAKgB,aAAL,GAAqB;AACnBlB,qBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADQ;AAEnBC,mBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFU,WAArB;AAID;;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKiB,aAAL,GAAqB,KAAK/C,YAAL,CAAkBgD,OAAlB,CAA0B,cAA1B,CAArB;;AACA,gBAAI,KAAKD,aAAT,EAAwB;AACtB,mBAAKA,aAAL,GAAqBE,IAAI,CAACC,KAAL,CAAW,KAAKH,aAAhB,CAArB;AACD;;AACD,gBAAI,KAAKA,aAAT,EAAwB;AACtB,mBAAKI,gBAAL;AACA,mBAAKC,cAAL;AACA,mBAAKC,UAAL;AACD;;AAED,iBAAKrD,YAAL,CAAkBsD,YAAlB,GAAiCC,SAAjC,CAA2C,UAACC,IAAD,EAAU;AACnD,kBAAIA,IAAI,IAAI,MAAI,CAAC1D,MAAL,CAAY2D,GAAZ,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,wEAAYC,uBAAZ,CAAoCF,GAAjF,EAAsF;AACpF;AACA,oBAAIG,KAAK,GAAQ,MAAI,CAAC5D,YAAL,CAAkBgD,OAAlB,CAA0B,cAA1B,CAAjB;;AACA,oBAAIY,KAAJ,EAAW;AACTA,uBAAK,GAAGX,IAAI,CAACC,KAAL,CAAWU,KAAX,CAAR;AACD;;AACD,oBAAIC,OAAO,GAAG,IAAd;;AACA,oBAAI,MAAI,CAACd,aAAL,IAAsB,MAAI,CAACA,aAAL,CAAmBe,MAAzC,IAAmDF,KAAnD,IAA4DA,KAAK,CAACE,MAAtE,EAA8E;AAC5ED,yBAAO,GAAID,KAAK,CAACE,MAAN,KAAiB,MAAI,CAACf,aAAL,CAAmBe,MAArC,IAAiDF,KAAK,CAACG,KAAN,CAAY,UAAAC,GAAG;AAAA,2BAAI,MAAI,CAACjB,aAAL,CAAmBkB,QAAnB,CAA4BD,GAA5B,CAAJ;AAAA,mBAAf,CAA3D;AACD,iBAFD,MAGK;AACHH,yBAAO,GAAG,KAAV;AACD;;AACD,oBAAI,CAACA,OAAL,EAAc;AACZ,wBAAI,CAACd,aAAL,sBAAyBa,KAAzB;;AACA,wBAAI,CAACT,gBAAL;;AACA,wBAAI,CAACC,cAAL;;AACA,wBAAI,CAACC,UAAL;AACD;AAEF;AACF,aAtBD;AAuBD;;;iBACD,sBAAa;AAAA;;AACX,iBAAKnC,YAAL,GAAoB,EAApB;AACA,iBAAKnB,OAAL,CAAamE,GAAb,gDAAyDjB,IAAI,CAACkB,SAAL,CAAe,KAAKpB,aAApB,CAAzD,GAA+FqB,IAA/F,GAAsGb,SAAtG,CAAgH,UAAAc,QAAQ,EAAI;AAC1H,kBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,sBAAI,CAACnD,UAAL,GAAkBkD,QAAQ,CAACC,IAA3B,CADiB,CAEjB;AACD;AACF,aALD,EAKG,UAACC,KAAD,EAAW,CAEb,CAPD;AAQD,W,CAGD;;;;iBACA,6BAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA6CnD,IAA7C,EAAoD;AAAA;;AAClD,iBAAKd,oBAAL,GAA0B,IAA1B;AACA,gBAAIkE,YAAY,GAAG,KAAKC,kBAAL,CAAwBH,QAAxB,EAAiCC,MAAjC,EAAwCnD,IAAxC,CAAnB;AACA,iBAAKxB,OAAL,CAAamE,GAAb,6BAAsCS,YAAtC,GAAsDP,IAAtD,GAA6Db,SAA7D,CAAuE,UAAAc,QAAQ,EAAI;AACjF,kBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,sBAAI,CAAC7D,oBAAL,GAA0B,KAA1B;;AACA,oBAAI+D,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACK,oBAAL,GAA4BR,QAAQ,CAACC,IAArC;AACD,iBAFD,MAGK;AACH,wBAAI,CAACQ,qBAAL,GAA6BT,QAAQ,CAACC,IAAtC;AACD;AACF,eARD,MASK;AACH,sBAAI,CAAC7D,oBAAL,GAA0B,KAA1B;;AACA,oBAAI+D,IAAI,IAAI,CAAZ,EAAe;AACb,wBAAI,CAACK,oBAAL,GAA4B,EAA5B;AACD,iBAFD,MAGK;AACH,wBAAI,CAACC,qBAAL,GAA6B,EAA7B;AACD;AACF;AACF,aAnBD,EAmBG,UAACP,KAAD,EAAW;AACZ,oBAAI,CAAC9D,oBAAL,GAA0B,KAA1B;AACD,aArBD;AAsBD;;;iBACD,kCAAyB+D,IAAzB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAkDnD,IAAlD,EAAwDF,SAAxD,EAAoE;AAAA;;AAClE;AACA,iBAAKZ,oBAAL,GAA0B,IAA1B;AACA,gBAAIkE,YAAY,GAAG,KAAKC,kBAAL,CAAwBH,QAAxB,EAAiCC,MAAjC,EAAwCnD,IAAxC,EAA6CF,SAA7C,EAAuDA,SAAvD,CAAnB;AACA,iBAAKtB,OAAL,CAAamE,GAAb,mCAA4CS,YAA5C,GAA4DP,IAA5D,GAAmEb,SAAnE,CAA6E,UAAAc,QAAQ,EAAI;AACvF,kBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,sBAAI,CAAC7D,oBAAL,GAA0B,KAA1B;;AACA,oBAAI+D,IAAI,IAAI,CAAZ,EAAe;AAEb,wBAAI,CAAC9D,YAAL,GAAoB;AAAE,8BAAU,EAAZ;AAAgB,4BAAQ;AAAxB,mBAApB;AAEA,wBAAI,CAACqE,yBAAL,GAAiCV,QAAQ,CAACC,IAA1C;;AACA,wBAAI,CAACU,gBAAL,CAAsBR,IAAtB,EAA2B,MAAI,CAACnD,SAAhC;AAED,iBAPD,MAQK,IAAImD,IAAI,IAAI,CAAZ,EAAe;AAClB,wBAAI,CAACS,0BAAL,GAAkCZ,QAAQ,CAACC,IAA3C;;AACA,wBAAI,CAACU,gBAAL,CAAsBR,IAAtB,EAA2B,MAAI,CAACnD,SAAhC;AACD,iBAbgB,CAcjB;AACA;AACA;;AACD,eAjBD,MAkBK;AACH,sBAAI,CAACZ,oBAAL,GAA0B,KAA1B;;AACA,oBAAI+D,IAAI,IAAI,CAAZ,EAAe;AACb,sBAAG,MAAI,CAACU,WAAR,EAAoB;AAClB,0BAAI,CAACA,WAAL,CAAiBC,OAAjB;AACD;;AACD,wBAAI,CAACJ,yBAAL,GAAiC,EAAjC;AACD,iBALD,MAMK;AACH,wBAAI,CAACE,0BAAL,GAAkC,EAAlC;AACD;AACF;AACF,aA/BD,EA+BG,UAACV,KAAD,EAAW;AACZ,oBAAI,CAAC7D,YAAL,GAAoB;AAAE,0BAAU,EAAZ;AAAgB,wBAAQ;AAAxB,eAApB;AACA,oBAAI,CAACC,UAAL,GAAkB;AAAE,0BAAU,EAAZ;AAAgB,wBAAQ;AAAxB,eAAlB;AACA,oBAAI,CAACF,oBAAL,GAA0B,KAA1B;AACD,aAnCD;AAoCD;;;iBACD,0BAAiB+D,IAAjB,EAAsBnD,SAAtB,EAA+B;AAAA;;AAC7B;AACA,gBAAGmD,IAAI,IAAE,CAAT,EAAW;AACT,mBAAK9D,YAAL,GAAmB;AAAE,0BAAU,EAAZ;AAAgB,wBAAQ;AAAxB,eAAnB;;AAEA,kBAAG,KAAKwE,WAAR,EAAoB;AAClB,qBAAKA,WAAL,CAAiBC,OAAjB;AACD,eALQ,CAMT;;;AACA,mBAAKJ,yBAAL,CAA+BK,OAA/B,CAAuC,UAAAC,OAAO,EAAI;AAChD,oBAAGA,OAAO,CAAChE,SAAD,CAAP,KAAuB,MAAvB,IAAiCgE,OAAO,CAAChE,SAAD,CAAP,KAAuB,IAAxD,IAAgEgE,OAAO,CAAChE,SAAD,CAAP,KAAuB,QAA1F,EAAmG;AACjG,wBAAI,CAACX,YAAL,CAAkB4E,MAAlB,CAAyBC,IAAzB,CAA+BC,MAAM,CAACH,OAAO,CAAChE,SAAD,CAAR,CAAP,CAA6BoE,OAA7B,CAAqC,CAArC,CAA9B;AACD,iBAFD,MAGI;AACF,wBAAI,CAAC/E,YAAL,CAAkB4E,MAAlB,CAAyBC,IAAzB,CAA8B,IAA9B;AACD;;AACD,sBAAI,CAAC7E,YAAL,CAAkBa,IAAlB,CAAuBgE,IAAvB,CAA4B,2CAAWF,OAAO,CAAC9D,IAAnB,EAAyBmE,MAAzB,CAAgC,OAAhC,CAA5B;AACD,eARD,EAPS,CAgBT;;AACA,mBAAKC,eAAL;AACD,aAlBD,MAmBI;AACF,mBAAKhF,UAAL,GAAiB;AAAE,0BAAU,EAAZ;AAAgB,wBAAQ;AAAxB,eAAjB;;AACA,kBAAG,KAAKiF,YAAR,EAAqB;AACnB,qBAAKA,YAAL,CAAkBT,OAAlB;AACD,eAJC,CAKF;;;AACA,mBAAKF,0BAAL,CAAgCG,OAAhC,CAAwC,UAAAC,OAAO,EAAI;AACjD,oBAAGA,OAAO,CAAChE,SAAD,CAAP,KAAuB,MAAvB,IAAiCgE,OAAO,CAAChE,SAAD,CAAP,KAAuB,IAAxD,IAAiEgE,OAAO,CAAChE,SAAD,CAAP,KAAuB,QAA3F,EAAoG;AAClG,wBAAI,CAACV,UAAL,CAAgB2E,MAAhB,CAAuBC,IAAvB,CAA6BC,MAAM,CAACH,OAAO,CAAChE,SAAD,CAAR,CAAP,CAA6BoE,OAA7B,CAAqC,CAArC,CAA5B;AACD,iBAFD,MAGI;AACF,wBAAI,CAAC9E,UAAL,CAAgB2E,MAAhB,CAAuBC,IAAvB,CAA4B,IAA5B;AACD;;AACD,sBAAI,CAAC5E,UAAL,CAAgBY,IAAhB,CAAqBgE,IAArB,CAA0B,2CAAWF,OAAO,CAAC9D,IAAnB,EAAyBmE,MAAzB,CAAgC,OAAhC,CAA1B;AACD,eARD,EANE,CAeF;;AACA,mBAAKG,gBAAL;AACD;AACJ;;;iBAEC,0BAAiB;AACf,iBAAKC,mBAAL,CAAyB,CAAzB,EAA4B,KAAK7E,cAAjC,EAAgD,KAAK8E,YAArD,EAAkE,KAAKpD,QAAvE;AACA,iBAAKmD,mBAAL,CAAyB,CAAzB,EAA4B,KAAK7E,cAAjC,EAAgD,KAAK8E,YAArD,EAAmE,KAAKjD,aAAxE;AACA,iBAAKkD,wBAAL,CAA8B,CAA9B,EAAiC,KAAK/E,cAAtC,EAAqD,KAAK8E,YAA1D,EAAuE,KAAKpD,QAA5E,EAAqF,KAAKtB,SAA1F;AACA,iBAAK2E,wBAAL,CAA8B,CAA9B,EAAiC,KAAK/E,cAAtC,EAAqD,KAAK8E,YAA1D,EAAwE,KAAKjD,aAA7E,EAA2F,KAAKzB,SAAhG;AACD;;;iBAeD,sBAAa4E,KAAb,EAAoB,CAClB;AACD;;;iBAED,+BAAsBC,KAAtB,EAA2B,CAC1B;;;iBAGD,sBAAaA,KAAb,EAAoB1B,IAApB,EAA0B;AACxB,gBAAI,KAAKhE,KAAL,GAAa,CAAjB,EAAoB;AAClB,mBAAKA,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA;AACD,aAHD,MAIK;AACH,kBAAIgE,IAAI,IAAI,CAAZ,EAAe;AACb,qBAAKsB,mBAAL,CAAyB,CAAzB,EAA4B,KAAK7E,cAAjC,EAAgD,KAAK8E,YAArD,EAAkE,KAAKpD,QAAvE,GACA,KAAKqD,wBAAL,CAA8B,CAA9B,EAAiC,KAAK/E,cAAtC,EAAqD,KAAK8E,YAA1D,EAAuE,KAAKpD,QAA5E,EAAqF,KAAKtB,SAA1F,CADA;AAED,eAHD,MAIK;AACH,qBAAKyE,mBAAL,CAAyB,CAAzB,EAA4B,KAAK7E,cAAjC,EAAgD,KAAK8E,YAArD,EAAkE,KAAKjD,aAAvE;AACA,qBAAKkD,wBAAL,CAA8B,CAA9B,EAAiC,KAAK/E,cAAtC,EAAqD,KAAK8E,YAA1D,EAAuE,KAAKjD,aAA5E,EAA0F,KAAKzB,SAA/F;AAED;AACF,aAfuB,CAgBxB;;AACD;;;iBACD,qBAAY8E,IAAZ,EAAkB;AAChB,iBAAK9E,SAAL,GAAiB8E,IAAjB;AACA,iBAAKnB,gBAAL,CAAsB,CAAtB,EAAwB,KAAK3D,SAA7B;AACA,iBAAK2D,gBAAL,CAAsB,CAAtB,EAAwB,KAAK3D,SAA7B;AACD;;;iBAGD,uBAAW;AACT,iBAAKlB,WAAL,GAAmB,CAAC,KAAKA,WAAzB;;AACA,gBAAG,CAAC,KAAKA,WAAT,EAAqB;AACnB,mBAAKgD,gBAAL;AACD;AACF;;;iBAED,4BAAmB;AACjB,iBAAK9B,SAAL,GAAe,YAAf;AACA,iBAAKjB,MAAL,GAAY,CAAZ;AACA,gBAAIgG,QAAQ,GAAG,KAAKpG,YAAL,CAAkBgD,OAAlB,CAA0B,QAA1B,CAAf;AACA,gBAAI0B,MAAM,GAAG,KAAK1E,YAAL,CAAkBgD,OAAlB,CAA0B,QAA1B,CAAb;AACA,gBAAIzB,IAAI,GAAQ,KAAKvB,YAAL,CAAkBgD,OAAlB,CAA0B,WAA1B,CAAhB;;AACA,gBAAGzB,IAAH,EAAQ;AACNA,kBAAI,GAAG0B,IAAI,CAACC,KAAL,CAAW3B,IAAX,CAAP;AACA,mBAAKS,gBAAL,GAAwB;AACtBJ,yBAAS,EAAE,mCAAM,CAACL,IAAI,CAACK,SAAN,CADK;AAEtBG,uBAAO,EAAE,mCAAM,CAACR,IAAI,CAACQ,OAAN;AAFO,eAAxB;AAIA,mBAAKJ,YAAL,GAAoB,KAAKK,gBAAzB;AACD,aAPD,MAQI;AACF,mBAAKL,YAAL,GAAoB;AAClBC,yBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADO;AAElBC,uBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFS,eAApB;AAIA,mBAAKE,gBAAL,GAAwB;AACtBJ,yBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADW;AAEtBC,uBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFa,eAAxB;AAID;;AACD4C,kBAAM,GAAG,KAAKqB,YAAL,GAAoBrB,MAAvB,GAAgC,KAAKqB,YAAL,GAAoB,EAA1D;AACAK,oBAAQ,IAAIA,QAAQ,KAAG,KAAvB,GAA+B,KAAKnF,cAAL,GAAsBgC,IAAI,CAACC,KAAL,CAAWkD,QAAX,CAArD,GAA4E,KAAKnF,cAAL,GAAsB,KAAlG;AACD;;;iBAED,uBAAc;AACZ,iBAAKjB,YAAL,CAAkBqG,OAAlB,CAA0B,QAA1B,EAAoC,KAAKpF,cAAzC;AACA,iBAAKjB,YAAL,CAAkBqG,OAAlB,CAA0B,QAA1B,EAAoC,KAAKN,YAAzC;AACA,iBAAK/F,YAAL,CAAkBqG,OAAlB,CAA0B,WAA1B,EAAsCpD,IAAI,CAACkB,SAAL,CAAe,KAAKxC,YAApB,CAAtC;AACA,iBAAKK,gBAAL,GAAwB,KAAKL,YAA7B;AACA,iBAAKyB,cAAL;AACA,iBAAKkD,WAAL;AACD;;;iBAED,4BAAmB7B,QAAnB,EAA8BC,MAA9B,EAAsCnD,IAAtC,EAA4CgF,OAA5C,EAAqDlF,SAArD,EAAiE;AAC/D,gBAAIsD,YAAJ;;AACA,gBAAI4B,OAAJ,EAAa;AACX5B,0BAAY,0BAAmB1B,IAAI,CAACkB,SAAL,CAAe,KAAKpB,aAApB,CAAnB,mBAA8D,KAAKzC,IAAnE,oBAAiF,KAAKC,KAAtF,CAAZ;AACD,aAFD,MAGK;AACHoE,0BAAY,0BAAmB1B,IAAI,CAACkB,SAAL,CAAe,KAAKpB,aAApB,CAAnB,CAAZ;AACD;;AAED,gBAAK0B,QAAQ,IAAIA,QAAQ,KAAK,KAA9B,EAAsC;AACpCE,0BAAY,GAAGA,YAAY,sBAAeF,QAAf,MAA3B;AACD;;AACD,gBAAGC,MAAH,EAAU;AACRC,0BAAY,GAAGA,YAAY,qBAAcD,MAAd,CAA3B;AACD;;AACD,gBAAGrD,SAAH,EAAa;AACXsD,0BAAY,GAAGA,YAAY,yBAAkBtD,SAAlB,CAA3B;AACD;;AACDsD,wBAAY,GAAGA,YAAY,wBAAiB,mCAAM,CAACpD,IAAI,CAACK,SAAN,CAAN,CAAuB8D,MAAvB,CAA8B,YAA9B,CAAjB,CAA3B;AACAf,wBAAY,GAAGA,YAAY,sBAAe,mCAAM,CAACpD,IAAI,CAACQ,OAAN,CAAN,CAAqB2D,MAArB,CAA4B,YAA5B,CAAf,CAA3B,CAnB+D,CAoB/D;;AACA,gBAAI1B,GAAG,GAAG,KAAKjE,OAAL,CAAayG,eAAb,CAA6B,mCAAM,CAACjF,IAAI,CAACK,SAAN,CAAN,CAAuB8D,MAAvB,CAA8B,YAA9B,CAA7B,EAAyE,mCAAM,CAACnE,IAAI,CAACQ,OAAN,CAAN,CAAqB2D,MAArB,CAA4B,YAA5B,CAAzE,CAAV;;AACG,gBAAG1B,GAAG,IAAIyC,SAAV,EAAoB;AACrB9B,0BAAY,GAAGA,YAAY,wCAA3B;AACD,aAFE,MAGC;AACF,kBAAIF,QAAQ,IAAIA,QAAQ,KAAK,KAA1B,IAAoCC,MAAvC,EAA8C;AAC5CC,4BAAY,GAAGA,YAAY,wCAA3B;AACD,eAFD,MAGI;AACFA,4BAAY,GAAGA,YAAY,+CAAwCX,GAAxC,CAA3B;AACD;AACD;;AACF,mBAAOW,YAAP;AACD;;;iBAED,8BAAqB+B,EAArB,EAAuB;AACrB,iBAAK1G,YAAL,CAAkBqG,OAAlB,CAA0B,WAA1B,EAAuCK,EAAvC;AACA,iBAAK5G,MAAL,CAAY6G,QAAZ,CAAqB,CAAC,wEAAYC,aAAZ,CAA0BnD,GAA3B,CAArB;AACD;;;iBAED,uBAAcO,GAAd,EAAkB6C,SAAlB,EAA2B;AACzB,gBAAG,OAAO7C,GAAP,IAAc,QAAjB,EAA0B;AACxBA,iBAAG,GAAG8C,UAAU,CAAC9C,GAAD,CAAhB;AACD;;AACF,gBAAGA,GAAH,EAAO;AACL,qBAAOA,GAAG,CAACyB,OAAJ,CAAYoB,SAAZ,CAAP;AACD;;AACD,mBAAO,CAAP;AACD;;;iBAED,uBAAW;AACV,iBAAK5F,cAAL,GAAsB,KAAtB,CADU,CAEV;;AACA,iBAAK8E,YAAL,GAAoB,EAApB;AACA,iBAAKpE,YAAL,GAAoB;AAClBC,uBAAS,EAAE,mCAAM,GAAGC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BC,GAA9B,CAAkC,OAAlC,EAA2C,CAA3C,EAA8CA,GAA9C,CAAkD,SAAlD,EAA6D,CAA7D,CADO;AAElBC,qBAAO,EAAE,mCAAM,GAAGD,GAAT,CAAa,OAAb,EAAsB,EAAtB,EAA0BA,GAA1B,CAA8B,SAA9B,EAAyC,EAAzC;AAFS,aAApB;AAIA,iBAAKiF,WAAL;AACD;;;iBAED,2BAAkB;AAChB,gBAAMC,MAAM,GAAG,KAAKtG,YAAL,CAAkB,MAAlB,CAAf;AACA,gBAAIuG,OAAO,GAAG,KAAKhH,UAAL,CAAgBiH,aAAhB,CAA8BC,aAA9B,gBAAd;AACA,gBAAMC,QAAQ,GAAG,KAAKnH,UAAL,CAAgBiH,aAAhB,CAA8BC,aAA9B,iBAA4DE,UAA5D,CAAuE,IAAvE,EAA6EC,oBAA7E,CAAkG,CAAlG,EAAqG,CAArG,EAAwG,CAAxG,EAA2G,GAA3G,CAAjB;AACAF,oBAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;AACAH,oBAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,yBAAzB;AACC,iBAAKrC,WAAL,GAAmB,IAAI,8CAAJ,CAAU+B,OAAV,EAAmB;AACrCO,kBAAI,EAAE,MAD+B;AAErClD,kBAAI,EAAE;AACJ0C,sBAAM,EAAEA,MADJ;AAEJS,wBAAQ,EAAE,CACR;AACExB,uBAAK,YAAK,mEAAW,KAAKtD,QAAL,CAAcf,SAAd,CAAwB8F,EAAnC,EAAuC,YAAvC,EAAoD,KAAKxH,MAAzD,CAAL,gBAA2E,mEAAW,KAAKyC,QAAL,CAAcZ,OAAd,CAAsB2F,EAAjC,EAAqC,YAArC,EAAkD,KAAKxH,MAAvD,CAA3E,CADP;AAEEoE,sBAAI,EAAE,KAAK5D,YAAL,CAAkB,QAAlB,CAFR;AAGEiH,6BAAW,EAAE,SAHf;AAIEC,wCAAsB,EAAE,UAJ1B;AAKEC,yBAAO,EAAE,GALX;AAMEC,sBAAI,EAAE,OANR;AAOEC,iCAAe,EAAEX;AAPnB,iBADQ;AAFN,eAF+B;AAgBrCY,qBAAO,EAAE;AACPC,0BAAU,EAAE,IADL;AAEPC,mCAAmB,EAAC,KAFb;AAGPC,2BAAW,EAAE,CAHN;AAIPC,uBAAO,EAAE;AACPC,uBAAK,EAAE;AACLC,2BAAO,EAAE,KADJ;AAEL9G,wBAAI,EAAE;AAFD,mBADA;AAKP+G,wBAAM,EAAE;AACNC,yBAAK,EAAE,KADD;AAENxB,0BAAM,EAAE;AACNyB,mCAAa,EAAE,IADT;AAENC,gCAAU,EAAE;AAFN;AAFF,mBALD;AAaPnG,yBAAO,EAAE;AACPoG,wBAAI,EAAE,SADC;AAEPC,wBAAI,EAAE,GAFC;AAGPC,6BAAS,EAAE;AAHJ;AAbF,iBAJF;AAuBPC,sBAAM,EAAE;AACNC,mBAAC,EAAE;AACDvB,wBAAI,EAAE,QADL;AAEDwB,4BAAQ,EAAE,MAFT;AAGDC,yBAAK,EAAE,MAHN;AAIDC,+BAAW,EAAE,CAJZ;AAKDC,wBAAI,EAAE;AACJC,2BAAK,EAAE;AADH,qBALL;AAQDC,yBAAK,EAAC;AACJxC,+BAAS,EAAE;AADP;AARL,mBADG;AAcNyC,mBAAC,EAAE;AACDH,wBAAI,EAAE;AACJC,2BAAK,EAAE;AADH;AADL;AAdG;AAvBD;AAhB4B,aAAnB,CAAnB;AA+DF;;;iBACD,4BAAmB;AACjB,gBAAMpC,MAAM,GAAG,KAAKrG,UAAL,CAAgB,MAAhB,CAAf;AACA,gBAAIsG,OAAO,GAAG,KAAKhH,UAAL,CAAgBiH,aAAhB,CAA8BC,aAA9B,iBAAd;AACA,gBAAMC,QAAQ,GAAG,KAAKnH,UAAL,CAAgBiH,aAAhB,CAA8BC,aAA9B,kBAA6DE,UAA7D,CAAwE,IAAxE,EAA8EC,oBAA9E,CAAmG,CAAnG,EAAsG,CAAtG,EAAyG,CAAzG,EAA4G,GAA5G,CAAjB;AACAF,oBAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;AACAH,oBAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,yBAAzB;AACC,iBAAK3B,YAAL,GAAoB,IAAI,8CAAJ,CAAUqB,OAAV,EAAmB;AACtCO,kBAAI,EAAE,MADgC;AAEtClD,kBAAI,EAAE;AACJ0C,sBAAM,EAAEA,MADJ;AAEJS,wBAAQ,EAAE,CACR;AACExB,uBAAK,YAAK,mEAAW,KAAKnD,aAAL,CAAmBlB,SAAnB,CAA6B8F,EAAxC,EAA4C,YAA5C,EAAyD,KAAKxH,MAA9D,CAAL,gBAAgF,mEAAW,KAAK4C,aAAL,CAAmBf,OAAnB,CAA2B2F,EAAtC,EAA0C,YAA1C,EAAuD,KAAKxH,MAA5D,CAAhF,CADP;AAEEoE,sBAAI,EAAE,KAAK3D,UAAL,CAAgB,QAAhB,CAFR;AAGEgH,6BAAW,EAAE,SAHf;AAIEC,wCAAsB,EAAE,UAJ1B;AAKEC,yBAAO,EAAE,GALX;AAMEC,sBAAI,EAAE,OANR;AAOEC,iCAAe,EAAEX;AAPnB,iBADQ;AAFN,eAFgC;AAgBtCY,qBAAO,EAAE;AACPC,0BAAU,EAAE,IADL;AAEPC,mCAAmB,EAAC,KAFb;AAGPC,2BAAW,EAAE,CAHN;AAIPC,uBAAO,EAAE;AACPC,uBAAK,EAAE;AACLC,2BAAO,EAAE,KADJ;AAEL9G,wBAAI,EAAE;AAFD,mBADA;AAKP+G,wBAAM,EAAE;AACNC,yBAAK,EAAE,KADD;AAENxB,0BAAM,EAAE;AACNyB,mCAAa,EAAE,IADT;AAENC,gCAAU,EAAE;AAFN;AAFF,mBALD;AAaPnG,yBAAO,EAAE;AACPoG,wBAAI,EAAE,SADC;AAEPC,wBAAI,EAAE,GAFC;AAGPC,6BAAS,EAAE;AAHJ;AAbF,iBAJF;AAuBPC,sBAAM,EAAE;AACNC,mBAAC,EAAE;AACDvB,wBAAI,EAAE,QADL;AAEDwB,4BAAQ,EAAE,MAFT;AAGDC,yBAAK,EAAE,MAHN;AAIDC,+BAAW,EAAE,CAJZ;AAKDC,wBAAI,EAAE;AACJC,2BAAK,EAAE;AADH,qBALL;AAQDC,yBAAK,EAAC;AACJxC,+BAAS,EAAE;AADP;AARL,mBADG;AAcNyC,mBAAC,EAAE;AACDH,wBAAI,EAAE;AACJC,2BAAK,EAAE;AADH;AADL;AAdG;AAvBD;AAhB6B,aAAnB,CAApB;AA+DF;;;iBACD,mBAAO;AACL,iBAAKlE,WAAL,CAAiBC,OAAjB;AACD;;;;;;;yBAnhBYtF,qC,EAAqC,uH,EAAA,0I,EAAA,4I,EAAA,yH,EAAA,gEA2DtC,uDA3DsC,C;AA2D7B,O;;;cA3DRA,qC;AAAqC,yD;AAAA,iB;AAAA,gB;AAAA,itH;AAAA;AAAA;ACnBlD;;AAEI;;AACI;;AACI;;AAA0B;;;;AAA0C;;AACpE;;AACI;;AAA+B;AAAA,qBAAS,IAAAyG,WAAA,EAAT;AAAsB,aAAtB;;AACK;;AACpC;;AAAU;;AAAuD;;AAC1B;;AAC3C;;AACJ;;AACA;;AAA6B;AAAA;AAAA;;AACzB;;AACI;;AACI;;AAAI;;AAAO;;AACX;;AAAM;AAAA,qBAAS,IAAAA,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAA0C;;AAC5E;;AACA;;AACI;;AAAmB;AAAA;AAAA;;AAAnB;;AACA;;AAA+B;;AAAoC;;AACvE;;AACA;;AACI;;AACI;;AAAW;;;;AAAgC;;AAC3C;;AAAY;AAAA;AAAA;;;;AAGR;;AACI;;AACI;AAAA;AAAA;;;;AADJ;;AAEA;;AAAU;;AAAA;;AAEF;;AAGA;;AAGJ;;AACJ;;AACJ;;AACA;;AAAA;;AAA4B;;;;;;AAAmC;;AAC/D;;;;AAGJ;;AACJ;;AAcJ;;AACA;;AACI;;AACI;;AAA+C;;AAC3C;;AAA2D;;AACnE;;AACA;;AACI;;AACI;;AAA+C;AAAS,kBAAAnD,gBAAA;AAAkB,qBAAC,IAAAoG,WAAA,EAAD;AAAc,aAAzC;;AAA2C;;AAAK;;AACnG;;AACA;;AACI;;AAA8C;AAAS,kBAAAxC,WAAA;AAAa,qBAAC,IAAA5B,OAAA,EAAD;AAAU,aAAhC;;AAAmC;;;;AAAuB;;AAC5G;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAA0B;;;;AAA0C;;AACxE;;AACA;;AACI;;AACI;;AAAsB;;AAAsC;;AAC5D;;AAA+B;;AAAmC;;AAClE;;AAA4B;AAAA;AAAA,eAAsB,cAAtB,EAAsB;AAAA,qBAI9B,IAAAqE,YAAA,QAJ8B;AAIV,aAJZ,EAAsB,cAAtB,EAAsB;AAAA,qBAIQ,IAAAC,YAAA,SAAoB,CAApB,CAJR;AAI8B,aAJpD;;AAA5B;;AAQJ;;AACA;;AAoCJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAsC;;AAC5D;;AAAwC;AAAA;AAAA,eAA2B,cAA3B,EAA2B;AAAA,qBAI/C,IAAAD,YAAA,QAJ+C;AAI3B,aAJA,EAA2B,cAA3B,EAA2B;AAAA,qBAIT,IAAAC,YAAA,SAAoB,CAApB,CAJS;AAIa,aAJxC;;AAAxC;;AAQA;;AAA+B;;AAAmC;;AACtE;;AAEA;;AACI;;AAeA;;AACI;;AAGJ;;AACA;;AAcJ;;AAGJ;;AACA;;AAKJ;;AAEA;;AAEI;;AACI;;AACJ;;AAKA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAIJ;;AACJ;;;;AApNsC;;AAAA;;AAEiC;;AAAA;;AAMlC;;AAAA;;AAOE;;AAAA;;AAKJ;;AAAA;;AAGP;;AAAA;;AAFQ,oGAA4B,gBAA5B,EAA4B,sEAA5B,EAA4B,wBAA5B,EAA4B,IAA5B;;AAIsC;;AAAA;;AACtC;;AAYI;;AAAA;;AAAgB;;AAAA;;AAEP;;AAAA;;AA4B4D;;AAAA;;AAUvE;;AAAA;;AAMM;;AAAA,8FAAsB,sBAAtB,EAAsB,IAAtB,EAAsB,qBAAtB,EAAsB,uBAAtB,EAAsB,QAAtB,EAAsB,UAAtB,EAAsB,iBAAtB,EAAsB,KAAtB,EAAsB,YAAtB,EAAsB,IAAtB,EAAsB,iBAAtB,EAAsB,IAAtB,EAAsB,eAAtB,EAAsB,iBAAtB,EAAsB,eAAtB,EAAsB,iBAAtB,EAAsB,QAAtB,EAAsB,sEAAtB,EAAsB,8BAAtB,EAAsB,gCAAtB,EAAsB,uBAAtB,EAAsB,yBAAtB;;AASN;;AAAA;;AA2CkB;;AAAA,mGAA2B,sBAA3B,EAA2B,IAA3B,EAA2B,qBAA3B,EAA2B,uBAA3B,EAA2B,QAA3B,EAA2B,UAA3B,EAA2B,iBAA3B,EAA2B,KAA3B,EAA2B,YAA3B,EAA2B,IAA3B,EAA2B,iBAA3B,EAA2B,IAA3B,EAA2B,eAA3B,EAA2B,iBAA3B,EAA2B,eAA3B,EAA2B,iBAA3B,EAA2B,QAA3B,EAA2B,sEAA3B,EAA2B,8BAA3B,EAA2B,gCAA3B,EAA2B,uBAA3B,EAA2B,yBAA3B;;AAYhB;;AAAA;;AAoBA;;AAAA;;AAkBkB;;AAAA;;;;;;;;;;wED3K7C5J,qC,EAAqC;gBARjD,uDAQiD;iBARvC;AACT6J,oBAAQ,EAAE,kCADD;AAETC,uBAAW,EAAE,+CAFJ;AAGTC,qBAAS,EAAE,CAAC,+CAAD;AAHF,W;AAQuC,U;;;;;;;;;;;;oBA2D7C,oD;qBAAO,uD;;;;;;;;;;;;;;;;;;;;;AE9EZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA6BaC,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAdtB,CACP,4DADO,EAEP,2FAFO,EAGP,0DAHO,EAIP,yEAJO,EAKP,oEALO,EAMP,2FANO,EAOP,kFAAqBC,OAArB,EAPO,EAQP,uEARO,EASP,oEAAgBpK,QAAhB,CAAyB;AACvBqK,gBAAM,EAAE;AADe,SAAzB,CATO,CAcsB;;;;4HAApBF,oB,EAAoB;AAAA,yBAfhB,0IAegB;AAfqB,oBAElD,4DAFkD,EAGlD,2FAHkD,EAIlD,0DAJkD,EAKlD,yEALkD,EAMlD,oEANkD,EAOlD,2FAPkD,EAOnC,iFAPmC,EASlD,uEATkD,EASnC,mEATmC;AAerB,S;AANd,O;;;;;wEAMNA,oB,EAAoB;gBAhBhC,sDAgBgC;iBAhBvB;AACRG,wBAAY,EAAE,CAAC,0IAAD,CADN;AAERrK,mBAAO,EAAE,CACP,4DADO,EAEP,2FAFO,EAGP,0DAHO,EAIP,yEAJO,EAKP,oEALO,EAMP,2FANO,EAOP,kFAAqBmK,OAArB,EAPO,EAQP,uEARO,EASP,oEAAgBpK,QAAhB,CAAyB;AACvBqK,oBAAM,EAAE;AADe,aAAzB,CATO;AAFD,W;AAgBuB,U","file":"behaviourScore-vechile-driving-vechile-driving-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { VechiledrivingbehaviourscoreComponent } from \"./vechiledrivingbehaviourscore/vechiledrivingbehaviourscore.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VechiledrivingbehaviourscoreComponent,\n    pathMatch: \"full\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VechileDrivingRoutingModule {}\n","import { formatDate } from '@angular/common';\nimport { Component, ElementRef, Inject, LOCALE_ID, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Chart, registerables } from 'chart.js';\nimport * as moment from 'moment';\nimport { AppConfig } from 'src/app/config/app-config';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\n\n\n@Component({\n  selector: 'app-vechiledrivingbehaviourscore',\n  templateUrl: './vechiledrivingbehaviourscore.component.html',\n  styleUrls: ['./vechiledrivingbehaviourscore.component.scss']\n})\n\n\n\nexport class VechiledrivingbehaviourscoreComponent implements OnInit {\n\n  public isCollapsed = true;\n  active=1;\n  displayedColumns: string[] = ['license_plate','vin', 'vehicle_category.name', 'model', 'fuel_type', 'vehicle_summarised_data[0].fuel_consumption', 'mileage', 'vehicle_summarised_data[0].last_apk_date'];\n\n  dataSource;\n  page: number = 1;\n  limit: number = 5;\n  totalCount: number;\n  count = 2;\n  searchString: string;\n  isTripHistoryLoading=false;\n \n  speedProfile: any = { 'weight': [], \"date\": []};\n  accProfile: any = { 'weight': [], 'date': [] };\n  // CALENDAR\n\n  ranges: any =  AppConfig.momentRange;\n  alwaysShowCalendars: boolean = true;\n  showRangeLabelOnInput: boolean = true;\n  keepCalendarOpeningWithRange: boolean = true;\n  selected: any;\n  selectedAgain: any;\n\n  selectedDriver: any = 'all';\n  searchDriver: string = ''\n  driverList: any = [];\n\n  invalidDates = [];\n  selectedOrgID: any;\n  graphname=\"safe_score\"\n  tooltips = [\n    { date: moment(), text: 'Today is just unselectable' },\n    { date: moment().add(2, 'days'), text: 'Yeeeees!!!' }\n  ];\n\n  myChartleft;\n  myChartright;\n  drivingBehaviourLeft: any;\n  drivingBehaviourRight: any;\n  drivingBehaviourLeftgraph: any;\n  drivingBehaviourRightgraph: any;\n\n  tableDataLoading: boolean = true;\n  selectedShow: any = {\n    startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n    endDate: moment().set('hours', 23).set('minutes', 59)\n  };\n  selectedShowCopy: any = {\n    startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n    endDate: moment().set('hours', 23).set('minutes', 59)\n  };\n\n  constructor(\n    private router: Router,\n    public service: MainService,\n    private localService: LocalService,\n    private elementRef: ElementRef,\n    @Inject(LOCALE_ID) private locale: string\n  ) {\n    Chart.register(...registerables);\n\n    this.selected = {\n      startDate: moment().subtract(3, 'month').startOf('month').set('hours', 0).set('minutes', 0),\n      endDate: moment().subtract(1, 'month').endOf('month').set('hours', 23).set('minutes', 59)\n    };\n    this.selectedAgain = {\n      startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n      endDate: moment().set('hours', 23).set('minutes', 59)\n    };\n  }\n\n  ngOnInit(): void {\n    this.selectedOrgID = this.localService.getItem(\"selectedOrgs\")\n    if (this.selectedOrgID) {\n      this.selectedOrgID = JSON.parse(this.selectedOrgID);\n    }\n    if (this.selectedOrgID) {\n      this.resetToLastState();\n      this.updatePageData();\n      this.getDrivers();\n    }\n\n    this.localService.watchOrgData().subscribe((resp) => {\n      if (resp && this.router.url.split('?')[0] == RouteConfig.vechiledrivingBehaviour.url) {\n        // console.log('')\n        let orgId: any = this.localService.getItem(\"selectedOrgs\")\n        if (orgId) {\n          orgId = JSON.parse(orgId);\n        }\n        let isEqual = true;\n        if (this.selectedOrgID && this.selectedOrgID.length && orgId && orgId.length) {\n          isEqual = (orgId.length === this.selectedOrgID.length) && (orgId.every(val => this.selectedOrgID.includes(val)));\n        }\n        else {\n          isEqual = false;\n        }\n        if (!isEqual) {\n          this.selectedOrgID = [...orgId];\n          this.resetToLastState();\n          this.updatePageData();\n          this.getDrivers();\n        }\n\n      }\n    });\n  }\n  getDrivers() {\n    this.searchDriver = '';\n    this.service.get(`drivers/by-organisation?organisation=${JSON.stringify(this.selectedOrgID)}`).pipe().subscribe(response => {\n      if (response.data) {\n        this.driverList = response.data;\n        // console.log(this.driverList)\n      }\n    }, (error) => {\n\n    })\n  }\n\n\n  // // 1. Yesterday, 2. last 7 Days, 3. last 30 days, 4.last 1 month ,  5. last 3 Months, 6. last 12 months\n  getDrivingBehaviour(side, driverId?,search?, date?) {\n    this.isTripHistoryLoading=true;\n    let querryParams = this.createQuerryparams(driverId,search,date)\n    this.service.get(`driving-analytics?${querryParams}`).pipe().subscribe(response => {\n      if (response.data) {\n        this.isTripHistoryLoading=false;\n        if (side == 1) {\n          this.drivingBehaviourLeft = response.data;\n        }\n        else {\n          this.drivingBehaviourRight = response.data;\n        }\n      }\n      else {\n        this.isTripHistoryLoading=false;\n        if (side == 1) {\n          this.drivingBehaviourLeft = {};\n        }\n        else {\n          this.drivingBehaviourRight = {};\n        }\n      }\n    }, (error) => {\n      this.isTripHistoryLoading=false;\n    })\n  }\n  getDrivingBehaviourgraph(side, driverId?,search?, date?,graphname?) {\n    // console.log(this.selectedDriver)\n    this.isTripHistoryLoading=true;\n    let querryParams = this.createQuerryparams(driverId,search,date,graphname,graphname)\n    this.service.get(`driving-analytics-graph?${querryParams}`).pipe().subscribe(response => {\n      if (response.data) {\n        this.isTripHistoryLoading=false;\n        if (side == 1) {\n          \n          this.speedProfile = { 'weight': [], \"date\": [] };\n         \n          this.drivingBehaviourLeftgraph = response.data;\n          this.creategraphArray(side,this.graphname)\n          \n        }\n        else if (side == 2) {\n          this.drivingBehaviourRightgraph = response.data;\n          this.creategraphArray(side,this.graphname)\n        }\n        // else {\n        //   this.drivingBehaviourRight = response.data;\n        // }\n      }\n      else {\n        this.isTripHistoryLoading=false;\n        if (side == 1) {\n          if(this.myChartleft){\n            this.myChartleft.destroy();\n          }\n          this.drivingBehaviourLeftgraph = {};\n        }\n        else {\n          this.drivingBehaviourRightgraph = {};\n        }\n      }\n    }, (error) => {\n      this.speedProfile = { 'weight': [], \"date\": [] };\n      this.accProfile = { 'weight': [], 'date': [] };\n      this.isTripHistoryLoading=false;\n    })\n  }\n  creategraphArray(side,graphname){\n    // console.log(this.drivingBehaviourRightgraph)\n    if(side==1){\n      this.speedProfile= { 'weight': [], \"date\": [] };\n  \n      if(this.myChartleft){\n        this.myChartleft.destroy()\n      }\n      // console.log(array)\n      this.drivingBehaviourLeftgraph.forEach(element => {\n        if(element[graphname] !== '1001' && element[graphname] !== 1001 && element[graphname] !== '1001.0'){\n          this.speedProfile.weight.push((Number(element[graphname])).toFixed(1));\n        }\n        else{\n          this.speedProfile.weight.push(null);\n        }\n        this.speedProfile.date.push(moment.utc(element.date).format('DD/MM'))\n      });\n      // console.log(this.speedProfile)\n      this.createleftChart();\n    }\n    else{\n      this.accProfile= { 'weight': [], 'date': [] };\n      if(this.myChartright){\n        this.myChartright.destroy()\n      }\n      // console.log(array)\n      this.drivingBehaviourRightgraph.forEach(element => {\n        if(element[graphname] !== '1001' && element[graphname] !== 1001  && element[graphname] !== '1001.0'){\n          this.accProfile.weight.push((Number(element[graphname])).toFixed(1));\n        }\n        else{\n          this.accProfile.weight.push(null);\n        }\n        this.accProfile.date.push(moment.utc(element.date).format('DD/MM'))\n      });\n      // console.log(this.speedProfile)\n      this.createrightChart()\n    }\n}\n\n  updatePageData() {\n    this.getDrivingBehaviour(1, this.selectedDriver,this.searchString,this.selected)\n    this.getDrivingBehaviour(2, this.selectedDriver,this.searchString, this.selectedAgain)\n    this.getDrivingBehaviourgraph(1, this.selectedDriver,this.searchString,this.selected,this.graphname)\n    this.getDrivingBehaviourgraph(2, this.selectedDriver,this.searchString, this.selectedAgain,this.graphname)\n  }\n\n  isInvalidDate = (m) => {\n    return this.invalidDates.some(d => d.isSame(m, 'day'));\n  }\n\n  isTooltipDate = (m) => {\n    const tooltip = this.tooltips.find(tt => tt.date.isSame(m, 'day'));\n    if (tooltip) {\n      return tooltip.text;\n    } else {\n      return false;\n    }\n  }\n\n  rangeClicked(label) {\n    // console.log('[rangeClicked] range is : ', label);\n  }\n\n  datesUpdatedDashboard(range){\n  }\n\n \n  datesUpdated(range, side) {\n    if (this.count > 0) {\n      this.count = this.count - 1;\n      return\n    }\n    else {\n      if (side == 1) {\n        this.getDrivingBehaviour(1, this.selectedDriver,this.searchString,this.selected),\n        this.getDrivingBehaviourgraph(1, this.selectedDriver,this.searchString,this.selected,this.graphname)\n      }\n      else {\n        this.getDrivingBehaviour(2, this.selectedDriver,this.searchString,this.selectedAgain)\n        this.getDrivingBehaviourgraph(2, this.selectedDriver,this.searchString,this.selectedAgain,this.graphname)\n\n      }\n    }\n    // console.log('[datesUpdated] range is : ', range);\n  }\n  updategraph(name) {\n    this.graphname = name;\n    this.creategraphArray(1,this.graphname)\n    this.creategraphArray(2,this.graphname)\n  }\n\n\n  changeState(){\n    this.isCollapsed = !this.isCollapsed;\n    if(!this.isCollapsed){\n      this.resetToLastState();\n    }\n  }\n\n  resetToLastState() {\n    this.graphname='safe_score';\n    this.active=1\n    let category = this.localService.getItem(\"driver\")\n    let search = this.localService.getItem(\"search\")\n    let date: any = this.localService.getItem(\"dateRange\")\n    if(date){\n      date = JSON.parse(date)\n      this.selectedShowCopy = {\n        startDate: moment(date.startDate),\n        endDate: moment(date.endDate)\n      };\n      this.selectedShow = this.selectedShowCopy;\n    }\n    else{\n      this.selectedShow = {\n        startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n        endDate: moment().set('hours', 23).set('minutes', 59)\n      };\n      this.selectedShowCopy = {\n        startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n        endDate: moment().set('hours', 23).set('minutes', 59)\n      };\n    }\n    search?  this.searchString = search : this.searchString = '';\n    category && category!=='all' ? this.selectedDriver = JSON.parse(category) : this.selectedDriver = 'all';\n  }\n\n  filterApply() {\n    this.localService.setItem(\"driver\", this.selectedDriver)\n    this.localService.setItem(\"search\", this.searchString)\n    this.localService.setItem(\"dateRange\",JSON.stringify(this.selectedShow));\n    this.selectedShowCopy = this.selectedShow;\n    this.updatePageData();\n    this.changeState();\n  }\n\n  createQuerryparams(driverId?, search?,date?,listing?,graphname?) {\n    let querryParams\n    if (listing) {\n      querryParams = `organisation=${JSON.stringify(this.selectedOrgID)}&page=${this.page}&limit=${this.limit}`;\n    }\n    else {\n      querryParams = `organisation=${JSON.stringify(this.selectedOrgID)}`;\n    }\n\n    if ((driverId && driverId !== 'all')) {\n      querryParams = querryParams + `&driver=[${driverId}]`\n    }\n    if(search){\n      querryParams = querryParams + `&search=${search}`\n    }\n    if(graphname){\n      querryParams = querryParams + `&score_type=${graphname}`\n    }\n    querryParams = querryParams + `&from_date=${moment(date.startDate).format('YYYY-MM-DD')}`\n    querryParams = querryParams + `&to_date=${moment(date.endDate).format('YYYY-MM-DD')}`\n    // querryParams = querryParams + `&custom_filter=true`\n    let val = this.service.checkCustomDate(moment(date.startDate).format('YYYY-MM-DD'),moment(date.endDate).format('YYYY-MM-DD'))\n       if(val == undefined){\n      querryParams = querryParams + `&custom_filter=true&filter_value=''`\n    }\n    else{\n      if((driverId && driverId !== 'all') || search){\n        querryParams = querryParams + `&custom_filter=true&filter_value=''`\n      }\n      else{\n        querryParams = querryParams + `&custom_filter=false&filter_value=${val}`\n      }\n     }\n    return querryParams;\n  }\n\n  routeToVehicleDetail(id){\n    this.localService.setItem('vehicleId', id)\n    this.router.navigate([RouteConfig.vehicleDetail.url])\n  }\n\n  formatToFixed(val,precision){\n    if(typeof val == 'string'){\n      val = parseFloat(val)\n    }\n   if(val){\n     return val.toFixed(precision);\n   }\n   return 0;\n }\n\n resetFilter(){\n  this.selectedDriver = 'all';\n  // this.selectedVehicle = 'all';\n  this.searchString = '';\n  this.selectedShow = {\n    startDate: moment().subtract(29, 'days').set('hours', 0).set('minutes', 0),\n    endDate: moment().set('hours', 23).set('minutes', 59)\n  };\n  this.filterApply();\n}\n\ncreateleftChart() { \n  const labels = this.speedProfile['date'];\n  let htmlRef = this.elementRef.nativeElement.querySelector(`#myChartleft`);\n  const gradient = this.elementRef.nativeElement.querySelector(`#myChartleft`).getContext('2d').createLinearGradient(0, 0, 0, 600);\n  gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n  gradient.addColorStop(0, 'rgba(0, 122, 255, 0.33)');\n   this.myChartleft = new Chart(htmlRef, {\n    type: 'line',\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          label: `${formatDate(this.selected.startDate._d ,'dd-MM-yyyy',this.locale)} - ${formatDate(this.selected.endDate._d ,'dd-MM-yyyy',this.locale)}`,\n          data: this.speedProfile['weight'],\n          borderColor: '#0064FF',\n          cubicInterpolationMode: 'monotone',\n          tension: 0.4,\n          fill: 'start',\n          backgroundColor: gradient\n        }\n      ]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio:false,\n      aspectRatio: 1,\n      plugins: {\n        title: {\n          display: false,\n          text: 'Stacked scales',\n        },\n        legend: {\n          align: 'end',\n          labels: {\n            usePointStyle: true,\n            pointStyle: 'rect',\n            \n          }\n        },\n        tooltip: {\n          mode: 'nearest',\n          axis: 'x',\n          intersect: false\n        }\n      },\n      scales: {\n        y: {\n          type: 'linear',\n          position: 'left',\n          stack: 'demo',\n          stackWeight: 2,\n          grid: {\n            color: 'rgba(0, 0, 0, 0)'\n          },\n          ticks:{\n            precision: 0\n          }\n\n        },\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0)'\n          }\n        },\n        \n      }\n    }\n  });\n\n}\ncreaterightChart() { \n  const labels = this.accProfile['date'];\n  let htmlRef = this.elementRef.nativeElement.querySelector(`#myChartright`);\n  const gradient = this.elementRef.nativeElement.querySelector(`#myChartright`).getContext('2d').createLinearGradient(0, 0, 0, 600);\n  gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n  gradient.addColorStop(0, 'rgba(0, 122, 255, 0.33)');\n   this.myChartright = new Chart(htmlRef, {\n    type: 'line',\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          label: `${formatDate(this.selectedAgain.startDate._d ,'dd-MM-yyyy',this.locale)} - ${formatDate(this.selectedAgain.endDate._d ,'dd-MM-yyyy',this.locale)}`,\n          data: this.accProfile['weight'],\n          borderColor: '#4DBFFF',\n          cubicInterpolationMode: 'monotone',\n          tension: 0.4,\n          fill: 'start',\n          backgroundColor: gradient\n        }\n      ]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio:false,\n      aspectRatio: 1,\n      plugins: {\n        title: {\n          display: false,\n          text: 'Stacked scales',\n        },\n        legend: {\n          align: 'end',\n          labels: {\n            usePointStyle: true,\n            pointStyle: 'rect',\n            \n          }\n        },\n        tooltip: {\n          mode: 'nearest',\n          axis: 'x',\n          intersect: false\n        }\n      },\n      scales: {\n        y: {\n          type: 'linear',\n          position: 'left',\n          stack: 'demo',\n          stackWeight: 2,\n          grid: {\n            color: 'rgba(0, 0, 0, 0)'\n          },\n          ticks:{\n            precision: 0\n          }\n\n        },\n        x: {\n          grid: {\n            color: 'rgba(0, 0, 0, 0)'\n          }\n        },\n        \n      }\n    }\n  });\n\n}\ndestroy(){\n  this.myChartleft.destroy();\n}\n}\n\n\n\n","<div class=\"behaviour mb-20\">\n    \n    <div class=\"mainFilter\">\n        <div class=\"filterHeader\">\n            <h3 class=\"behTitle mb-0\">{{ \"sidebar.driverScoreComp\" | translate}}</h3>\n            <div>\n                <button class=\"btn btnFiliter\" (click)=\"changeState()\" [attr.aria-expanded]=\"!isCollapsed\"\n                    aria-controls=\"collapseExample\"><img src=\"assets/images/filter.svg\">\n                </button> <button class=\"btn btnFilterExport enable-click-event\"><img\n                        src=\"assets/images/export.svg\"></button>\n            </div>\n        </div>\n        <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isCollapsed\">\n            <div class=\"filterBody\">\n                <div class=\"filterBodyTitle\">\n                    <h4>Filters</h4>\n                    <span (click)=\"changeState()\"><img src=\"assets/images/close-circle.svg\"></span>\n                </div>\n                <div class=\"filterSearch mb-20\">\n                    <input type=\"text\" [(ngModel)]=\"searchString\" placeholder=\"Search...\" class=\"form-control\">\n                    <span class=\"filterSearchIcon\"><img src=\"assets/images/search.svg\"></span>\n                </div>\n                <div class=\"profileBox\">\n                    <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                        <mat-label>{{'d.selectDriver' | translate}}</mat-label>\n                        <mat-select [(ngModel)]=\"selectedDriver\" [ngModelOptions]=\"{standalone: true}\"\n                            [disableOptionCentering]=\"true\" panelClass=\"customSelect\"\n                            placeholder=\"{{'d.chooseDriver' | translate}}\">\n                            <div class=\"searchSelect border-bottom\">\n                                <input class='searchDropdown' type=\"text\" placeholder=\"{{'search' | translate}}\"\n                                    [(ngModel)]=\"searchDriver\">\n                                <mat-icon><svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                                            d=\"M9.58973 9.59067C9.76496 9.41543 10.0491 9.41543 10.2243 9.59067L12.7013 12.0677C12.8765 12.2429 12.8765 12.527 12.7013 12.7022C12.526 12.8775 12.2419 12.8775 12.0667 12.7022L9.58973 10.2253C9.4145 10.05 9.4145 9.7659 9.58973 9.59067Z\"\n                                            fill=\"#848588\" />\n                                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                                            d=\"M6.46094 2.06443C4.03226 2.06443 2.06344 4.03328 2.06344 6.46198C2.06344 8.89069 4.03226 10.8595 6.46094 10.8595C8.88961 10.8595 10.8584 8.89069 10.8584 6.46198C10.8584 4.03328 8.88961 2.06443 6.46094 2.06443ZM1.16602 6.46198C1.16602 3.53764 3.53663 1.16699 6.46094 1.16699C9.38524 1.16699 11.7559 3.53764 11.7559 6.46198C11.7559 9.38633 9.38524 11.757 6.46094 11.757C3.53663 11.757 1.16602 9.38633 1.16602 6.46198Z\"\n                                            fill=\"#848588\" />\n                                    </svg>\n                                </mat-icon>\n                            </div>\n                            <mat-option [value]=\"'all'\">{{('all' | translate) | titlecase}}</mat-option>\n                            <mat-option [value]=\"item?.id\"\n                                *ngFor=\"let item of driverList  | filter: searchDriver : 'driver'\">{{item?.first_name}}\n                                {{item?.last_name}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    \n    \n                    <!-- <mat-form-field class=\"fields fileld33 ngx-daterangepicker-action\" appearance=\"outline\">\n                        <mat-label>{{\"selectRange\" | translate}}</mat-label>\n                        <input matInput ngxDaterangepickerMd [(ngModel)]=\"selectedShow\" [showCustomRangeLabel]=\"true\"\n                            [alwaysShowCalendars]=\"alwaysShowCalendars\" [ranges]=\"ranges\" [showClearButton]=\"false\"\n                            [showCancel]=\"true\" [linkedCalendars]=\"true\" [isTooltipDate]=\"isTooltipDate\"\n                            [isInvalidDate]=\"isInvalidDate\" [locale]=\"{applyLabel: 'Set Date'}\"\n                            (rangeClicked)=\"rangeClicked($event)\" (datesUpdated)=\"datesUpdatedDashboard($event)\"\n                            [keepCalendarOpeningWithRange]=\"keepCalendarOpeningWithRange\"\n                            [showRangeLabelOnInput]=\"showRangeLabelOnInput\" readonly />\n                        <span class=\"calIconRight\"><img src=\"assets/images/calendar.svg\"></span>\n                    </mat-form-field> -->\n                </div>\n                <div class=\"d-flex flex-wrap justify-content-between mt-2\">\n                    <div>\n                        <button mat-button class=\"filterBtn exportBtn\">Export\n                            <img class=\"exprtBtnImg\" src=\"assets/images/exportBtn.svg\"></button>\n                    </div>\n                    <div class=\"d-flex flex-wrap\">\n                        <div>\n                            <button mat-button class=\"filterBtn cancleBtn\" (click)=\"resetToLastState();resetFilter()\">Reset</button>\n                        </div>\n                        <div>\n                            <button mat-button class=\"filterBtn applyBtn\" (click)=\"filterApply();destroy()\" >{{\"apply\" | translate}}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"behaviorscore\">\n        <div class=\"w-100\">\n            <h3 class=\"behTitle mb-0\">{{ \"sidebar.driverScoreComp\" | translate}}</h3>\n        </div>\n        <div class=\"w-49\">\n            <div class=\"ngx-daterangepicker-action-left mondata\">\n                <span class=\"calIcon\"><img src=\"assets/images/calendar.svg\"></span>\n                <span class=\"cursor closeIcon\"><img src=\"assets/images/Close.svg\"></span>\n                <input ngxDaterangepickerMd [(ngModel)]=\"selected\" [showCustomRangeLabel]=\"true\"\n                    [alwaysShowCalendars]=\"alwaysShowCalendars\" [ranges]=\"ranges\" [showClearButton]=\"false\"\n                    [showCancel]=\"true\" [linkedCalendars]=\"true\" [isTooltipDate]=\"isTooltipDate\"\n                    [isInvalidDate]=\"isInvalidDate\" [locale]=\"{applyLabel: 'Set Date'}\"\n                    (rangeClicked)=\"rangeClicked($event)\" (datesUpdated)=\"datesUpdated($event,1)\"\n                    [keepCalendarOpeningWithRange]=\"keepCalendarOpeningWithRange\"\n                    [showRangeLabelOnInput]=\"showRangeLabelOnInput\" class=\"form-control\"\n                    placeholder=\"Select please...\" />\n            </div>\n            <div class=\"behaviorBox\" *ngIf=\"drivingBehaviourLeft!=null\">\n                <div class=\" selValue\" >\n                    <div class=\"valueBox \" (click)=\"active=1;graphname='safe_score';updategraph('safe_score') \" [ngClass]=\"{'active': active==1}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.safe_score,1))}}</h4>\n                        <p class=\"type mb-0\">{{ \"t.safeScore\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=2; graphname='speed_score';updategraph('speed_score')\" [ngClass]=\"{'active': active==2}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.speed,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"speed\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=3 ; graphname='acceleration_score';updategraph('acceleration_score')\" [ngClass]=\"{'active': active==3}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.acceleration,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"accelerate\" | translate}}</p>\n                    </div>\n                    \n                </div>\n                <div class=\"margin-bottom\">\n                    <div>\n                        \n                    </div>\n                </div>\n                <div class=\" selValue \" *ngIf=\"drivingBehaviourLeft!=null\">\n                    <div class=\"valueBox\" (click)=\"active=4; graphname='breaking_score';updategraph('breaking_score')\" [ngClass]=\"{'active': active==4}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.breaking,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"decelerate\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=5;graphname='cornering_score';updategraph('cornering_score')\" [ngClass]=\"{'active': active==5}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.cornering,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"cornerning\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=6;graphname='idling_score';updategraph('idling_score')\" [ngClass]=\"{'active': active==6}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourLeft?.idling,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"idiling\" | translate}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"w-6\">\n            vs\n        </div>\n        <div class=\"w-49\">\n            <div class=\"ngx-daterangepicker-action mondata\">\n                <span class=\"calIcon\"><img src=\"assets/images/calendar.svg\"></span>\n                <input type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"selectedAgain\" [showCustomRangeLabel]=\"true\"\n                    [alwaysShowCalendars]=\"alwaysShowCalendars\" [ranges]=\"ranges\" [showClearButton]=\"false\"\n                    [showCancel]=\"true\" [linkedCalendars]=\"true\" [isTooltipDate]=\"isTooltipDate\"\n                    [isInvalidDate]=\"isInvalidDate\" [locale]=\"{applyLabel: 'Set Date'}\"\n                    (rangeClicked)=\"rangeClicked($event)\" (datesUpdated)=\"datesUpdated($event,2)\"\n                    [keepCalendarOpeningWithRange]=\"keepCalendarOpeningWithRange\"\n                    [showRangeLabelOnInput]=\"showRangeLabelOnInput\" class=\"form-control\"\n                    placeholder=\"Select please...\" />\n                <span class=\"cursor closeIcon\"><img src=\"assets/images/Close.svg\"></span>\n            </div>\n            \n            <div class=\"behaviorBox\">\n                <div class=\" selValue\" *ngIf=\"drivingBehaviourRight!=null\">\n                    <div class=\"valueBox\" (click)=\"active=1;graphname='safe_score';updategraph('safe_score')\" [ngClass]=\"{'activeRight': active==1}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.safe_score,1))}}</h4>\n                        <p class=\"type mb-0\">{{ \"t.safeScore\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=2;graphname='speed_score';updategraph('speed_score')\" [ngClass]=\"{'activeRight': active==2}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.speed,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"speed\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=3;graphname='acceleration_score';updategraph('acceleration_score')\" [ngClass]=\"{'activeRight': active==3}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.acceleration,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"accelerate\" | translate}}</p>\n                    </div>\n                    \n                </div>\n                <div class=\"margin-bottom\">\n                    <div>\n                        \n                    </div>\n                </div>\n                <div class=\" selValue\" *ngIf=\"drivingBehaviourRight!=null\">\n                    <div class=\"valueBox\" (click)=\"active=4;graphname='breaking_score';updategraph('breaking_score')\" [ngClass]=\"{'activeRight': active==4}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.breaking,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"decelerate\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=5;graphname='cornering_score';updategraph('cornering_score')\" [ngClass]=\"{'activeRight': active==5}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.cornering,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"cornerning\" | translate}}</p>\n                    </div>\n                    <div class=\"valueBox\" (click)=\"active=6;graphname='idling_score';updategraph('idling_score')\" [ngClass]=\"{'activeRight': active==6}\">\n                        <h4 class=\"values mb-0\">{{service.convertToDutch(formatToFixed(drivingBehaviourRight?.idling,1))}}</h4>\n                        <p class=\"type mb-0\">{{\"idiling\" | translate}}</p>\n                    </div>\n                </div>\n            </div>\n\n            \n        </div>\n        <div class=\"w-100 d-flex justify-content-center\" *ngIf=\"isTripHistoryLoading\">\n            <ng-container >\n                <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"graph\">\n        \n        <div >\n            <canvas id=\"myChartleft\"></canvas>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center py-4\" *ngIf=\"speedProfile?.weight.length==0\">\n            \n            <img src=\"/assets/images/danger.png\" alt=\"\">\n        </div> -->\n        <div class=\"text-center text-color text-capitalize\">\n            vs\n        </div>\n        <div >\n            <canvas id=\"myChartright\"></canvas>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center py-4\" *ngIf=\"accProfile?.weight.length==0\">\n            <img src=\"/assets/images/danger.png\" alt=\"\">\n        </div> -->\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VechileDrivingRoutingModule } from './vechile-driving-routing.module';\nimport { VechiledrivingbehaviourscoreComponent } from './vechiledrivingbehaviourscore/vechiledrivingbehaviourscore.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\nimport { MaterialModules } from 'src/app/config/material';\nimport { ComponentModule } from 'src/app/shared/components/component.module';\n\n@NgModule({\n  declarations: [VechiledrivingbehaviourscoreComponent],\n  imports: [\n    CommonModule,\n    VechileDrivingRoutingModule,\n    FormsModule,\n    SharedModule,\n    NgbModule,\n    ComponentModule,\n    NgxDaterangepickerMd.forRoot(),\n    MaterialModules,\n    TranslateModule.forChild({\n      extend: true\n   })\n  ]\n})\nexport class VechileDrivingModule { }\n"]}