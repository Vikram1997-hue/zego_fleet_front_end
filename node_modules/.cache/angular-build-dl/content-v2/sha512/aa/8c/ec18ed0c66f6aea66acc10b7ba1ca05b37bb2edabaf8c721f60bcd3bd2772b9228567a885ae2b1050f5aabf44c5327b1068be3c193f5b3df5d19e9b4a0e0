{"version":3,"sources":["./src/app/main/ruleEngine/rule-engine-settings/add-rule-engine/add-rule-engine.component.ts","./src/app/main/ruleEngine/rule-engine-settings/add-rule-engine/add-rule-engine.component.html","./src/app/main/ruleEngine/rule-engine-settings/rule-engine-settings-routing.module.ts","./src/app/main/ruleEngine/rule-engine-settings/rule-engine-settings.module.ts","./src/app/main/ruleEngine/rule-engine-settings/edit-rule-engine/edit-rule-engine.component.ts","./src/app/main/ruleEngine/rule-engine-settings/edit-rule-engine/edit-rule-engine.component.html","./src/app/main/ruleEngine/rule-engine-settings/rule-engine-dashboard/rule-engine-dashboard.component.ts","./src/app/main/ruleEngine/rule-engine-settings/rule-engine-dashboard/rule-engine-dashboard.component.html"],"names":[],"mappings":"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","file":"ruleEngine-rule-engine-settings-rule-engine-settings-module-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { AppConfig } from \"src/app/config/app-config\";\nimport { RouteConfig } from \"src/app/config/route-config\";\nimport { LocalService } from \"src/app/services/local.service\";\nimport { MainService } from \"src/app/services/main.service\";\nimport { SnackbarComponent } from \"src/app/shared/components/snackbar/snackbar.component\";\nimport * as moment from \"moment\";\n\n@Component({\n  selector: \"app-add-rule-engine\",\n  templateUrl: \"./add-rule-engine.component.html\",\n  styleUrls: [\"./add-rule-engine.component.scss\"],\n})\nexport class AddRuleEngineComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = \"center\";\n  verticalPosition: MatSnackBarVerticalPosition = \"bottom\";\n  addRuleForm: FormGroup;\n  orgName: string = \"\";\n  isloading = false;\n  selectedOrgID: any;\n  disable_status = true;\n  rangeValue = \"\";\n  currentValue = \"\";\n  minDate = moment();\n  dateLimit = \"5\";\n  selected: any = {\n    startDate: moment()\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .set(\"hours\", 0)\n      .set(\"minutes\", 0),\n    endDate: moment()\n      .subtract(1, \"month\")\n      .endOf(\"month\")\n      .set(\"hours\", 23)\n      .set(\"minutes\", 59),\n  };\n  selectedShow: any = {\n    startDate: moment()\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .set(\"hours\", 0)\n      .set(\"minutes\", 0),\n    endDate: moment()\n      .subtract(1, \"month\")\n      .endOf(\"month\")\n      .set(\"hours\", 23)\n      .set(\"minutes\", 59),\n  };\n\n  ranges: any = AppConfig.momentRange;\n  alwaysShowCalendars: boolean = true;\n  showRangeLabelOnInput: boolean = true;\n  keepCalendarOpeningWithRange: boolean = true;\n  showRange = false;\n  // selected: any;\n  // selectedAgain: any;\n  constructor(\n    private fb: FormBuilder,\n    private service: MainService,\n    private localService: LocalService,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.createaddRuleForm();\n    this.getAllOrganization();\n    this.vechileCategory();\n    this.organization = JSON.parse(this.localService.getItem(\"orgname\"));\n\n    this.selectedOrgID = this.localService.getItem(\"selectedOrgs\");\n    if (this.selectedOrgID) {\n      this.selectedOrgID = JSON.parse(this.selectedOrgID);\n    }\n    this.localService.watchOrgData().subscribe((resp) => {\n      if (resp) {\n        let orgId: any = this.localService.getItem(\"selectedOrgs\");\n        if (orgId) {\n          orgId = JSON.parse(orgId);\n        }\n        let isEqual = true;\n        if (\n          this.selectedOrgID &&\n          this.selectedOrgID.length &&\n          orgId &&\n          orgId.length\n        ) {\n          isEqual =\n            orgId.length === this.selectedOrgID.length &&\n            orgId.every((val) => this.selectedOrgID.includes(val));\n        } else {\n          isEqual = false;\n        }\n        if (!isEqual) {\n          this.selectedOrgID = [...orgId];\n        }\n      }\n      const url = window.location;\n      if (\n        this.selectedOrgID.length > 1 &&\n        url.hash == \"#/main/ruleengine/addruleengine\"\n      ) {\n        this.openSnackBar();\n      } else if (this.selectedOrgID.length == 1) {\n        this.organization.filter((data) => {\n          if (data.id == this.selectedOrgID[0]) {\n            this.orgName = data.name;\n          }\n        });\n        this.addRuleForm.patchValue({\n          org_id: this.selectedOrgID[0],\n        });\n      }\n    });\n    if (this.selectedOrgID.length > 1) {\n      this.openSnackBar();\n    }\n    if (this.selectedOrgID.length == 1) {\n      this.organization.filter((data) => {\n        if (data.id == this.selectedOrgID[0]) {\n          this.orgName = data.name;\n        }\n      });\n      this.addRuleForm.patchValue({\n        org_id: this.selectedOrgID[0],\n      });\n    }\n    this.organization.filter((data) => {\n      if (data.id == this.selectedOrgID[0]) {\n        this.orgName = data.name;\n      }\n    });\n  }\n  organization: any;\n  exception: any = [\n    {\n      name: \"Speeding\",\n      id: \"speed\",\n    },\n    {\n      name: \"Breaking\",\n      id: \"breaking\",\n    },\n    {\n      name: \"Cornering\",\n      id: \"cornering\",\n    },\n    {\n      name: \"Acceleration\",\n      id: \"acceleration\",\n    },\n    {\n      name: \"Idling\",\n      id: \"idling\",\n    },\n  ];\n  vechilecategory: any;\n\n  createaddRuleForm() {\n    this.addRuleForm = this.fb.group({\n      org_id: [\"\", Validators.required],\n      percentage_of_violation: [\"\", Validators.required],\n      duration_of_violation: [\"\", Validators.required],\n      score: [\"\", Validators.required],\n      road_type: [\"\", Validators.required],\n      road_factor: [\"\", Validators.required],\n      vehicle_category_id: [\"\", Validators.required],\n      weather: [\"\", Validators.required],\n      exception_type: [\"\", Validators.required],\n      day_night_driving: [\"\", Validators.required],\n      day_night_score: [\"\", Validators.required],\n      created_on: [moment().format(\"MM/DD/YYYY\")],\n      effective_from: [\"\", Validators.required],\n    });\n  }\n\n  getAllOrganization() {\n    // console.log(this.organization)\n  }\n  vechileCategory() {\n    this.service\n      .get(\"vehicles/category-by-organisation?organisation=[1,2,3,4,5,6,7]\")\n      .pipe()\n      .subscribe((res) => {\n        this.vechilecategory = res.data;\n      }),\n      (err) => {};\n  }\n  get f() {\n    return this.addRuleForm.controls;\n  }\n\n  goToLastPage() {\n    window.history.back();\n  }\n  updatetype() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n      this.showRange=false;\n      this.currentValue = \"<span>(km/hr)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"breaking\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"cornering\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"acceleration\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"idling\") {\n      this.showRange=true;\n      this.currentValue = \"\";\n    }\n  }\n  update() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n    }\n    if (\n      this.addRuleForm.value.road_type == 1 ||\n      this.addRuleForm.value.road_type == 2\n    ) {\n      this.addRuleForm.patchValue({\n        road_factor: \"City\",\n      });\n    }\n    if (\n      this.addRuleForm.value.road_type == 3 ||\n      this.addRuleForm.value.road_type == 4\n    ) {\n      this.addRuleForm.patchValue({\n        road_factor: \"Outside City\",\n      });\n    } else if (this.addRuleForm.value.road_type == 5) {\n      this.addRuleForm.patchValue({\n        road_factor: \"Highway\",\n      });\n    }\n  }\n\n  submit() {\n    // console.log(this.addRuleForm.value.effective_from);\n\n    // console.log(moment(this.addRuleForm.value.effective_from.startDate).format('YYYY-MM-DD'))\n    if(this.addRuleForm.value.exception_type!= 'speed'){\n      this.addRuleForm.patchValue({\n        road_factor:'null'\n      })\n    }\n    if (this.selectedOrgID.length == 1) {\n      if (this.addRuleForm.valid) {\n        this.isloading = true;\n        let percentage_of_violation_min = 0;\n        let percentage_of_violation_max = 5;\n        let road_type_min = 0;\n        let road_type_max = 30;\n\n        if (this.addRuleForm.value.percentage_of_violation == 2) {\n          percentage_of_violation_min = 5;\n          percentage_of_violation_max = 10;\n        } else if (this.addRuleForm.value.percentage_of_violation == 3) {\n          percentage_of_violation_min = 10;\n          percentage_of_violation_max = 100;\n        }\n        if (this.addRuleForm.value.road_type == 2) {\n          road_type_min = 30;\n          road_type_max = 50;\n        } else if (this.addRuleForm.value.road_type == 3) {\n          road_type_min = 50;\n          road_type_max = 80;\n        } else if (this.addRuleForm.value.road_type == 4) {\n          road_type_min = 80;\n          road_type_max = 100;\n        } else if (this.addRuleForm.value.road_type == 5) {\n          road_type_min = 100;\n          road_type_max = 1000;\n        }\n        let data:any = {\n          org_id: this.addRuleForm.value.org_id,\n          percentage_of_violation_min: percentage_of_violation_min,\n          percentage_of_violation_max: percentage_of_violation_max,\n          duration_of_violation: Number(\n            this.addRuleForm.value.duration_of_violation\n          ),\n          score: Number(this.addRuleForm.value.score),\n          road_type_min: road_type_min,\n          road_type_max: road_type_max,\n          road_factor: this.addRuleForm.value.road_factor,\n          vehicle_category_id: this.addRuleForm.value.vehicle_category_id,\n          weather: this.addRuleForm.value.weather,\n          exception_type: this.addRuleForm.value.exception_type,\n          day_night_driving: this.addRuleForm.value.day_night_driving,\n          day_night_score: Number(this.addRuleForm.value.day_night_score),\n          effective_from: moment(\n            this.addRuleForm.value.effective_from.startDate\n          ).format(\"YYYY-MM-DD\"),\n          // created_on: moment(this.addRuleForm.value.created_on).format(\n          //   \"YYYY-MM-DD\"\n          // ),\n        };\n        if(data.exception_type!='speed'){\n        data.road_factor=\"Highway\";\n        data.road_type_min=100;\n        data.road_type_max=1000;\n          data.gforce_limit=this.addRuleForm.value.road_type;\n        }\n        \n\n        // console.log(data)\n        this.service\n          .post(\"rule-engine/create\", data)\n          .pipe()\n          .subscribe((res) => {\n            this.router.navigate([RouteConfig.ruleengine.url]);\n          }),\n          (err) => {\n            this.isloading=false;\n          };\n      }\n    } else {\n      this.openSnackBar();\n    }\n  }\n\n  openSnackBar() {\n    this.openSnackBarmodal(\n      \"Please select only one organisation\",\n      \"rule_engine\"\n    );\n  }\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: true, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n  fitlerorgname(id) {\n    this.organization.filter((data) => {\n      if (data.id == id) {\n        this.orgName = data.name;\n      }\n    });\n  }\n}\n","<div class=\"titleWithBack \">\n    <span class=\"backBtnImg cursor\" (click)=\"goToLastPage()\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\"> {{\"sidebar.ruleEngineSetting\" | translate}}</h4>\n</div>\n<div class=\"filterBody\">\n    <h5 class=\"editTitle\">Add new rule engine setting </h5>\n    <div class=\"editRule\">\n        <p class=\"editRuleTitle\">{{\"rule.addFor\" | translate}}</p>\n        <p class=\"editRuleTitleBack\" *ngIf=\"selectedOrgID.length>1\">{{\"rule.orgName\" | translate}}</p>\n        <p class=\"editRuleTitleBack\" *ngIf=\"selectedOrgID.length==1\">{{orgName}}</p>\n    </div>\n    <form [formGroup]='addRuleForm'>\n        <div class=\"profileBox\">\n\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Exception type</mat-label>\n                <mat-select formControlName=\"exception_type\" (selectionChange)=\"updatetype()\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of exception\">{{item?.name}}</mat-option>\n\n                </mat-select>\n\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Percentage of Violation</mat-label>\n                <mat-select formControlName=\"percentage_of_violation\">\n                    <mat-option value=\"1\">\n                        <0 - 05% exeeding limit longer than time </mat-option>\n                            <mat-option value=\"2\">\n                                <05 - 10% exeeding limit longer than time</mat-option>\n                                    <mat-option value=\"3\"> >10% exeeding limit longer than time </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.time\" | translate}} (s)</mat-label>\n                <input matInput value=\"9\" formControlName=\"duration_of_violation\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.point\" | translate}}</mat-label>\n                <input matInput value=\"9\" formControlName=\"score\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\" *ngIf=\"showRange==false\">\n                <mat-label>{{\"rule.range\" | translate}} <span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <mat-select formControlName=\"road_type\" (selectionChange)=\"update()\" [disabled]=\"showRange\">\n                    <mat-option value=\"1\">0-30</mat-option>\n                    <mat-option value=\"2\">31-50</mat-option>\n                    <mat-option value=\"3\">51-80</mat-option>\n                    <mat-option value=\"4\">81-100</mat-option>\n                    <mat-option value=\"5\">>100</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\"  *ngIf=\"showRange==true\">\n                <mat-label>Range <span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <input matInput value=\"0\" formControlName=\"road_type\">\n                <!-- <mat-select formControlName=\"road_type\" >\n                    <mat-option value=\"1\">1</mat-option>\n                    <mat-option value=\"2\">2</mat-option>\n                    <mat-option value=\"3\">3</mat-option>\n                    <mat-option value=\"4\">4</mat-option>\n                    <mat-option value=\"5\">>5</mat-option>\n                </mat-select> -->\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.weather\" | translate}}</mat-label>\n                <mat-select formControlName=\"weather\">\n                    <mat-option value=\"Snow\">Snow</mat-option>\n                    <mat-option value=\"Cold\">Cold</mat-option>\n\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.roadFactor\" | translate}}</mat-label>\n                <mat-select formControlName=\"road_factor\" [disabled]=\"disable_status\">\n                    <mat-option value=\"City\">City</mat-option>\n                    <mat-option value=\"Outside City\">Outside City Road</mat-option>\n                    <mat-option value=\"Highway\">Highway</mat-option>\n                    <!-- <mat-option value=\"option1\">Highway</mat-option> -->\n\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.vehCategory\" | translate}}</mat-label>\n                <mat-select formControlName=\"vehicle_category_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of vechilecategory\">{{item?.name}}</mat-option>\n\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} driving</mat-label>\n                <mat-select formControlName=\"day_night_driving\">\n                    <mat-option value=\"Day\">Day</mat-option>\n                    <mat-option value=\"Night\">Night</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} weightage</mat-label>\n                <input matInput value=\"9\" formControlName=\"day_night_score\">\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\" disabled>\n                <mat-label>Created on</mat-label>\n                <input  matInput formControlName=\"created_on\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\" [autoApply]=\"true\"    matInput  formControlName=\"effective_from\" readonly>\n            </mat-form-field>\n          \n\n        </div>\n        <ng-container class=\"py-3\" *ngIf=\"isloading\">\n            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n        </ng-container>\n        <div class=\"BtnBlock\">\n            <button class=\"btn btnSave\" (click)=\"submit()\">{{\"rule.add\" | translate}}</button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { AddRuleEngineComponent } from './add-rule-engine/add-rule-engine.component';\nimport { EditRuleEngineComponent } from './edit-rule-engine/edit-rule-engine.component';\nimport { RuleEngineDashboardComponent } from './rule-engine-dashboard/rule-engine-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RuleEngineDashboardComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: RouteConfig.editruleengine.path,\n    component: EditRuleEngineComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: RouteConfig.addruleengine.path,\n    component: AddRuleEngineComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RuleEngineSettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RuleEngineSettingsRoutingModule } from './rule-engine-settings-routing.module';\nimport { RuleEngineDashboardComponent } from './rule-engine-dashboard/rule-engine-dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModules } from 'src/app/config/material';\nimport { EditRuleEngineComponent } from './edit-rule-engine/edit-rule-engine.component';\nimport { AddRuleEngineComponent } from './add-rule-engine/add-rule-engine.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\n\n@NgModule({\n  declarations: [RuleEngineDashboardComponent, EditRuleEngineComponent, AddRuleEngineComponent],\n  imports: [\n    CommonModule,\n    RuleEngineSettingsRoutingModule,\n    MaterialModules,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDaterangepickerMd.forRoot(),\n    TranslateModule.forChild({\n      extend: true\n    })\n  ]\n})\nexport class RuleEngineSettingsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-edit-rule-engine',\n  templateUrl: './edit-rule-engine.component.html',\n  styleUrls: ['./edit-rule-engine.component.scss']\n})\nexport class EditRuleEngineComponent implements OnInit {\n  addRuleForm: FormGroup;\n  details:any;\n  isloading=false;\n  currentValue=\"\";\n  showRange = false;\n  constructor(\n    private fb: FormBuilder,\n    private service: MainService,\n    private localService: LocalService,\n    public route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams\n    .subscribe(params => {\n      const details:any = params.details;\n      this.details = JSON.parse(details);\n    }\n  );\n    this.createaddRuleForm();\n    this.getAllOrganization();\n    this.vechileCategory();\n  }\n  organization:any;\n  exception:any=[\n    {\n      name:'Speeding',\n      id:'speed'\n    },\n    {\n      name:'Breaking',\n      id:'breaking'\n    },\n    {\n      name:'Cornering',\n      id:'cornering'\n    },\n    {\n      name:'Acceleration',\n      id:'acceleration'\n    },\n    {\n      name:'Idling',\n      id:'idling'\n    },\n\n  ]\n  vechilecategory:any;\n  createaddRuleForm(){\n    let obj:any= {\n      startDate:'',\n      endDate:''\n    }\n    // console.log(this.details)\n    if(this.details.effective_from!=null){\n      obj= {\n        startDate:moment(this.details.effective_from),\n        endDate:moment(this.details.effective_from)\n      }\n    }\n    else{\n      obj= ''\n    }\n   \n    \n    this.addRuleForm = this.fb.group({\n      org_id: [this.details.org_id,Validators.required],\n      percentage_of_violation: ['',Validators.required],\n      duration_of_violation: [this.details.duration_of_violation,Validators.required],\n      score: [this.details.score,Validators.required],\n      road_type: ['',Validators.required],\n      road_factor: [this.details.road_factor,Validators.required],\n      vehicle_category_id: [this.details.vehicle_category_id,Validators.required],\n      weather: [this.details.weather,Validators.required],\n      exception_type: [this.details.exception_type,Validators.required],\n      day_night_driving: [this.details.day_night_driving,Validators.required],\n      day_night_score: [this.details.day_night_score,Validators.required],\n      is_active:[JSON.stringify(this.details.is_active)],\n      created_on:[ moment(this.details.createdAt).format('MM/DD/YYYY')],\n      effective_from:[obj,Validators.required]\n    })\n  // console.log(this.addRuleForm.value);\n  \n    this.checkValue();\n    this.updatetype();\n  }\n  invalidDates = [];\n  isInvalidDate = (m) => {\n    return this.invalidDates.some(d => d.isSame(m, 'day'));\n  }\n  updatetype() {\n    if (this.addRuleForm.value.exception_type == \"speed\") {\n      this.showRange=false;\n      this.currentValue = \"<span>(km/hr)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"breaking\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"cornering\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"acceleration\") {\n      this.showRange=true;\n      this.currentValue = \"<span>(m/s<sup>2</sup>)</span>\";\n    } else if (this.addRuleForm.value.exception_type == \"idling\") {\n      this.showRange=true;\n      this.currentValue = \"\";\n    }\n    this.checkValue();\n  }\n  checkValue(){\n    if(this.details.percentage_of_violation_min>=0 && this.details.percentage_of_violation_max<=5){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'1'\n      })\n    }\n    else if(this.details.percentage_of_violation_min>=5 && this.details.percentage_of_violation_max<=10){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'2'\n      })\n    }\n    else if(this.details.percentage_of_violation_min>=10){\n      this.addRuleForm.patchValue({\n        percentage_of_violation:'3'\n      })\n    }\n    \n   if(this.addRuleForm.value.exception_type=='speed'){\n    if(this.details.road_type_min>=0 && this.details.road_type_min<=30){\n      this.addRuleForm.patchValue({\n        road_type: '1'\n      })\n    }\n    else if(this.details.road_type_min>=30 && this.details.road_type_min<50){\n      this.addRuleForm.patchValue({\n        road_type: '2'\n      })\n    }\n    else if(this.details.road_type_min>=50 && this.details.road_type_min<80){\n      this.addRuleForm.patchValue({\n        road_type: '3'\n      })\n    }\n    else if(this.details.road_type_min>=80 && this.details.road_type_min<100){\n      this.addRuleForm.patchValue({\n        road_type: '4'\n      })\n    }\n    else if(this.details.road_type_min>=100 && this.details.road_type_max<1000){\n      this.addRuleForm.patchValue({\n        road_type: '5'\n      })\n    }\n   }\n   else{\n     this.addRuleForm.patchValue({\n       road_type:this.details.gforce_limit\n     })\n   }\n    // console.log(this.addRuleForm.value)\n  }\n  update(){\n    // console.log(\"aaaaaa\");\n    if(this.addRuleForm.value.road_type==1 || this.addRuleForm.value.road_type==2){\n      this.addRuleForm.patchValue({\n        road_factor:'City'\n      })\n    }\n    if(this.addRuleForm.value.road_type==3 || this.addRuleForm.value.road_type==4){\n      this.addRuleForm.patchValue({\n        road_factor:'Outside City'\n      })\n    }\n    else if(this.addRuleForm.value.road_type==5){\n      this.addRuleForm.patchValue({\n        road_factor:'Highway'\n      })\n    }\n    // console.log(this.addRuleForm.value)\n  }\n\n  getAllOrganization(){\n    this.organization=JSON.parse(this.localService.getItem('orgname'))\n    // console.log(this.organization)\n  }\n  vechileCategory(){\n    this.service.get('vehicles/category-by-organisation?organisation=[1,2,3,4,5,6,7]').pipe().subscribe(res=>{\n      this.vechilecategory=res.data\n    }),err=>{\n\n    }\n  }\n  get f() {\n    return this.addRuleForm.controls;\n  }\n\n  goToLastPage() {\n    window.history.back();\n  }\n\n  submit(){\n    if(this.addRuleForm.value.exception_type!= 'speed'){\n      this.addRuleForm.patchValue({\n        road_factor:'null'\n      })\n    }\n    // console.log(this.addRuleForm.value)\n    if(this.addRuleForm.valid){\n      this.isloading=true;\n      let percentage_of_violation_min=0;\n      let percentage_of_violation_max=5;\n      let road_type_min=0;\n      let road_type_max=30;\n      // console.log(this.addRuleForm.value.percentage_of_violation)\n      if(this.addRuleForm.value.percentage_of_violation==2){\n        percentage_of_violation_min=5;\n        percentage_of_violation_max=10;\n      }\n      else if(this.addRuleForm.value.percentage_of_violation==3){\n        percentage_of_violation_min=10;\n        percentage_of_violation_max=100;\n      }\n      if(this.addRuleForm.value.road_type==2){\n        road_type_min=30;\n        road_type_max=50;\n      }\n      else if(this.addRuleForm.value.road_type==3){\n        road_type_min=50;\n        road_type_max=80;\n      }\n      else if(this.addRuleForm.value.road_type==4){\n        road_type_min=80;\n        road_type_max=100;\n      }\n      else if(this.addRuleForm.value.road_type==5){\n        road_type_min=100;\n        road_type_max=1000;\n      }\n      if(this.addRuleForm.value.exception_type){\n        \n      }\n      let data:any={\n        id:this.details.id,\n        org_id: this.addRuleForm.value.org_id,\n      percentage_of_violation_min: percentage_of_violation_min,\n      percentage_of_violation_max: percentage_of_violation_max,\n      duration_of_violation:this.addRuleForm.value.duration_of_violation,\n      score: this.addRuleForm.value.score,\n      road_type_min: road_type_min,\n      road_type_max: road_type_max,\n      road_factor: this.addRuleForm.value.road_factor,\n      vehicle_category_id:this.addRuleForm.value.vehicle_category_id ,\n      weather: this.addRuleForm.value.weather,\n      exception_type:this.addRuleForm.value.exception_type ,\n      day_night_driving: this.addRuleForm.value.day_night_driving,\n      day_night_score:this.addRuleForm.value.day_night_score ,\n      effective_from:(moment(this.addRuleForm.value.effective_from.startDate).format('YYYY-MM-DD')),\n        created_on:this.addRuleForm.value.created_on,\n        is_active:JSON.parse(this.addRuleForm.value.is_active)\n      }\n      if(data.exception_type!='speed'){\n        data.road_factor=\"Highway\";\n        data.road_type_min=100;\n        data.road_type_max=1000;\n          data.gforce_limit=this.addRuleForm.value.road_type;\n        }\n      // console.log(data)\n      this.service.put('rule-engine/edit',data).pipe().subscribe(res=>{\n        this.router.navigate([RouteConfig.ruleengine.url])\n      }),err=>{\n        this.isloading=false;\n      }\n    }\n  }\n}\n","<div class=\"titleWithBack \">\n    <span class=\"backBtnImg cursor\" (click)=\"goToLastPage()\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\"> {{\"sidebar.ruleEngineSetting\" | translate}}</h4>\n</div>\n<div class=\"filterBody\">\n    <h5 class=\"editTitle\">Edit rule engine setting </h5>\n    <div class=\"editRule\">\n        <p class=\"editRuleTitle\">{{\"rule.editingFor\" | translate}}</p>\n        <p class=\"editRuleTitleBack\">{{details?.organization?.name}}</p>\n    </div>\n        <form [formGroup]='addRuleForm'>\n        <div class=\"profileBox\">\n            \n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Exception type</mat-label>\n                <mat-select formControlName=\"exception_type\" (selectionChange)=\"updatetype()\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of exception\">{{item?.name}}</mat-option>\n                    \n                  </mat-select>\n                  \n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Percentage of Violation</mat-label>\n                <mat-select formControlName=\"percentage_of_violation\">\n                    <mat-option value=\"1\"> <0 - 05% exeeding limit longer than time </mat-option>\n                    <mat-option value=\"2\"> <05 - 10% exeeding limit longer than time</mat-option>\n                    <mat-option value=\"3\"> >10% exeeding limit longer than time </mat-option>\n                  </mat-select>\n            </mat-form-field>\n     \n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.time\" | translate}} (s)</mat-label>\n                <input matInput value=\"9\" formControlName=\"duration_of_violation\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.point\" | translate}}</mat-label>\n                <input matInput value=\"9\" formControlName=\"score\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\" *ngIf=\"showRange==false\">\n                <mat-label>{{\"rule.range\" | translate}} <span [innerHTML]=\"currentValue\"></span></mat-label>\n                <mat-select formControlName=\"road_type\" (selectionChange)=\"update()\" [disabled]=\"showRange\">\n                    <mat-option value=\"1\">0-30</mat-option> \n                    <mat-option value=\"2\">31-50</mat-option> \n                    <mat-option value=\"3\">51-80</mat-option> \n                    <mat-option value=\"4\">81-100</mat-option> \n                    <mat-option value=\"5\">>100</mat-option> \n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\"  *ngIf=\"showRange==true\">\n                <mat-label>Range<span [innerHTML]=\"currentValue\"></span> </mat-label>\n                <input matInput value=\"1\" formControlName=\"road_type\">\n                <!-- <mat-select formControlName=\"road_type\" >\n                    <mat-option value=\"1\">1</mat-option>\n                    <mat-option value=\"2\">2</mat-option>\n                    <mat-option value=\"3\">3</mat-option>\n                    <mat-option value=\"4\">4</mat-option>\n                    <mat-option value=\"5\">>5</mat-option>\n                </mat-select> -->\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.weather\" | translate}}</mat-label>\n                <mat-select formControlName=\"weather\">\n                    <mat-option value=\"Snow\">Snow</mat-option>\n                    <mat-option value=\"Cold\">Cold</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.roadFactor\" | translate}}</mat-label>\n                <mat-select formControlName=\"road_factor\" disabled>\n                    <mat-option value=\"City\">City</mat-option>\n                    <mat-option value=\"Outside City\">Outside City Road</mat-option>\n                    <mat-option value=\"Highway\">Highway</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld33\" appearance=\"outline\">\n                <mat-label>{{\"rule.vehCategory\" | translate}}</mat-label>\n                <mat-select formControlName=\"vehicle_category_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of vechilecategory\">{{item?.name}}</mat-option>\n             \n                  </mat-select>\n            </mat-form-field>\n     \n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} driving</mat-label>\n                <mat-select formControlName=\"day_night_driving\">\n                    <mat-option value=\"Day\">Day</mat-option>\n                    <mat-option value=\"Night\">Night</mat-option>\n                  </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>{{\"rule.dayNight\" | translate}} weightage</mat-label>\n                <input matInput value=\"9\" formControlName=\"day_night_score\">\n            </mat-form-field>\n            <!-- <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Organaisation</mat-label>\n                <mat-select formControlName=\"org_id\">\n                    <mat-option [value]=\"item?.id\" *ngFor=\"let item of organization\"> {{item?.name}} </mat-option>\n                    \n                </mat-select>\n               \n            </mat-form-field> -->\n            <!-- <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Created on</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\"  matInput >\n            </mat-form-field>\n            <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\"  matInput >\n            </mat-form-field> -->\n\n            <mat-form-field class=\"fields fileld33 margin-right\" appearance=\"outline\">\n                <mat-label>Created on</mat-label>\n                <input   matInput formControlName=\"created_on\" readonly>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33 \" appearance=\"outline\">\n                <mat-label>Status</mat-label>\n                <mat-select formControlName=\"is_active\">\n                    <mat-option value=\"true\">Active</mat-option>\n                    <mat-option value=\"false\">Inactive</mat-option>\n                    \n                  </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"fields fileld33 mr-0\" appearance=\"outline\">\n                <mat-label>Effective from</mat-label>\n                <input ngxDaterangepickerMd [singleDatePicker]=\"true\" [isInvalidDate]=\"isInvalidDate\" [autoApply]=\"true\" matInput formControlName=\"effective_from\" readonly>\n            </mat-form-field>\n        </div>\n        <ng-container class=\"py-3\" *ngIf=\"isloading\">\n            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n        </ng-container>\n    <div class=\"BtnBlock\">\n        <button class=\"btn btnSave\" (click)=\"submit()\">{{\"rule.save\" | translate}}</button>\n    </div>\n    </form>\n</div> ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\nimport { Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\n\n// table\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n@Component({\n  selector: 'app-rule-engine-dashboard',\n  templateUrl: './rule-engine-dashboard.component.html',\n  styleUrls: ['./rule-engine-dashboard.component.scss']\n})\nexport class RuleEngineDashboardComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  dataSource: any;\n  totalCount: number;\n  page: number = 1;\n  limit: number = 1000;\n  active = 1;\n  pageSizeOptions: number[] = [5, 10, 100, 1000];\n  isTripHistoryLoading = false;\n  displayedColumns: string[] = ['organization.name', 'percentage_of_violation_max', 'duration_of_violation', 'score', 'speed', 'road_factor', 'vehicle_category.name', 'day_night_driving', 'weather', 'exception_type', 'symbol'];\n  exception_type = \"\"\n  constructor(private _snackBar: MatSnackBar, private main: MainService, private route: Router, public localService: LocalService,private activeRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.limit = Number(this.localService.getItem(\"rulelimit\")) || 1000;\n    this.getRuleengineList()\n  }\n\n  pageChange(event) {\n    if(this.limit !== event.pageSize){\n      const queryParams: Params = { page: 1 };\n      this.route.navigate(\n        [], \n        {\n          \n          queryParams: queryParams, \n          queryParamsHandling: 'merge', // remove to replace all query params by provided\n        });\n      this.page = 1;\n    }\n    else{\n      const queryParams: Params = { page: event.pageIndex + 1 };\n      this.route.navigate(\n        [], \n        {\n          \n          queryParams: queryParams, \n          queryParamsHandling: 'merge', // remove to replace all query params by provided\n        });\n      this.page = event.pageIndex + 1;\n    }\n    this.limit = event.pageSize;\n    this.localService.setItem(\"rulelimit\", this.limit);\n    this.getRuleengineList();\n  }\n  exceptionType(type: string, num) {\n    this.exception_type = type;\n    this.active = num;\n    this.getRuleengineList();\n  }\n\n  getRuleengineList() {\n    this.activeRoute.queryParams\n    .subscribe(params => {\n      // const details:any = params.page;\n      this.page=params?.page || 1;\n    }\n  );\n    this.isTripHistoryLoading = true;\n    this.dataSource = [];\n    this.main.get(`rule-engine/list?page=${this.page}&limit=${this.limit}&exception_type=${this.exception_type}`).pipe().subscribe(res => {\n      if (res.data.rows) {\n        this.isTripHistoryLoading = false;\n        this.totalCount = res.data.count;\n        this.dataSource = res.data.rows;\n        this.setPage(this.page-1);\n      }\n    }), err => {\n      this.isTripHistoryLoading = false;\n    }\n  }\n  editRule(data) {\n    this.route.navigate([RouteConfig.editruleengine.url], { queryParams: { details: JSON.stringify(data) } });\n  }\n  resetStatus(ele, status) {\n    // console.log(id)\n    let data = {\n      id: ele.id,\n      is_active: status,\n      road_type_min: ele.road_type_min,\n      road_type_max: ele.road_type_max,\n      road_factor: ele.road_factor,\n      exception_type: ele.exception_type\n    }\n    this.main.put(`rule-engine/change-status`, data).pipe().subscribe(res => {\n      this.getRuleengineList();\n      this.openSnackBarmodal(res.message, \"status-rule\")\n\n    }), err => {\n\n    }\n  }\n\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: false, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n\n    });\n  }\n\n  checkUnit(data) {\n    if (data == 'speed') {\n      return \"km/hr\"\n    }\n    else if (data == 'breaking') {\n      return \"m/s\"\n    }\n    else if (data == 'cornering') {\n      return \"m/s\"\n    }\n    else if (data == 'acceleration') {\n      return \"m/s\"\n    }\n    else if (data == 'idling') {\n      return \"s\"\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.dataSource.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource = data;\n      return;\n    }\n\n    this.dataSource = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'organization.name':\n          return this.compare(a.organization.name, b.organization.name, isAsc);\n        case 'percentage_of_violation_max':\n          return this.compare(a.percentage_of_violation_max, b.percentage_of_violation_max, isAsc);\n        case 'duration_of_violation':\n          return this.compare(a.duration_of_violation, b.duration_of_violation, isAsc);\n        case 'score':\n          return this.compare(a.score, b.score, isAsc);\n        case 'road_factor':\n          return this.compare(a.road_factor, b.road_factor, isAsc);\n        case 'vehicle_category.name':\n          return this.compare(a.vehicle_category.name, b.vehicle_category.name, isAsc);\n        case 'day_night_driving':\n          return this.compare(a.day_night_driving, b.day_night_driving, isAsc);\n        case 'exception_type':\n          return this.compare(a.exception_type, b.exception_type, isAsc);\n        case 'weather':\n          return this.compare(a.weather, b.weather, isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n\n\n  compare(a: number | string, b: number | string, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  setPage(index: number) {\n    if(this.paginator)\n    this.paginator.pageIndex = index;\n  }\n}\n","<div class=\"mainFilter\">\n  <div class=\"filterHeader\">\n    {{\"sidebar.ruleEngineSetting\" | translate}}\n    <div>\n      <button class=\"btn btnFilterExport enable-click-event\"><img src=\"assets/images/export.svg\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"vehicleInfo\">\n  <h3 class=\"vehTitle\">{{\"sidebar.ruleEngineSetting\" | translate}}</h3>\n  <div class=\"ruleTab\">\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 1}\" (click)=\"exceptionType('',1)\">{{\"all\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 2}\" (click)=\"exceptionType('speed',2)\">{{\"rule.speeding\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 3}\" (click)=\"exceptionType('idling',3)\">{{\"rule.idling\" | translate}}</p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 4}\" (click)=\"exceptionType('acceleration',4)\">{{\"rule.safeAcc\" | translate}} </p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 5}\" (click)=\"exceptionType('breaking',5)\">{{\"rule.harshBraking\" | translate}} </p>\n    <p class=\"cursor\" [ngClass]=\"{'active': active == 6}\" (click)=\"exceptionType('cornering',6)\">{{\"rule.harshCorn\" | translate}} </p>\n  </div>\n\n\n  <div class=\"table-responsive\">\n    <table mat-table matSort (matSortChange)='sortData($event)'  matSortDisableClear [dataSource]=\"dataSource\" class=\"mat-elevation-z8 w-100 booking-table\"\n      *ngIf=\"!isTripHistoryLoading\">\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"organization.name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.group\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.organization?.name || element?.org_id}} </td>\n      </ng-container>\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"percentage_of_violation_max\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.triggerEvent\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{element?.percentage_of_violation_min}}-{{element?.percentage_of_violation_max || 'NA'}}% exce... </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"duration_of_violation\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.time\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.duration_of_violation || 'NA'}}s</td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.point\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.score || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Speed range  Column -->\n      <ng-container matColumnDef=\"speed\">\n        <th mat-header-cell *matHeaderCellDef>{{\"rule.range\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\"> <span *ngIf=\"element?.exception_type!='speed'\">{{element?.gforce_limit}}</span> <span *ngIf=\"element?.exception_type=='speed'\">{{element?.road_type_max ==1000 ? '>' : ''}}{{element?.road_type_min }}{{element?.road_type_max !=1000 ? '-': ''}}{{element?.road_type_max ==1000 ? '' : element?.road_type_max}} </span>&nbsp;<span>{{checkUnit(element?.exception_type)}}</span> <span *ngIf=\"element?.exception_type!='speed' && element?.exception_type!='idling'\"><sup>2</sup></span>  </td>\n      </ng-container>\n\n      <!-- Road factor Column -->\n      <ng-container matColumnDef=\"road_factor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.roadFactor\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\">{{element?.road_factor || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"vehicle_category.name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>{{\"rule.vehCategory\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.vehicle_category?.name || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"day_night_driving\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.dayNight\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.day_night_driving || 'NA'}} </td>\n      </ng-container>\n\n      <!-- Vehicle category Column -->\n      <ng-container matColumnDef=\"weather\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"rule.weather\" | translate}}</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element?.weather || 'NA'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"exception_type\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n          Exception Category\n        </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\">{{ element?.exception_type }}</td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"symbol\">\n        <th mat-header-cell *matHeaderCellDef> {{\"rule.actions\" | translate}} </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <!-- <span *ngIf=\"element?.is_active== true\" \n          (click)=\"resetStatus(element,false)\" class=\"date success cursor\">{{\"rule.markInactive\" | translate}}</span>\n        <span class=\"date danger cursor\" *ngIf=\"element?.is_active== false\" [ngClass]=\"{'activeFalse': element?.is_active== false}\" (click)=\"resetStatus(element,true)\">{{\"rule.markActive\" | translate}}</span> -->\n          <span class=\"edit cursor\" (click)=\"editRule(element)\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M17.5 18.3333H2.5C2.15833 18.3333 1.875 18.0499 1.875 17.7083C1.875 17.3666 2.15833 17.0833 2.5 17.0833H17.5C17.8417 17.0833 18.125 17.3666 18.125 17.7083C18.125 18.0499 17.8417 18.3333 17.5 18.3333Z\" fill=\"#604EFF\"/>\n              <path d=\"M15.8505 2.90005C14.2338 1.28338 12.6505 1.24172 10.9921 2.90005L9.9838 3.90838C9.90047 3.99172 9.86714 4.12505 9.90047 4.24172C10.5338 6.45005 12.3005 8.21672 14.5088 8.85005C14.5421 8.85838 14.5755 8.86672 14.6088 8.86672C14.7005 8.86672 14.7838 8.83338 14.8505 8.76672L15.8505 7.75838C16.6755 6.94172 17.0755 6.15005 17.0755 5.35005C17.0838 4.52505 16.6838 3.72505 15.8505 2.90005Z\" fill=\"#604EFF\"/>\n              <path d=\"M13.0079 9.60841C12.7663 9.49175 12.5329 9.37508 12.3079 9.24175C12.1246 9.13342 11.9496 9.01675 11.7746 8.89175C11.6329 8.80008 11.4663 8.66675 11.3079 8.53341C11.2913 8.52508 11.2329 8.47508 11.1663 8.40842C10.8913 8.17508 10.5829 7.87508 10.3079 7.54175C10.2829 7.52508 10.2413 7.46675 10.1829 7.39175C10.0996 7.29175 9.95795 7.12508 9.83295 6.93341C9.73295 6.80841 9.61628 6.62508 9.50795 6.44175C9.37461 6.21675 9.25795 5.99175 9.14128 5.75841V5.75841C8.98832 5.43063 8.5581 5.33326 8.30233 5.58903L3.61628 10.2751C3.50795 10.3834 3.40795 10.5917 3.38295 10.7334L2.93295 13.9251C2.84961 14.4917 3.00795 15.0251 3.35795 15.3834C3.65795 15.6751 4.07461 15.8334 4.52461 15.8334C4.62461 15.8334 4.72461 15.8251 4.82461 15.8084L8.02461 15.3584C8.17461 15.3334 8.38295 15.2334 8.48295 15.1251L13.1767 10.4313C13.4274 10.1806 13.3332 9.74936 13.0079 9.60841V9.60841Z\" fill=\"#604EFF\"/>\n              </svg>\n              \n          </span>\n\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <ng-container class=\"py-3\" *ngIf=\"isTripHistoryLoading\">\n      <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n    </ng-container>\n    <ng-container *ngIf=\"dataSource.length==0 && isTripHistoryLoading==false\">\n      <div class=\"d-flex justify-content-center no-data\">\n        <h2>No Data Found</h2>\n      </div>\n    </ng-container>\n    <mat-paginator  [length]=\"totalCount\" #paginator [pageSize]=\"limit\"\n      (page)='pageChange($event)' [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"pageSizeOptions\">\n    </mat-paginator>\n    \n  </div>\n  <div class=\"cursor d-flex justify-content-end\">\n    <div class=\"circlePlus\" [routerLink]=\"[ 'addruleengine' ]\">\n      <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2 13H24\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M13 24V2\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        \n      <!-- <img src=\"/assets/images/add-circle.png\" alt=\"\" > -->\n    </div>\n    \n  </div>\n</div>"],"sourceRoot":"webpack:///"}