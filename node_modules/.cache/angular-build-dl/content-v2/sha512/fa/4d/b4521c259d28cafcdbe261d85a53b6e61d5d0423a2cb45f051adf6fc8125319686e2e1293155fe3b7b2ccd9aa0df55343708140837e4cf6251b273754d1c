{"version":3,"sources":["webpack:///src/app/main/userprofile/change-password/confirmed.validator.ts","webpack:///src/app/main/userprofile/userprofile.module.ts","webpack:///src/app/main/userprofile/change-password/change-password.component.ts","webpack:///src/app/main/userprofile/change-password/change-password.component.html","webpack:///src/app/main/userprofile/color-picker/color-picker.component.ts","webpack:///src/app/main/userprofile/color-picker/color-picker.component.html","webpack:///src/app/main/userprofile/userprofile-routing.module.ts","webpack:///src/app/main/userprofile/manage-profile/manage-profile.component.html","webpack:///src/app/main/userprofile/manage-profile/manage-profile.component.ts"],"names":["ConfirmedValidator","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","confirmedValidator","value","setErrors","UserprofileModule","forRoot","forChild","extend","declarations","imports","ChangePasswordComponent","_snackBar","fb","service","router","eyeShow","eyeShow_pass","eyeShow_confirm","horizontalPosition","verticalPosition","createchangepasswordForm","changePasswordForm","group","current_password","required","password","confirm_password","validator","window","history","back","valid","post","pipe","subscribe","res","openSnackBar","message","navigate","profile","url","err","msg","openSnackBarmodal","panelClass","openFromComponent","data","image","duration","goToLastPage","submit","selector","templateUrl","styleUrls","ColorPickerComponent","local","edit","speedingcolorvalue","idilingcolorvalue","acccolorvalue","corneringcolorvalue","brakingcolorvalue","selectedColorPicker","getColors","col","JSON","parse","getItem","speed","idling","acceleration","cornering","breaking","e","$event","colors","slice","put","setItem","stringify","speedingColor","excepClick","closeColorPicker","idilingColor","accColor","cornenringColor","brakingColor","routes","path","component","pathMatch","changepassword","colorpicker","UserprofileRoutingModule","exports","ManageProfileComponent","route","uploadService","localService","api","countryCodeIso","show","countryCode","isTripHistoryLoading","isProfilePictureLoading","editProfile","fileLink","imageList","isuploadFile","fileImg","count","getProfile","createupdateProfileForm","updateform","firstName","lastName","language","profile_image","country_code","phone","email","role","organization_name","address","obj","selectedcountry","defObj","setCountry","noerror","numberinvalid","event","dialCode","patchValue","get","profiledetails","setTimeout","setNumber","trim","id","setImage","target","files","length","mimeType","type","selectedFiles","file","reader","FileReader","readAsDataURL","uploadimg","upload","then","Location","item","name","replace","split","Date","getTime","uploadfile","uploadImage","hasError","getNumber","telInputObject","onCountryChange"],"mappings":"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","file":"userprofile-userprofile-module-es5.js","sourcesContent":["import { FormGroup } from '@angular/forms';\n    \nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserprofileRoutingModule } from './userprofile-routing.module';\nimport { ManageProfileComponent } from './manage-profile/manage-profile.component';\nimport { MaterialModules } from 'src/app/config/material';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ColorPickerComponent } from './color-picker/color-picker.component';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\n\n@NgModule({\n  declarations: [ManageProfileComponent,ChangePasswordComponent,ColorPickerComponent],\n  imports: [\n    CommonModule,\n    UserprofileRoutingModule,\n    SharedModule,\n    MaterialModules,\n    Ng2TelInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxDaterangepickerMd.forRoot(),\n    TranslateModule.forChild({\n      extend: true\n   }),\n   ColorPickerModule\n  ]\n})\nexport class UserprofileModule {\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { MainService } from 'src/app/services/main.service';\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\nimport { ConfirmedValidator } from './confirmed.validator';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  eyeShow=false;\n  eyeShow_pass=false;\n  eyeShow_confirm=false;\n  changePasswordForm: FormGroup;\n  horizontalPosition: MatSnackBarHorizontalPosition = \"center\";\n  verticalPosition: MatSnackBarVerticalPosition = \"bottom\";\n  constructor(private _snackBar: MatSnackBar,private fb: FormBuilder,private service:MainService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.createchangepasswordForm();\n  }\n  createchangepasswordForm() {\n    this.changePasswordForm = this.fb.group({\n      current_password: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      confirm_password: ['', [Validators.required]]\n    }, { \n      validator: ConfirmedValidator('password', 'confirm_password')\n    }\n    )\n  }\n \n\n  goToLastPage() {\n    window.history.back();\n  }\n  submit(){\n    // console.log(this.changePasswordForm.valid);\n    if(this.changePasswordForm.valid){\n      this.service.post(`change-password`,this.changePasswordForm.value).pipe().subscribe(res => {\n        this.openSnackBar(res.message)\n        this.router.navigate([RouteConfig.profile.url]);\n      }, (err) => {\n        this.openSnackBar(err.message)\n      })\n    }\n  }\n  openSnackBar(msg) {\n    // console.log(\"aaa\");\n    \n    this.openSnackBarmodal(\n      msg,\n      \"change_password\"\n    );\n  }\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: true, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n  get f(){\n    return this.changePasswordForm.controls;\n  }\n}\n","<div class=\"titleWithBack \">\n    <span class=\"backBtnImg cursor\" (click)=\"goToLastPage()\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\">{{\"changepassword\" | translate}}</h4>\n</div>\n<div class=\"chPassBox\">\n    <h4 class=\"personalInfoTitle\">{{\"changepassword\" | translate}}</h4>\n    <form  [formGroup]='changePasswordForm'>\n        <div class=\"profileBox\">\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>{{\"OldPassword\" | translate}}</mat-label>\n                <input matInput type=\"password\"   [type]=\"eyeShow === true ? 'text' : 'password'\" formControlName='current_password'>\n                <mat-icon matSuffix (click)=\"eyeShow = !eyeShow\" *ngIf=\"!eyeShow\">\n                    <svg  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n                <mat-icon matSuffix (click)=\"eyeShow = !eyeShow\" *ngIf=\"eyeShow\">\n                    <svg class=\"fill\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>{{\"NewPassword\" | translate}}</mat-label>\n                <input matInput type=\"password\"  [type]=\"eyeShow_pass === true ? 'text' : 'password'\" formControlName='password'>\n                <mat-icon matSuffix (click)=\"eyeShow_pass = !eyeShow_pass\" *ngIf=\"!eyeShow_pass\">\n                    <svg  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n                <mat-icon matSuffix (click)=\"eyeShow_pass = !eyeShow_pass\" *ngIf=\"eyeShow_pass\">\n                    <svg class=\"fill\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n                <mat-label>{{\"ConfirmNewPassword\" | translate}}</mat-label>\n                <input matInput type=\"password\"  [type]=\"eyeShow_confirm === true ? 'text' : 'password'\" formControlName='confirm_password'>\n                \n                <mat-icon matSuffix (click)=\"eyeShow_confirm = !eyeShow_confirm\" *ngIf=\"!eyeShow_confirm\" >\n                    <svg  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n                <mat-icon matSuffix (click)=\"eyeShow_confirm = !eyeShow_confirm\" *ngIf=\"eyeShow_confirm\" >\n                    <svg class=\"fill\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\n                            fill=\"#FF7070\" />\n                    </svg>\n                </mat-icon>\n            </mat-form-field>\n            <div *ngIf=\"f.confirm_password.touched && f.confirm_password.invalid\" class=\"alert alert-danger\">\n                    \n                <div *ngIf=\"f.confirm_password.errors.confirmedValidator\">Password and Confirm Password must match.</div>\n            </div>\n            <div>\n                <button mat-button class=\"button-auth-profile w-100 \" (click)=\"submit()\">{{\"saveChange\" | translate}}<img class=\"ml-2\"\n                        src=\"assets/images/right-arrow.svg\"></button>\n            </div> \n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\n@Component({\n  selector: 'app-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss']\n})\nexport class ColorPickerComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"right\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n  constructor(private _snackBar: MatSnackBar,private service: MainService, private local:LocalService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getColors();\n  }\n  \n  edit=true;\n  speedingcolorvalue='';\n  idilingcolorvalue='';\n  acccolorvalue='';\n  corneringcolorvalue='';\n  brakingcolorvalue='';\n  selectedColorPicker: number = 6;\n\n  getColors(){\n   var col:any= JSON.parse(this.local.getItem('colors'));\n   \n   if(col){\n     this.speedingcolorvalue=col.speed;\n     this.idilingcolorvalue=col.idling;\n     this.acccolorvalue=col.acceleration;\n     this.brakingcolorvalue=col.cornering;\n     this.corneringcolorvalue=col.breaking;\n   }\n  }\n  speedingColor(e){\n    // console.log(e);\n    this.speedingcolorvalue=e;\n  }\n  idilingColor(e){\n    this.idilingcolorvalue=e;\n  }\n  accColor(e){\n    this.acccolorvalue=e;\n  }\n  cornenringColor(e){\n    this.corneringcolorvalue=e;\n  }\n  brakingColor(e){\n    this.brakingcolorvalue=e;\n  }\n\n  excepClick($event){\n    this.selectedColorPicker = $event;\n  }\n\n  closeColorPicker(){\n    this.selectedColorPicker = 6;\n  }\n\n  submit(){\n    let colors = {\n      'speed': this.speedingcolorvalue,\n      'idling': this.idilingcolorvalue,\n      'acceleration': this.acccolorvalue,\n      'cornering': this.corneringcolorvalue,\n      'breaking': this.brakingcolorvalue,\n    }\n\n    this.edit=!this.edit;\n    let data = {\n      \"color_code\": [\n        {\n        \"key\": \"Speeding\",\n        \"value\": this.speedingcolorvalue.slice(1)\n        },\n        {\n        \"key\": \"Idiling\",\n        \"value\": this.idilingcolorvalue.slice(1)\n        },\n        {\n        \"key\": \"Harsh Acceleration\",\n        \"value\": this.acccolorvalue.slice(1)\n        },\n        {\n        \"key\": \"Harsh Cornering\",\n        \"value\": this.corneringcolorvalue.slice(1)\n        },\n        {\n        \"key\": \"Harsh Braking\",\n        \"value\": this.brakingcolorvalue.slice(1)\n        }\n      ]\n    }\n    \n\n     this.service.put('profile/color-code',data).pipe().subscribe(res=>{\n        this.local.setItem('colors', JSON.stringify(colors))\n        this.openSnackBar(res.message)\n        // this.router.navigate([RouteConfig.dashboard.url]);\n     })\n  }\n\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: true, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n\n  openSnackBar(msg) {    \n    this.openSnackBarmodal(\n      msg,\n      \"change_exception_color\"\n    );\n  }\n}\n","<div class=\"titleWithBack\">\n  <h4 class=\"BackTitle\">{{\"harshEventColorSetting\" | translate}}</h4>\n</div>\n\n<div class=\"manageProfile\">\n  <div class=\"perInfoBox mb-20\">\n    <div class=\"d-flex\">\n      <h4 class=\"personalInfoTitle\">{{\"setHarshEventColor\" | translate}}</h4>\n      <div class=\"infoCircle\" triggers=\"click\" [autoClose]=\"true\" placement=\"top\" container=\"body\"\n        ngbTooltip=\"{{'iconSetharshevent' | translate}}\" #tooltip3=\"ngbTooltip\">\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M9 16.5C13.1325 16.5 16.5 13.1325 16.5 9C16.5 4.8675 13.1325 1.5 9 1.5C4.8675 1.5 1.5 4.8675 1.5 9C1.5 13.1325 4.8675 16.5 9 16.5ZM9.5625 12C9.5625 12.3075 9.3075 12.5625 9 12.5625C8.6925 12.5625 8.4375 12.3075 8.4375 12L8.4375 8.25C8.4375 7.9425 8.6925 7.6875 9 7.6875C9.3075 7.6875 9.5625 7.9425 9.5625 8.25L9.5625 12ZM8.31 5.715C8.3475 5.6175 8.4 5.5425 8.4675 5.4675C8.5425 5.4 8.625 5.3475 8.715 5.31C8.805 5.2725 8.9025 5.25 9 5.25C9.0975 5.25 9.195 5.2725 9.285 5.31C9.375 5.3475 9.4575 5.4 9.5325 5.4675C9.6 5.5425 9.6525 5.6175 9.69 5.715C9.7275 5.805 9.75 5.9025 9.75 6C9.75 6.0975 9.7275 6.195 9.69 6.285C9.6525 6.375 9.6 6.4575 9.5325 6.5325C9.4575 6.6 9.375 6.6525 9.285 6.69C9.105 6.765 8.895 6.765 8.715 6.69C8.625 6.6525 8.5425 6.6 8.4675 6.5325C8.4 6.4575 8.3475 6.375 8.31 6.285C8.2725 6.195 8.25 6.0975 8.25 6C8.25 5.9025 8.2725 5.805 8.31 5.715Z\"\n            fill=\"white\" />\n        </svg>\n      </div>\n    </div>\n\n    <div class=\"filterBody mb-0 p-0\">\n      <button (click)=\"edit = !edit\" *ngIf=\"edit\" class=\"filterBtn applyBtn\">\n        <svg width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M11.55 3.00002L4.70829 10.2417C4.44996 10.5167 4.19996 11.0584 4.14996 11.4334L3.84162 14.1334C3.73329 15.1084 4.43329 15.775 5.39996 15.6084L8.08329 15.15C8.45829 15.0834 8.98329 14.8084 9.24162 14.525L16.0833 7.28335C17.2666 6.03335 17.8 4.60835 15.9583 2.86668C14.125 1.14168 12.7333 1.75002 11.55 3.00002Z\"\n            stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          <path d=\"M10.4082 4.2085C10.7665 6.5085 12.6332 8.26683 14.9499 8.50016\" stroke=\"white\" stroke-width=\"1.5\"\n            stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          <path d=\"M3 18.3335H18\" stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" />\n        </svg>\n        {{\"edit\" | translate}}\n      </button>\n      <button (click)=\"submit()\" *ngIf=\"!edit\" class=\"filterBtn applyBtn\">\n        {{\"save\" | translate}}\n      </button>\n    </div>\n  </div>\n  <div class=\"exceptionName\" [ngClass]=\"{'active': selectedColorPicker==1}\">\n    <h4 class=\"exceptionTitle\">{{\"speeding\" | translate}}</h4>\n    <div class=\"color\">\n      <div class=\"color-picker\">\n        <input [(colorPicker)]=\"speedingcolorvalue\" [style.background]=\"speedingcolorvalue\" [cpOKButton]=\"true\"\n          [cpOKButtonText]=\"'Set Color'\" [cpSaveClickOutside]=\"false\" [cpOKButtonClass]=\"'setColor-button'\"\n          (colorPickerSelect)=\"speedingColor($event)\" [disabled]=\"edit\" (colorPickerOpen)=\"excepClick(1)\" (colorPickerClose)='closeColorPicker()'  readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"exceptionName\" [ngClass]=\"{'active': selectedColorPicker==2}\">\n    <h4 class=\"exceptionTitle\">{{\"idiling\" | translate}}</h4>\n    <div class=\"color\">\n      <div class=\"color-picker\">\n        <input [(colorPicker)]=\"idilingcolorvalue\" [style.background]=\"idilingcolorvalue\" [cpOKButton]=\"true\"\n          [cpOKButtonText]=\"'Set Color'\" [cpSaveClickOutside]=\"false\" [cpOKButtonClass]=\"'setColor-button'\"\n          (colorPickerSelect)=\"idilingColor($event)\" [disabled]=\"edit\" (colorPickerOpen)=\"excepClick(2)\" (colorPickerClose)='closeColorPicker()'  readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"exceptionName\" [ngClass]=\"{'active': selectedColorPicker==3}\">\n    <h4 class=\"exceptionTitle\">{{\"hardAcceleration\" | translate}}</h4>\n    <div class=\"color\">\n      <div class=\"color-picker\">\n        <input [(colorPicker)]=\"acccolorvalue\" [style.background]=\"acccolorvalue\" [cpOKButton]=\"true\"\n          [cpOKButtonText]=\"'Set Color'\" [cpSaveClickOutside]=\"false\" [cpPosition]=\"'top-right'\"\n          [cpOKButtonClass]=\"'setColor-button'\" (colorPickerSelect)=\"accColor($event)\" [disabled]=\"edit\" (colorPickerOpen)=\"excepClick(3)\" (colorPickerClose)='closeColorPicker()'  readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"exceptionName\" [ngClass]=\"{'active': selectedColorPicker==4}\">\n    <h4 class=\"exceptionTitle\">{{\"harshCorner\" | translate}}</h4>\n    <div class=\"color\">\n      <div class=\"color-picker\">\n        <input [(colorPicker)]=\"corneringcolorvalue\" [style.background]=\"corneringcolorvalue\" [cpOKButton]=\"true\"\n          [cpOKButtonText]=\"'Set Color'\" [cpSaveClickOutside]=\"false\" [cpOKButtonClass]=\"'setColor-button'\"\n          [cpPosition]=\"'top-right'\" (colorPickerSelect)=\"cornenringColor($event)\" [disabled]=\"edit\" (colorPickerOpen)=\"excepClick(4)\" (colorPickerClose)='closeColorPicker()'  readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"exceptionName\" [ngClass]=\"{'active': selectedColorPicker==5}\">\n    <h4 class=\"exceptionTitle\">{{\"hardBraking\" | translate}}</h4>\n    <div class=\"color\">\n      <div class=\"color-picker\">\n        <input [(colorPicker)]=\"brakingcolorvalue\" [style.background]=\"brakingcolorvalue\" [cpPosition]=\"'top-right'\"\n          [cpOKButton]=\"true\" [cpOKButtonText]=\"'Set Color'\" [cpSaveClickOutside]=\"false\"\n          [cpOKButtonClass]=\"'setColor-button'\" (colorPickerSelect)=\"brakingColor($event)\" [disabled]=\"edit\" (colorPickerOpen)=\"excepClick(5)\" (colorPickerClose)='closeColorPicker()'  readonly />\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { RouteConfig } from \"src/app/config/route-config\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\nimport { ColorPickerComponent } from \"./color-picker/color-picker.component\";\nimport { ManageProfileComponent } from \"./manage-profile/manage-profile.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ManageProfileComponent,\n    pathMatch: \"full\",\n  },\n  {\n    path: RouteConfig.changepassword.path,\n    component: ChangePasswordComponent,\n    pathMatch: \"full\",\n  },\n  {\n    path: RouteConfig.colorpicker.path,\n    component: ColorPickerComponent,\n    pathMatch: \"full\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserprofileRoutingModule {}\n","<div class=\"titleWithBack \" *ngIf=\"editProfile\">\n    <span class=\"backBtnImg cursor\" (click)=\"editProfile=!editProfile\"><img src=\"assets/images/backButton.png\"></span>\n    <h4 class=\"BackTitle\">{{\"editProfile\" | translate}}</h4>\n</div>\n<div class=\"titleWithBack\" *ngIf=\"!editProfile\">\n<h4 class=\"BackTitle\">{{\"profile\" | translate}} </h4>\n</div>\n\n<div class=\"manageProfile\">\n    <div class=\"profileTopSec commonPadding mb-20\">\n        <div class=\"profilePicName\">\n            <div class=\"profileImgBox\">\n                <img *ngIf=\"fileLink\" class=\"profileImg\" [src]=\"fileLink\">\n                <img *ngIf=\"!fileLink\" class=\"profileImg\" src=\"assets/images/profile.png\">\n                <label *ngIf=\"editProfile && !isProfilePictureLoading\" class=\"cam-img\"  for=\"imageUpload\"> <img class=\"camIcon\" src=\"assets/images/cam.svg\" alt=\"\"> </label>\n                <input id=\"imageUpload\" type=\"file\" class=\"d-none\" (change)=\"uploadImage($event)\" accept=\"image/*\">\n                <div>\n                    <div class=\"cam-img w-100 d-flex justify-content-center mb-5\" *ngIf=\"editProfile && isProfilePictureLoading\">\n                        <ng-container >\n                            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div class=\"userIdRole\">{{\"userID\" | translate}}: 7835496232</div>\n                <div class=\"userIdRole\">{{\"RoleAccess\" | translate}}: {{profiledetails?.role || 'Fleet Manager'}}</div>\n            </div>\n        </div>\n        <div class=\"filterBody\" *ngIf=\"!editProfile\">\n            <button class=\"filterBtn cancleBtn buttonSize\" (click)=\"routeChangePassword()\">{{\"changepassword\" | translate}}</button>\n            <button class=\"filterBtn applyBtn buttonSize\" (click)=\"editProfile=!editProfile\"> <svg width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M11.55 3.00002L4.70829 10.2417C4.44996 10.5167 4.19996 11.0584 4.14996 11.4334L3.84162 14.1334C3.73329 15.1084 4.43329 15.775 5.39996 15.6084L8.08329 15.15C8.45829 15.0834 8.98329 14.8084 9.24162 14.525L16.0833 7.28335C17.2666 6.03335 17.8 4.60835 15.9583 2.86668C14.125 1.14168 12.7333 1.75002 11.55 3.00002Z\"\n                        stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" />\n                    <path d=\"M10.4082 4.2085C10.7665 6.5085 12.6332 8.26683 14.9499 8.50016\" stroke=\"white\"\n                        stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M3 18.3335H18\" stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                {{\"editProfile\" | translate}}</button>\n        </div>\n        <div class=\"filterBody\" *ngIf=\"editProfile\">\n            <button class=\"filterBtn applyBtn\" (click)=\"updateProfile()\">\n                {{\"rule.save\" | translate}}</button>\n        </div>\n    </div>\n\n    <!-- <div class=\"profileImgBox\">\n        <img class=\"profileImg\" [src]=\"fileLink\">\n        <div class=\"cam-img\">\n            <label class=\"cursor\"  for=\"image\"><img class=\"camIcon\" src=\"assets/images/cam.svg\"></label>\n            <input id=\"image\" type=\"file\" class=\"d-none\" accept=\"image/*\" (change)=\"uploadImage($event)\">\n        </div>\n    </div> -->\n    <form class=\"example-form\" [formGroup]='updateform'>\n        <div class=\"perInfoBox commonPadding\">\n            <h4 class=\"personalInfoTitle mb-0\">{{\"PersonalInformation\" | translate}}</h4>\n        </div>\n\n        <div class=\"profileBox\">\n\n            <mat-form-field class=\"fields\" appearance=\"outline\">\n\n                <mat-label>{{\"firstName\" | translate}} </mat-label>\n                <input class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"\" formControlName='firstName'\n                 disabled   readonly>\n            </mat-form-field>\n            <mat-form-field class=\"fields\" appearance=\"outline\">\n\n                <mat-label> {{\"lastName\" | translate}}</mat-label>\n                <input class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"\" formControlName='lastName' readonly>\n            </mat-form-field>\n            <mat-form-field class=\"fields\" appearance=\"outline\">\n\n                <mat-label class=\"pointer\">{{\"email\" | translate}}</mat-label>\n                <input class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"\" formControlName='email' readonly>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"fields\">\n                <div class=\"d-inline country-label\"></div>\n                <input  matInput type=\"tel\" ng2TelInput numbersOnly\n                    [ng2TelInputOptions]=\"{initialCountry: countryCodeIso,separateDialCode: 'true'}\"\n                    (hasError)=\"hasError($event)\" (ng2TelOutput)=\"getNumber($event)\"\n                    (intlTelInputObject)=\"telInputObject($event,countryCodeIso)\"\n                    (countryChange)=\"onCountryChange($event)\" class=\"country-flag\" formControlName=\"phone\" [ngClass]=\"{'pointer': !editProfile, 'disabled-input':!editProfile }\"\n                    minlength=\"10\" [readonly]=\"!editProfile\" />\n                <!-- <mat-error *ngIf=\"submitted && f.phoneNumber.errors\" class=\"error\">\n            <div *ngIf=\"f.phoneNumber.errors.required\">{{ getErrorMobile() }}</div>\n        </mat-error> -->\n            </mat-form-field>\n\n            <!-- <mat-form-field class=\"fields\" appearance=\"outline\">\n                <mat-label>{{\"language\" | translate}}</mat-label>\n                <mat-select [disableOptionCentering]=\"true\" panelClass=\"customSelect\" placeholder=\"Choose facility\" formControlName='language'>\n                    <mat-option value=\"uk\">English</mat-option>\n                    <mat-option value=\"nl\">Netherlands</mat-option>\n                    <mat-option value=\"fr\">French</mat-option>\n                    <mat-option value=\"de\">German</mat-option>\n                    \n                </mat-select>\n            </mat-form-field> -->\n\n        </div>\n        <div class=\"perInfoBox commonPadding\">\n            <h4 class=\"personalInfoTitle mb-0\">{{\"CompanyInformation\" | translate}}</h4>\n        </div>\n        <div class=\"profileBox\">\n\n            <mat-form-field class=\"fields\" appearance=\"outline\">\n\n                <mat-label>{{\"CompanyName\" | translate}}</mat-label>\n                <input class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"{{'CompanyName' | translate}}\" \n                    readonly>\n            </mat-form-field>\n            <mat-form-field class=\"fields\" appearance=\"outline\">\n\n                <mat-label> {{\"Designation\" | translate}}</mat-label>\n                <input class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"\" value=\"Designation\" formControlName=\"role\" readonly>\n            </mat-form-field>\n            <mat-form-field class=\"w-100\" appearance=\"outline\">\n\n                <mat-label class=\"pointer\">{{\"Companyaddress\" | translate}}</mat-label>\n                <textarea class=\"pointer disabled-input\" noSpaces matInput type=\"text\" placeholder=\"{{'Companyaddress' | translate}}\"\n                     readonly></textarea>\n            </mat-form-field>\n\n\n            <!-- <mat-form-field class=\"fields\" appearance=\"outline\">\n                <mat-label>{{\"language\" | translate}}</mat-label>\n                <mat-select [disableOptionCentering]=\"true\" panelClass=\"customSelect\" placeholder=\"Choose facility\" formControlName='language'>\n                    <mat-option value=\"uk\">English</mat-option>\n                    <mat-option value=\"nl\">Netherlands</mat-option>\n                    <mat-option value=\"fr\">French</mat-option>\n                    <mat-option value=\"de\">German</mat-option>\n                    \n                </mat-select>\n            </mat-form-field> -->\n\n        </div>\n        <!-- <ng-container class=\"py-3\" *ngIf=\"isTripHistoryLoading\">\n            <mat-spinner style=\"margin: 0 auto;\" [diameter]='50'></mat-spinner>\n        </ng-container> -->\n        <!-- <div>\n            <button mat-button class=\"button-auth w-100 mb-28\" (click)=\"updateProfile()\">{{\"saveChange\" | translate}}<img\n                    src=\"assets/images/right-arrow.svg\"></button>\n        </div> -->\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'src/app/config/route-config';\nimport { UploadFileService } from 'src/app/services/image-upload.service';\nimport { LocalService } from 'src/app/services/local.service';\nimport { MainService } from 'src/app/services/main.service';\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\n\nexport interface IFileNameS3 {\n  Bucket: string;\n  Key: string;\n  Location: string;\n  key: string;\n}\n@Component({\n  selector: 'app-manage-profile',\n  templateUrl: './manage-profile.component.html',\n  styleUrls: ['./manage-profile.component.scss']\n})\n\n\nexport class ManageProfileComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  public countryCodeIso = 'nl';\n  profiledetails: any;\n  updateform: FormGroup;\n  show = false;\n  numberinvalid: boolean;\n  public countryCode: string = '31';\n  isTripHistoryLoading = false;\n  isProfilePictureLoading = false;\n  editProfile=false;\n  // image upload\n  fileLink: any = '';\n  imageList = [];\n  selectedFiles: FileList;\n  isuploadFile = false;\n  fileImg = '';\n  count = 0;\n  constructor(private route:Router,private uploadService: UploadFileService,private localService: LocalService, private api: MainService, private fb: FormBuilder, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.getProfile();\n    this.createupdateProfileForm();\n  }\n\n  createupdateProfileForm() {\n    this.updateform = this.fb.group({\n      firstName: [''],\n      lastName: [''],\n      language: [''],\n      profile_image: [''],\n      country_code: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: [''],\n      role:[''],\n      organization_name:[''],\n      address:['']\n    })\n  }\n  get f() {\n    return this.updateform.controls;\n  }\n\n  defObj;\n  telInputObject(obj, selectedcountry) {\n    // console.log(obj, selectedcountry)\n    this.defObj = obj;\n    this.setCountry(selectedcountry);\n\n    // console.log(this.defObj)\n  }\n  setCountry(selectedcountry) {\n    this.defObj.setCountry(selectedcountry);\n\n  }\n\n  getNumber(obj) {\n    // console.log(obj);\n  }\n  hasError(noerror) {\n    if (noerror == false) {\n      this.numberinvalid = true;\n    } else {\n      this.numberinvalid = false;\n    }\n  }\n\n  onCountryChange(event) {\n    this.countryCode = event.dialCode;\n    this.updateform.patchValue({\n      country_code: this.countryCode\n    })\n    // console.log(this.updateform.value)\n    // this.editUserForm.patchValue({countryCodeIso:event.iso2})\n    // this.editUserForm.patchValue({countryCode: this.countryCode})\n  }\n  getProfile() {\n    this.isTripHistoryLoading = true;\n    this.api.get('profile').pipe().subscribe(res => {\n\n      // console.log(res)\n      this.profiledetails = res.data;\n      if (this.profiledetails.phone) {\n        setTimeout(() => {\n          this.defObj.setNumber(\"+\" + this.profiledetails.country_code + this.profiledetails.phone);\n        }, 500)\n      }\n      this.fileLink = this.profiledetails.profile_image;\n      this.updateform.patchValue({\n        firstName: this.profiledetails.firstName,\n        lastName: this.profiledetails.lastName,\n        language: this.profiledetails?.language?.trim(),\n        profile_image: this.profiledetails.profile_image,\n        country_code: this.profiledetails.country_code || this.countryCode,\n        phone: this.profiledetails?.phone?.trim(),\n        email: this.profiledetails.email || '',\n        role: this.profiledetails.role || '',\n        organization_name:this.profiledetails.organization_name || '',\n        address:this.profiledetails.address || ''\n\n\n      })\n      this.countryCodeIso = this.updateform.value\n      // console.log(this.updateform.value,this.updateform.value.country_code);\n      this.countryCodeIso = 'gb'\n      this.isTripHistoryLoading = false;\n    }), err => {\n\n    }\n  }\n  updateProfile() {\n    \n    // console.log(this.updateform.valid);\n    \n    if (this.updateform.valid) {\n      \n      const data = {\n        firstName: this.profiledetails.firstName,\n        lastName: this.updateform.value.lastName || ' ',\n        // language: this.updateform.value.language,\n        profile_image: this.updateform.value.profile_image,\n        country_code: this.updateform.value.country_code,\n        phone: this.updateform.value.phone,\n      }\n      if(data.profile_image==null){\n        delete data.profile_image\n      }\n      this.api.put(`profile/${this.profiledetails.id}`, data).pipe().subscribe(res => {\n        this.editProfile=!this.editProfile;\n        this.isTripHistoryLoading = true;\n        this.localService.setItem(\"profileImage\",this.updateform.value.profile_image)\n        this.localService.setImage();\n        this.show = true;\n        this.show = false;\n        this.openSnackBarmodal('Profile updated successfully.', 'update_profile')\n        this.getProfile();\n\n        // setTimeout(() => {\n\n        // }, 2000);\n        // console.log(res)\n      })\n    }\n  }\n  openSnackBarmodal(message, panelClass: string) {\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      data: { image: false, message: message },\n      panelClass: panelClass,\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n\n    });\n  }\n\n  uploadImage(event) {\n    // console.log(event)\n\n    if (event.target.files.length) {\n      const mimeType = event.target.files[0].type;\n      this.selectedFiles = event.target.files;\n      if (event.target.files && event.target.files[0]) {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        this.isuploadFile = true;\n        // reader.onload = e => this.fileLink = reader.result;\n        reader.readAsDataURL(file);\n      }\n      this.isProfilePictureLoading=true;\n      this.uploadimg();\n    }\n\n  }\n  uploadimg() {\n    if (this.isuploadFile === true && this.selectedFiles) {\n      this.upload().then(res => {\n        this.fileLink = res.Location;\n        this.updateform.patchValue({\n          profile_image: res.Location\n        })\n        this.isProfilePictureLoading=false;\n        // this.imageList.push(this.fileLink)\n      });\n    }\n  }\n\n  async upload() {\n    this.count += 1;\n    this.fileImg = '';\n    const file = this.selectedFiles.item(0);\n    this.fileImg = file.name.replace(/ /g, '-');\n    this.fileImg = this.fileImg.split('.')[0] + '-' + new Date().getTime() + '.' + this.fileImg.split('.')[1];\n    const res = await this.uploadService.uploadfile(file, this.fileImg) as IFileNameS3;\n    return res;\n\n  }\n  goToLastPage() {\n    window.history.back();\n  }\n  routeChangePassword(){\n    this.route.navigate([RouteConfig.changepassword.url])\n  }\n}\n"]}