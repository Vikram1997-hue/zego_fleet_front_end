(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-shimmer-loading', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = global || self, factory(global['ngx-shimmer-loading'] = {}, global.ng.core, global.ng.common));
}(this, (function (exports, core, common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngx-shimmer-loading.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxShimmerLoadingComponent = /** @class */ (function () {
        function NgxShimmerLoadingComponent() {
            this.class = 'shimmer-loading';
            this.width = '80%';
            this.height = '12px';
            this.shape = 'rect';
            this.borderRadius = '5px';
            this.direction = 'ltr';
        }
        /**
         * @return {?}
         */
        NgxShimmerLoadingComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerHeight", {
            get: /**
             * @return {?}
             */
            function () {
                switch (this.shape) {
                    case 'circle':
                        return this.width;
                    case 'square':
                        return this.width;
                    case 'rect':
                        return this.height;
                    default:
                        return this.height;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerBorderRadius", {
            get: /**
             * @return {?}
             */
            function () {
                return this.shape === 'circle' ? '50%' : this.borderRadius;
            },
            enumerable: true,
            configurable: true
        });
        NgxShimmerLoadingComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'ngx-shimmer-loading',
                        template: "<div\r\n  class=\"ngx-shimmer\"\r\n  [ngStyle]=\"{\r\n    width: width,\r\n    height: shimmerHeight,\r\n    borderRadius: shimmerBorderRadius\r\n  }\"\r\n  [ngClass]=\"{ rtl: direction === 'rtl' }\"\r\n></div>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        styles: [":host{display:block;line-height:1.75}.ngx-shimmer{display:inline-block;width:100%;height:12px;background-color:#f6f7f8;background-image:linear-gradient(to right,#f6f7f8 0,#edeef1 20%,#f6f7f8 40%,#f6f7f8 100%);background-position:0 0;background-repeat:no-repeat;background-size:1000px 1000px;-webkit-animation:1s linear infinite forwards shimmerEffect;animation:1s linear infinite forwards shimmerEffect}.ngx-shimmer.rtl{-webkit-animation:1s linear infinite forwards shimmerEffectRTL;animation:1s linear infinite forwards shimmerEffectRTL}@-webkit-keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@-webkit-keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}@keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}"]
                    }] }
        ];
        /** @nocollapse */
        NgxShimmerLoadingComponent.ctorParameters = function () { return []; };
        NgxShimmerLoadingComponent.propDecorators = {
            class: [{ type: core.HostBinding, args: ['class',] }],
            width: [{ type: core.Input }],
            height: [{ type: core.Input }],
            shape: [{ type: core.Input }],
            borderRadius: [{ type: core.Input }],
            direction: [{ type: core.Input }]
        };
        return NgxShimmerLoadingComponent;
    }());
    if (false) {
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.class;
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.width;
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.height;
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.shape;
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.borderRadius;
        /** @type {?} */
        NgxShimmerLoadingComponent.prototype.direction;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngx-shimmer-loading.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxShimmerLoadingModule = /** @class */ (function () {
        function NgxShimmerLoadingModule() {
        }
        NgxShimmerLoadingModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NgxShimmerLoadingComponent],
                        imports: [common.CommonModule],
                        exports: [NgxShimmerLoadingComponent]
                    },] }
        ];
        return NgxShimmerLoadingModule;
    }());

    exports.NgxShimmerLoadingModule = NgxShimmerLoadingModule;
    exports.Éµa = NgxShimmerLoadingComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-shimmer-loading.umd.js.map
