import { Component, ViewEncapsulation, HostBinding, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-shimmer-loading.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = function (a0, a1, a2) { return { width: a0, height: a1, borderRadius: a2 }; };
const _c1 = function (a0) { return { rtl: a0 }; };
class NgxShimmerLoadingComponent {
    constructor() {
        this.class = 'shimmer-loading';
        this.width = '80%';
        this.height = '12px';
        this.shape = 'rect';
        this.borderRadius = '5px';
        this.direction = 'ltr';
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    get shimmerHeight() {
        switch (this.shape) {
            case 'circle':
                return this.width;
            case 'square':
                return this.width;
            case 'rect':
                return this.height;
            default:
                return this.height;
        }
    }
    /**
     * @return {?}
     */
    get shimmerBorderRadius() {
        return this.shape === 'circle' ? '50%' : this.borderRadius;
    }
}
NgxShimmerLoadingComponent.ɵfac = function NgxShimmerLoadingComponent_Factory(t) { return new (t || NgxShimmerLoadingComponent)(); };
NgxShimmerLoadingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxShimmerLoadingComponent, selectors: [["ngx-shimmer-loading"]], hostVars: 2, hostBindings: function NgxShimmerLoadingComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.class);
    } }, inputs: { width: "width", height: "height", shape: "shape", borderRadius: "borderRadius", direction: "direction" }, decls: 1, vars: 8, consts: [[1, "ngx-shimmer", 3, "ngStyle", "ngClass"]], template: function NgxShimmerLoadingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction3(2, _c0, ctx.width, ctx.shimmerHeight, ctx.shimmerBorderRadius))("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c1, ctx.direction === "rtl"));
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass], styles: [":host{display:block;line-height:1.75}.ngx-shimmer{display:inline-block;width:100%;height:12px;background-color:#f6f7f8;background-image:linear-gradient(to right,#f6f7f8 0,#edeef1 20%,#f6f7f8 40%,#f6f7f8 100%);background-position:0 0;background-repeat:no-repeat;background-size:1000px 1000px;-webkit-animation:1s linear infinite forwards shimmerEffect;animation:1s linear infinite forwards shimmerEffect}.ngx-shimmer.rtl{-webkit-animation:1s linear infinite forwards shimmerEffectRTL;animation:1s linear infinite forwards shimmerEffectRTL}@-webkit-keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@-webkit-keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}@keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}"], encapsulation: 2 });
/** @nocollapse */
NgxShimmerLoadingComponent.ctorParameters = () => [];
NgxShimmerLoadingComponent.propDecorators = {
    class: [{ type: HostBinding, args: ['class',] }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    shape: [{ type: Input }],
    borderRadius: [{ type: Input }],
    direction: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxShimmerLoadingComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-shimmer-loading',
                template: "<div\r\n  class=\"ngx-shimmer\"\r\n  [ngStyle]=\"{\r\n    width: width,\r\n    height: shimmerHeight,\r\n    borderRadius: shimmerBorderRadius\r\n  }\"\r\n  [ngClass]=\"{ rtl: direction === 'rtl' }\"\r\n></div>\r\n",
                encapsulation: ViewEncapsulation.None,
                styles: [":host{display:block;line-height:1.75}.ngx-shimmer{display:inline-block;width:100%;height:12px;background-color:#f6f7f8;background-image:linear-gradient(to right,#f6f7f8 0,#edeef1 20%,#f6f7f8 40%,#f6f7f8 100%);background-position:0 0;background-repeat:no-repeat;background-size:1000px 1000px;-webkit-animation:1s linear infinite forwards shimmerEffect;animation:1s linear infinite forwards shimmerEffect}.ngx-shimmer.rtl{-webkit-animation:1s linear infinite forwards shimmerEffectRTL;animation:1s linear infinite forwards shimmerEffectRTL}@-webkit-keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@-webkit-keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}@keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}"]
            }]
    }], function () { return []; }, { class: [{
            type: HostBinding,
            args: ['class']
        }], width: [{
            type: Input
        }], height: [{
            type: Input
        }], shape: [{
            type: Input
        }], borderRadius: [{
            type: Input
        }], direction: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.class;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.width;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.height;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.shape;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.borderRadius;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.direction;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-shimmer-loading.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxShimmerLoadingModule {
}
NgxShimmerLoadingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxShimmerLoadingModule });
NgxShimmerLoadingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxShimmerLoadingModule_Factory(t) { return new (t || NgxShimmerLoadingModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxShimmerLoadingModule, { declarations: function () { return [NgxShimmerLoadingComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxShimmerLoadingComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxShimmerLoadingModule, [{
        type: NgModule,
        args: [{
                declarations: [NgxShimmerLoadingComponent],
                imports: [CommonModule],
                exports: [NgxShimmerLoadingComponent]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ngx-shimmer-loading.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxShimmerLoadingModule, NgxShimmerLoadingComponent as ɵa };

//# sourceMappingURL=ngx-shimmer-loading.js.map