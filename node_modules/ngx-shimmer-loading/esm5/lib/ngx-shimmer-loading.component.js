/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-shimmer-loading.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation, HostBinding } from '@angular/core';
var NgxShimmerLoadingComponent = /** @class */ (function () {
    function NgxShimmerLoadingComponent() {
        this.class = 'shimmer-loading';
        this.width = '80%';
        this.height = '12px';
        this.shape = 'rect';
        this.borderRadius = '5px';
        this.direction = 'ltr';
    }
    /**
     * @return {?}
     */
    NgxShimmerLoadingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerHeight", {
        get: /**
         * @return {?}
         */
        function () {
            switch (this.shape) {
                case 'circle':
                    return this.width;
                case 'square':
                    return this.width;
                case 'rect':
                    return this.height;
                default:
                    return this.height;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerBorderRadius", {
        get: /**
         * @return {?}
         */
        function () {
            return this.shape === 'circle' ? '50%' : this.borderRadius;
        },
        enumerable: true,
        configurable: true
    });
    NgxShimmerLoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-shimmer-loading',
                    template: "<div\r\n  class=\"ngx-shimmer\"\r\n  [ngStyle]=\"{\r\n    width: width,\r\n    height: shimmerHeight,\r\n    borderRadius: shimmerBorderRadius\r\n  }\"\r\n  [ngClass]=\"{ rtl: direction === 'rtl' }\"\r\n></div>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [":host{display:block;line-height:1.75}.ngx-shimmer{display:inline-block;width:100%;height:12px;background-color:#f6f7f8;background-image:linear-gradient(to right,#f6f7f8 0,#edeef1 20%,#f6f7f8 40%,#f6f7f8 100%);background-position:0 0;background-repeat:no-repeat;background-size:1000px 1000px;-webkit-animation:1s linear infinite forwards shimmerEffect;animation:1s linear infinite forwards shimmerEffect}.ngx-shimmer.rtl{-webkit-animation:1s linear infinite forwards shimmerEffectRTL;animation:1s linear infinite forwards shimmerEffectRTL}@-webkit-keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@-webkit-keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}@keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}"]
                }] }
    ];
    /** @nocollapse */
    NgxShimmerLoadingComponent.ctorParameters = function () { return []; };
    NgxShimmerLoadingComponent.propDecorators = {
        class: [{ type: HostBinding, args: ['class',] }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        shape: [{ type: Input }],
        borderRadius: [{ type: Input }],
        direction: [{ type: Input }]
    };
    return NgxShimmerLoadingComponent;
}());
export { NgxShimmerLoadingComponent };
if (false) {
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.class;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.width;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.height;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.shape;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.borderRadius;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.direction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNoaW1tZXItbG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc2hpbW1lci1sb2FkaW5nLyIsInNvdXJjZXMiOlsibGliL25neC1zaGltbWVyLWxvYWRpbmcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpGO0lBZ0JFO1FBUHNCLFVBQUssR0FBRyxpQkFBaUIsQ0FBQztRQUV2QyxVQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2QsV0FBTSxHQUFHLE1BQU0sQ0FBQztRQUNoQixVQUFLLEdBQWlDLE1BQU0sQ0FBQztRQUM3QyxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUNyQixjQUFTLEdBQWtCLEtBQUssQ0FBQztJQUMzQixDQUFDOzs7O0lBQ2hCLDZDQUFROzs7SUFBUixjQUFZLENBQUM7SUFDYixzQkFBSSxxREFBYTs7OztRQUFqQjtZQUNFLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDbEIsS0FBSyxRQUFRO29CQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDcEIsS0FBSyxRQUFRO29CQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDcEIsS0FBSyxNQUFNO29CQUNULE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDckI7b0JBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO2FBQ3RCO1FBQ0gsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSwyREFBbUI7Ozs7UUFBdkI7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDN0QsQ0FBQzs7O09BQUE7O2dCQWpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0Isa09BQW1EO29CQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3RDOzs7Ozt3QkFJRSxXQUFXLFNBQUMsT0FBTzt3QkFFbkIsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7K0JBQ0wsS0FBSzs0QkFDTCxLQUFLOztJQW1CUixpQ0FBQztDQUFBLEFBbENELElBa0NDO1NBNUJZLDBCQUEwQjs7O0lBR3JDLDJDQUFnRDs7SUFFaEQsMkNBQXVCOztJQUN2Qiw0Q0FBeUI7O0lBQ3pCLDJDQUFzRDs7SUFDdEQsa0RBQThCOztJQUM5QiwrQ0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduZ3gtc2hpbW1lci1sb2FkaW5nJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbmd4LXNoaW1tZXItbG9hZGluZy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbmd4LXNoaW1tZXItbG9hZGluZy5jb21wb25lbnQuc2NzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIE5neFNoaW1tZXJMb2FkaW5nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKSBjbGFzcyA9ICdzaGltbWVyLWxvYWRpbmcnO1xyXG5cclxuICBASW5wdXQoKSB3aWR0aCA9ICc4MCUnO1xyXG4gIEBJbnB1dCgpIGhlaWdodCA9ICcxMnB4JztcclxuICBASW5wdXQoKSBzaGFwZTogJ2NpcmNsZScgfCAnc3F1YXJlJyB8ICdyZWN0JyA9ICdyZWN0JztcclxuICBASW5wdXQoKSBib3JkZXJSYWRpdXMgPSAnNXB4JztcclxuICBASW5wdXQoKSBkaXJlY3Rpb246ICdsdHInIHwgJ3J0bCcgPSAnbHRyJztcclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcbiAgbmdPbkluaXQoKSB7fVxyXG4gIGdldCBzaGltbWVySGVpZ2h0KCk6IHN0cmluZyB7XHJcbiAgICBzd2l0Y2ggKHRoaXMuc2hhcGUpIHtcclxuICAgICAgY2FzZSAnY2lyY2xlJzpcclxuICAgICAgICByZXR1cm4gdGhpcy53aWR0aDtcclxuICAgICAgY2FzZSAnc3F1YXJlJzpcclxuICAgICAgICByZXR1cm4gdGhpcy53aWR0aDtcclxuICAgICAgY2FzZSAncmVjdCc6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0O1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiB0aGlzLmhlaWdodDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBzaGltbWVyQm9yZGVyUmFkaXVzKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5zaGFwZSA9PT0gJ2NpcmNsZScgPyAnNTAlJyA6IHRoaXMuYm9yZGVyUmFkaXVzO1xyXG4gIH1cclxufVxyXG4iXX0=