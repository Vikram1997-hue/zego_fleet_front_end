import { Component, ViewEncapsulation, HostBinding, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-shimmer-loading.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxShimmerLoadingComponent = /** @class */ (function () {
    function NgxShimmerLoadingComponent() {
        this.class = 'shimmer-loading';
        this.width = '80%';
        this.height = '12px';
        this.shape = 'rect';
        this.borderRadius = '5px';
        this.direction = 'ltr';
    }
    /**
     * @return {?}
     */
    NgxShimmerLoadingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerHeight", {
        get: /**
         * @return {?}
         */
        function () {
            switch (this.shape) {
                case 'circle':
                    return this.width;
                case 'square':
                    return this.width;
                case 'rect':
                    return this.height;
                default:
                    return this.height;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxShimmerLoadingComponent.prototype, "shimmerBorderRadius", {
        get: /**
         * @return {?}
         */
        function () {
            return this.shape === 'circle' ? '50%' : this.borderRadius;
        },
        enumerable: true,
        configurable: true
    });
    NgxShimmerLoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-shimmer-loading',
                    template: "<div\r\n  class=\"ngx-shimmer\"\r\n  [ngStyle]=\"{\r\n    width: width,\r\n    height: shimmerHeight,\r\n    borderRadius: shimmerBorderRadius\r\n  }\"\r\n  [ngClass]=\"{ rtl: direction === 'rtl' }\"\r\n></div>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [":host{display:block;line-height:1.75}.ngx-shimmer{display:inline-block;width:100%;height:12px;background-color:#f6f7f8;background-image:linear-gradient(to right,#f6f7f8 0,#edeef1 20%,#f6f7f8 40%,#f6f7f8 100%);background-position:0 0;background-repeat:no-repeat;background-size:1000px 1000px;-webkit-animation:1s linear infinite forwards shimmerEffect;animation:1s linear infinite forwards shimmerEffect}.ngx-shimmer.rtl{-webkit-animation:1s linear infinite forwards shimmerEffectRTL;animation:1s linear infinite forwards shimmerEffectRTL}@-webkit-keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@keyframes shimmerEffect{0%{background-position:-1000px 0}100%{background-position:1000px 0}}@-webkit-keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}@keyframes shimmerEffectRTL{0%{background-position:1000px 0}100%{background-position:-1000px 0}}"]
                }] }
    ];
    /** @nocollapse */
    NgxShimmerLoadingComponent.ctorParameters = function () { return []; };
    NgxShimmerLoadingComponent.propDecorators = {
        class: [{ type: HostBinding, args: ['class',] }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        shape: [{ type: Input }],
        borderRadius: [{ type: Input }],
        direction: [{ type: Input }]
    };
    return NgxShimmerLoadingComponent;
}());
if (false) {
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.class;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.width;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.height;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.shape;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.borderRadius;
    /** @type {?} */
    NgxShimmerLoadingComponent.prototype.direction;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-shimmer-loading.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxShimmerLoadingModule = /** @class */ (function () {
    function NgxShimmerLoadingModule() {
    }
    NgxShimmerLoadingModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NgxShimmerLoadingComponent],
                    imports: [CommonModule],
                    exports: [NgxShimmerLoadingComponent]
                },] }
    ];
    return NgxShimmerLoadingModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ngx-shimmer-loading.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxShimmerLoadingModule, NgxShimmerLoadingComponent as Éµa };
//# sourceMappingURL=ngx-shimmer-loading.js.map
