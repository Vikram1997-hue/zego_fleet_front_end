{"version":3,"sources":["./src/app/main/ruleEngine/vehicle-type/vehicle-type.module.ts","./src/app/main/ruleEngine/vehicle-type/vehicle-type-setting/vehicle-type-setting.component.ts","./src/app/main/ruleEngine/vehicle-type/vehicle-type-setting/vehicle-type-setting.component.html","./src/app/main/ruleEngine/vehicle-type/vehicle-type-routing.module.ts"],"names":[],"mappings":"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","file":"ruleEngine-vehicle-type-vehicle-type-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VehicleTypeRoutingModule } from './vehicle-type-routing.module';\nimport { VehicleTypeSettingComponent } from './vehicle-type-setting/vehicle-type-setting.component';\nimport { MaterialModules } from 'src/app/config/material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [VehicleTypeSettingComponent],\n  imports: [\n    CommonModule,\n    VehicleTypeRoutingModule,\n    MaterialModules,\n    NgbModule,\n    FormsModule,\n    TranslateModule.forChild({\n      extend: true\n   })\n  ]\n})\nexport class VehicleTypeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n//table\ninterface Transaction {\n  item: string;\n  cost: string;\n}\n\n@Component({\n  selector: 'app-vehicle-type-setting',\n  templateUrl: './vehicle-type-setting.component.html',\n  styleUrls: ['./vehicle-type-setting.component.scss']\n})\nexport class VehicleTypeSettingComponent implements OnInit {\n\n  public isCollapsed = true;\n  searchString:string;\n  \n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n//table\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Sedan', cost: 'ICE'},\n    {item: 'SUV', cost: 'ICE'},\n    {item: 'Truck', cost: 'ICE'},\n    {item: 'Mini Truck', cost: 'ICE'},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeState() {\n    this.isCollapsed = !this.isCollapsed;\n    // if (!this.isCollapsed) {\n    //   this.resetToLastState();\n    // }\n  }\n\n\n    /** Gets the total cost of all transactions. */\n    //table\n    // getTotalCost() {\n    //   return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n    // }\n    \n}\n","<div class=\"mainFilter\">\n  <div class=\"filterHeader\">\n    <!-- {{\"sidebar.exceptions\" | translate}} -->\n    Vehicle type settings\n    <div>\n      <button class=\"btn btnFiliter\" (click)=\"changeState()\" [attr.aria-expanded]=\"!isCollapsed\"\n        aria-controls=\"collapseExample\"><img src=\"assets/images/filter.svg\">\n      </button> <button class=\"btn btnFilterExport enable-click-event\"><img src=\"assets/images/export.svg\"></button>\n    </div>\n  </div>\n  <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isCollapsed\">\n    <div class=\"filterBody\">\n      <div class=\"filterBodyTitle\">\n        <h4>Filters</h4>\n        <span><img src=\"assets/images/close-circle.svg\"></span>\n        <!-- (click)=\"resetToLastState()\" -->\n      </div>\n      <div class=\"filterSearch mb-20\">\n        <input type=\"text\" placeholder=\"Search...\" [(ngModel)]=\"searchString\" class=\"form-control\">\n        <span class=\"filterSearchIcon\"><img src=\"assets/images/search.svg\"></span>\n      </div>\n      <div class=\"profileBox\">\n        <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n          <mat-label>Select vehicle category</mat-label>\n          <mat-select multiple>\n            <!-- [formControl]=\"toppings\" -->\n            <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n          <mat-label>Select vehicle type</mat-label>\n          <mat-select multiple>\n            <!-- [formControl]=\"toppings\" -->\n            <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"d-flex flex-wrap justify-content-between mt-2\">\n        <div>\n        </div>\n        <div class=\"d-flex flex-wrap\">\n          <div>\n            <button mat-button class=\"filterBtn cancleBtn\">Cancel</button>\n            <!-- (click)=\"resetToLastState()\" -->\n          </div>\n          <div>\n            <button mat-button class=\"filterBtn applyBtn\">{{\"apply\" | translate}}</button>\n            <!-- (click)=\"filterApply()\" -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"vehicleInfo\">\n  <div class=\"d-flex flex-wrap\">\n    <h3 class=\"vehTitle\">Vehicle list</h3>\n    <span><img src=\"assets/images/export.svg\"></span>\n</div>\n\n  <div class=\"table-responsive\">\n    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8 w-100 booking-table\">\n      <!-- Item Column -->\n      <ng-container matColumnDef=\"item\">\n        <th mat-header-cell *matHeaderCellDef> Vehicle category </th>\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n        <!-- <td mat-footer-cell *matFooterCellDef> Total </td> -->\n      </ng-container>\n\n      <!-- Cost Column -->\n      <ng-container matColumnDef=\"cost\">\n        <th mat-header-cell *matHeaderCellDef> Vehicle Type </th>\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost}} </td>\n        <!-- <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td> -->\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <!-- <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr> -->\n    </table>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VehicleTypeSettingComponent } from './vehicle-type-setting/vehicle-type-setting.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VehicleTypeSettingComponent,\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VehicleTypeRoutingModule { }\n"],"sourceRoot":"webpack:///"}