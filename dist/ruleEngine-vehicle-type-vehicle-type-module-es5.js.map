{"version":3,"sources":["webpack:///src/app/main/ruleEngine/vehicle-type/vehicle-type.module.ts","webpack:///src/app/main/ruleEngine/vehicle-type/vehicle-type-setting/vehicle-type-setting.component.ts","webpack:///src/app/main/ruleEngine/vehicle-type/vehicle-type-setting/vehicle-type-setting.component.html","webpack:///src/app/main/ruleEngine/vehicle-type/vehicle-type-routing.module.ts"],"names":["VehicleTypeModule","forChild","extend","declarations","imports","VehicleTypeSettingComponent","isCollapsed","toppings","toppingList","displayedColumns","transactions","item","cost","changeState","selector","templateUrl","styleUrls","routes","path","component","pathMatch","VehicleTypeRoutingModule","exports"],"mappings":"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","file":"ruleEngine-vehicle-type-vehicle-type-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VehicleTypeRoutingModule } from './vehicle-type-routing.module';\nimport { VehicleTypeSettingComponent } from './vehicle-type-setting/vehicle-type-setting.component';\nimport { MaterialModules } from 'src/app/config/material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [VehicleTypeSettingComponent],\n  imports: [\n    CommonModule,\n    VehicleTypeRoutingModule,\n    MaterialModules,\n    NgbModule,\n    FormsModule,\n    TranslateModule.forChild({\n      extend: true\n   })\n  ]\n})\nexport class VehicleTypeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n//table\ninterface Transaction {\n  item: string;\n  cost: string;\n}\n\n@Component({\n  selector: 'app-vehicle-type-setting',\n  templateUrl: './vehicle-type-setting.component.html',\n  styleUrls: ['./vehicle-type-setting.component.scss']\n})\nexport class VehicleTypeSettingComponent implements OnInit {\n\n  public isCollapsed = true;\n  searchString:string;\n  \n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n//table\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Sedan', cost: 'ICE'},\n    {item: 'SUV', cost: 'ICE'},\n    {item: 'Truck', cost: 'ICE'},\n    {item: 'Mini Truck', cost: 'ICE'},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeState() {\n    this.isCollapsed = !this.isCollapsed;\n    // if (!this.isCollapsed) {\n    //   this.resetToLastState();\n    // }\n  }\n\n\n    /** Gets the total cost of all transactions. */\n    //table\n    // getTotalCost() {\n    //   return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n    // }\n    \n}\n","<div class=\"mainFilter\">\n  <div class=\"filterHeader\">\n    <!-- {{\"sidebar.exceptions\" | translate}} -->\n    Vehicle type settings\n    <div>\n      <button class=\"btn btnFiliter\" (click)=\"changeState()\" [attr.aria-expanded]=\"!isCollapsed\"\n        aria-controls=\"collapseExample\"><img src=\"assets/images/filter.svg\">\n      </button> <button class=\"btn btnFilterExport enable-click-event\"><img src=\"assets/images/export.svg\"></button>\n    </div>\n  </div>\n  <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isCollapsed\">\n    <div class=\"filterBody\">\n      <div class=\"filterBodyTitle\">\n        <h4>Filters</h4>\n        <span><img src=\"assets/images/close-circle.svg\"></span>\n        <!-- (click)=\"resetToLastState()\" -->\n      </div>\n      <div class=\"filterSearch mb-20\">\n        <input type=\"text\" placeholder=\"Search...\" [(ngModel)]=\"searchString\" class=\"form-control\">\n        <span class=\"filterSearchIcon\"><img src=\"assets/images/search.svg\"></span>\n      </div>\n      <div class=\"profileBox\">\n        <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n          <mat-label>Select vehicle category</mat-label>\n          <mat-select multiple>\n            <!-- [formControl]=\"toppings\" -->\n            <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"fields fileld50\" appearance=\"outline\">\n          <mat-label>Select vehicle type</mat-label>\n          <mat-select multiple>\n            <!-- [formControl]=\"toppings\" -->\n            <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"d-flex flex-wrap justify-content-between mt-2\">\n        <div>\n        </div>\n        <div class=\"d-flex flex-wrap\">\n          <div>\n            <button mat-button class=\"filterBtn cancleBtn\">Cancel</button>\n            <!-- (click)=\"resetToLastState()\" -->\n          </div>\n          <div>\n            <button mat-button class=\"filterBtn applyBtn\">{{\"apply\" | translate}}</button>\n            <!-- (click)=\"filterApply()\" -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"vehicleInfo\">\n  <div class=\"d-flex flex-wrap\">\n    <h3 class=\"vehTitle\">Vehicle list</h3>\n    <span><img src=\"assets/images/export.svg\"></span>\n</div>\n\n  <div class=\"table-responsive\">\n    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8 w-100 booking-table\">\n      <!-- Item Column -->\n      <ng-container matColumnDef=\"item\">\n        <th mat-header-cell *matHeaderCellDef> Vehicle category </th>\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n        <!-- <td mat-footer-cell *matFooterCellDef> Total </td> -->\n      </ng-container>\n\n      <!-- Cost Column -->\n      <ng-container matColumnDef=\"cost\">\n        <th mat-header-cell *matHeaderCellDef> Vehicle Type </th>\n        <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost}} </td>\n        <!-- <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td> -->\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <!-- <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr> -->\n    </table>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VehicleTypeSettingComponent } from './vehicle-type-setting/vehicle-type-setting.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VehicleTypeSettingComponent,\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VehicleTypeRoutingModule { }\n"]}